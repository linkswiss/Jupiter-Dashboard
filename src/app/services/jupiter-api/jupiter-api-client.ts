import { ApiClientBase, ApiConfig } from './jupiter-api-client-base';
/* tslint:disable */
/* eslint-disable */
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.1.5.0 (NJsonSchema v10.0.27.0 (Newtonsoft.Json v12.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------
// ReSharper disable InconsistentNaming

export class HotelClient extends ApiClientBase {
  private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };
  private baseUrl: string;
  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

  constructor(configuration: ApiConfig, baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {
    super(configuration);
    this.http = http ? http : <any>window;
    this.baseUrl = baseUrl ? baseUrl : "http://localhost:5000";
  }

  /**
   * Hotel Chain List
   */
  chainList(request: JupiterHotelChainListRQ): Promise<JupiterHotelChainListRS> {
    let url_ = this.baseUrl + "/jupiter-api/1/Hotel/chain-list";
    url_ = url_.replace(/[?&]$/, "");

    const content_ = JSON.stringify(request);

    let options_ = <RequestInit>{
      body: content_,
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processChainList(_response);
    });
  }

  protected processChainList(response: Response): Promise<JupiterHotelChainListRS> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200) {
      return response.text().then((_responseText) => {
        let result200: any = null;
        let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
        result200 = JupiterHotelChainListRS.fromJS(resultData200);
        return result200;
      });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<JupiterHotelChainListRS>(<any>null);
  }

  /**
   * Hotel Availability
   */
  avail(request: JupiterHotelAvailabilityRQ): Promise<JupiterHotelAvailabilityRS> {
    let url_ = this.baseUrl + "/jupiter-api/1/Hotel/avail";
    url_ = url_.replace(/[?&]$/, "");

    const content_ = JSON.stringify(request);

    let options_ = <RequestInit>{
      body: content_,
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processAvail(_response);
    });
  }

  protected processAvail(response: Response): Promise<JupiterHotelAvailabilityRS> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200) {
      return response.text().then((_responseText) => {
        let result200: any = null;
        let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
        result200 = JupiterHotelAvailabilityRS.fromJS(resultData200);
        return result200;
      });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<JupiterHotelAvailabilityRS>(<any>null);
  }

  /**
   * Hotel Single Availability
   */
  singleHotelAvail(request: JupiterSingleHotelAvailabilityRQ): Promise<JupiterSingleHotelAvailabilityRS> {
    let url_ = this.baseUrl + "/jupiter-api/1/Hotel/single-hotel-avail";
    url_ = url_.replace(/[?&]$/, "");

    const content_ = JSON.stringify(request);

    let options_ = <RequestInit>{
      body: content_,
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processSingleHotelAvail(_response);
    });
  }

  protected processSingleHotelAvail(response: Response): Promise<JupiterSingleHotelAvailabilityRS> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200) {
      return response.text().then((_responseText) => {
        let result200: any = null;
        let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
        result200 = JupiterSingleHotelAvailabilityRS.fromJS(resultData200);
        return result200;
      });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<JupiterSingleHotelAvailabilityRS>(<any>null);
  }

  /**
   * Hotel Calendar Availability
   */
  calendarHotelAvail(request: JupiterHotelCalendarAvailabilityRQ): Promise<JupiterHotelCalendarAvailabilityRS> {
    let url_ = this.baseUrl + "/jupiter-api/1/Hotel/calendar-avail";
    url_ = url_.replace(/[?&]$/, "");

    const content_ = JSON.stringify(request);

    let options_ = <RequestInit>{
      body: content_,
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processCalendarHotelAvail(_response);
    });
  }

  protected processCalendarHotelAvail(response: Response): Promise<JupiterHotelCalendarAvailabilityRS> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200) {
      return response.text().then((_responseText) => {
        let result200: any = null;
        let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
        result200 = JupiterHotelCalendarAvailabilityRS.fromJS(resultData200);
        return result200;
      });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<JupiterHotelCalendarAvailabilityRS>(<any>null);
  }

  /**
   * Hotel Extras Availability
   */
  extrasHotelAvail(request: JupiterHotelAvailabilityExtrasRQ): Promise<JupiterHotelAvailabilityExtrasRS> {
    let url_ = this.baseUrl + "/jupiter-api/1/Hotel/extras-avail";
    url_ = url_.replace(/[?&]$/, "");

    const content_ = JSON.stringify(request);

    let options_ = <RequestInit>{
      body: content_,
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processExtrasHotelAvail(_response);
    });
  }

  protected processExtrasHotelAvail(response: Response): Promise<JupiterHotelAvailabilityExtrasRS> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200) {
      return response.text().then((_responseText) => {
        let result200: any = null;
        let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
        result200 = JupiterHotelAvailabilityExtrasRS.fromJS(resultData200);
        return result200;
      });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<JupiterHotelAvailabilityExtrasRS>(<any>null);
  }

  /**
   * Hotel Details
   */
  hotelDetails(request: JupiterHotelDetailRQ): Promise<JupiterHotelDetailRS> {
    let url_ = this.baseUrl + "/jupiter-api/1/Hotel/hotel-details";
    url_ = url_.replace(/[?&]$/, "");

    const content_ = JSON.stringify(request);

    let options_ = <RequestInit>{
      body: content_,
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processHotelDetails(_response);
    });
  }

  protected processHotelDetails(response: Response): Promise<JupiterHotelDetailRS> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200) {
      return response.text().then((_responseText) => {
        let result200: any = null;
        let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
        result200 = JupiterHotelDetailRS.fromJS(resultData200);
        return result200;
      });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<JupiterHotelDetailRS>(<any>null);
  }

  /**
   * Hotel Book
   */
  hotelBook(request: JupiterHotelBookRQ): Promise<JupiterHotelBookRS> {
    let url_ = this.baseUrl + "/jupiter-api/1/Hotel/hotel-book";
    url_ = url_.replace(/[?&]$/, "");

    const content_ = JSON.stringify(request);

    let options_ = <RequestInit>{
      body: content_,
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processHotelBook(_response);
    });
  }

  protected processHotelBook(response: Response): Promise<JupiterHotelBookRS> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200) {
      return response.text().then((_responseText) => {
        let result200: any = null;
        let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
        result200 = JupiterHotelBookRS.fromJS(resultData200);
        return result200;
      });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<JupiterHotelBookRS>(<any>null);
  }

  /**
   * Hotel Book Modify
   */
  hotelBookModify(request: JupiterHotelBookModifyRQ): Promise<JupiterHotelBookModifyRS> {
    let url_ = this.baseUrl + "/jupiter-api/1/Hotel/hotel-book-modify";
    url_ = url_.replace(/[?&]$/, "");

    const content_ = JSON.stringify(request);

    let options_ = <RequestInit>{
      body: content_,
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processHotelBookModify(_response);
    });
  }

  protected processHotelBookModify(response: Response): Promise<JupiterHotelBookModifyRS> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200) {
      return response.text().then((_responseText) => {
        let result200: any = null;
        let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
        result200 = JupiterHotelBookModifyRS.fromJS(resultData200);
        return result200;
      });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<JupiterHotelBookModifyRS>(<any>null);
  }

  /**
   * Hotel Book Cancel
   */
  hotelBookCancel(request: JupiterHotelBookCancelRQ): Promise<JupiterHotelBookCancelRS> {
    let url_ = this.baseUrl + "/jupiter-api/1/Hotel/hotel-book-cancel";
    url_ = url_.replace(/[?&]$/, "");

    const content_ = JSON.stringify(request);

    let options_ = <RequestInit>{
      body: content_,
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processHotelBookCancel(_response);
    });
  }

  protected processHotelBookCancel(response: Response): Promise<JupiterHotelBookCancelRS> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200) {
      return response.text().then((_responseText) => {
        let result200: any = null;
        let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
        result200 = JupiterHotelBookCancelRS.fromJS(resultData200);
        return result200;
      });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<JupiterHotelBookCancelRS>(<any>null);
  }

  /**
   * Hotel Book Search
   */
  hotelBookSearch(request: JupiterHotelBookSearchRQ): Promise<JupiterHotelBookSearchRS> {
    let url_ = this.baseUrl + "/jupiter-api/1/Hotel/hotel-book-search";
    url_ = url_.replace(/[?&]$/, "");

    const content_ = JSON.stringify(request);

    let options_ = <RequestInit>{
      body: content_,
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processHotelBookSearch(_response);
    });
  }

  protected processHotelBookSearch(response: Response): Promise<JupiterHotelBookSearchRS> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200) {
      return response.text().then((_responseText) => {
        let result200: any = null;
        let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
        result200 = JupiterHotelBookSearchRS.fromJS(resultData200);
        return result200;
      });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<JupiterHotelBookSearchRS>(<any>null);
  }

  /**
   * Hotel Book Details
   */
  hotelBookDetails(request: JupiterHotelBookDetailRQ): Promise<JupiterHotelBookDetailRS> {
    let url_ = this.baseUrl + "/jupiter-api/1/Hotel/hotel-book-detail";
    url_ = url_.replace(/[?&]$/, "");

    const content_ = JSON.stringify(request);

    let options_ = <RequestInit>{
      body: content_,
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processHotelBookDetails(_response);
    });
  }

  protected processHotelBookDetails(response: Response): Promise<JupiterHotelBookDetailRS> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200) {
      return response.text().then((_responseText) => {
        let result200: any = null;
        let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
        result200 = JupiterHotelBookDetailRS.fromJS(resultData200);
        return result200;
      });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<JupiterHotelBookDetailRS>(<any>null);
  }

  /**
   * Hotel Price Verify
   */
  priceVerify(request: JupiterHotelPriceVerifyRQ): Promise<JupiterHotelPriceVerifyRS> {
    let url_ = this.baseUrl + "/jupiter-api/1/Hotel/price-verify";
    url_ = url_.replace(/[?&]$/, "");

    const content_ = JSON.stringify(request);

    let options_ = <RequestInit>{
      body: content_,
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processPriceVerify(_response);
    });
  }

  protected processPriceVerify(response: Response): Promise<JupiterHotelPriceVerifyRS> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200) {
      return response.text().then((_responseText) => {
        let result200: any = null;
        let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
        result200 = JupiterHotelPriceVerifyRS.fromJS(resultData200);
        return result200;
      });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<JupiterHotelPriceVerifyRS>(<any>null);
  }
}

export class TrainClient extends ApiClientBase {
  private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };
  private baseUrl: string;
  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

  constructor(configuration: ApiConfig, baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {
    super(configuration);
    this.http = http ? http : <any>window;
    this.baseUrl = baseUrl ? baseUrl : "http://localhost:5000";
  }

  /**
   * Train Availability
   */
  avail(request: JupiterTrainAvailabilityRQ): Promise<JupiterTrainAvailabilityRS> {
    let url_ = this.baseUrl + "/jupiter-api/1/Train/avail";
    url_ = url_.replace(/[?&]$/, "");

    const content_ = JSON.stringify(request);

    let options_ = <RequestInit>{
      body: content_,
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processAvail(_response);
    });
  }

  protected processAvail(response: Response): Promise<JupiterTrainAvailabilityRS> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200) {
      return response.text().then((_responseText) => {
        let result200: any = null;
        let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
        result200 = JupiterTrainAvailabilityRS.fromJS(resultData200);
        return result200;
      });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<JupiterTrainAvailabilityRS>(<any>null);
  }

  /**
   * Train Book
   */
  book(request: JupiterTrainBookRQ): Promise<JupiterTrainBookRS> {
    let url_ = this.baseUrl + "/jupiter-api/1/Train/book";
    url_ = url_.replace(/[?&]$/, "");

    const content_ = JSON.stringify(request);

    let options_ = <RequestInit>{
      body: content_,
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processBook(_response);
    });
  }

  protected processBook(response: Response): Promise<JupiterTrainBookRS> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200) {
      return response.text().then((_responseText) => {
        let result200: any = null;
        let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
        result200 = JupiterTrainBookRS.fromJS(resultData200);
        return result200;
      });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<JupiterTrainBookRS>(<any>null);
  }
}

export class DestinationClient extends ApiClientBase {
  private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };
  private baseUrl: string;
  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

  constructor(configuration: ApiConfig, baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {
    super(configuration);
    this.http = http ? http : <any>window;
    this.baseUrl = baseUrl ? baseUrl : "http://localhost:5000";
  }

  /**
   * Destination List
   */
  destinationList(request: JupiterDestinationListRQ): Promise<JupiterDestinationListRS> {
    let url_ = this.baseUrl + "/jupiter-api/1/Destination/destination-list";
    url_ = url_.replace(/[?&]$/, "");

    const content_ = JSON.stringify(request);

    let options_ = <RequestInit>{
      body: content_,
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processDestinationList(_response);
    });
  }

  protected processDestinationList(response: Response): Promise<JupiterDestinationListRS> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200) {
      return response.text().then((_responseText) => {
        let result200: any = null;
        let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
        result200 = JupiterDestinationListRS.fromJS(resultData200);
        return result200;
      });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<JupiterDestinationListRS>(<any>null);
  }
}

export class FlightClient extends ApiClientBase {
  private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };
  private baseUrl: string;
  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

  constructor(configuration: ApiConfig, baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {
    super(configuration);
    this.http = http ? http : <any>window;
    this.baseUrl = baseUrl ? baseUrl : "http://localhost:5000";
  }

  /**
   * Flight Availability
   */
  flightAvail(request: JupiterFlightAvailabilityRQ): Promise<JupiterFlightAvailabilityRS> {
    let url_ = this.baseUrl + "/jupiter-api/1/Flight/avail";
    url_ = url_.replace(/[?&]$/, "");

    const content_ = JSON.stringify(request);

    let options_ = <RequestInit>{
      body: content_,
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processFlightAvail(_response);
    });
  }

  protected processFlightAvail(response: Response): Promise<JupiterFlightAvailabilityRS> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200) {
      return response.text().then((_responseText) => {
        let result200: any = null;
        let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
        result200 = JupiterFlightAvailabilityRS.fromJS(resultData200);
        return result200;
      });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<JupiterFlightAvailabilityRS>(<any>null);
  }

  /**
   * Flight Details
   */
  flightDetails(request: JupiterFlightDetailRQ): Promise<JupiterFlightDetailRS> {
    let url_ = this.baseUrl + "/jupiter-api/1/Flight/details";
    url_ = url_.replace(/[?&]$/, "");

    const content_ = JSON.stringify(request);

    let options_ = <RequestInit>{
      body: content_,
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processFlightDetails(_response);
    });
  }

  protected processFlightDetails(response: Response): Promise<JupiterFlightDetailRS> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200) {
      return response.text().then((_responseText) => {
        let result200: any = null;
        let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
        result200 = JupiterFlightDetailRS.fromJS(resultData200);
        return result200;
      });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<JupiterFlightDetailRS>(<any>null);
  }

  /**
   * Flight PNR Price Verify
   */
  flightPnrPriceVerify(request: JupiterFlightPnrPriceVerifyRQ): Promise<JupiterFlightPnrPriceVerifyRS> {
    let url_ = this.baseUrl + "/jupiter-api/1/Flight/pnr-price-verify";
    url_ = url_.replace(/[?&]$/, "");

    const content_ = JSON.stringify(request);

    let options_ = <RequestInit>{
      body: content_,
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processFlightPnrPriceVerify(_response);
    });
  }

  protected processFlightPnrPriceVerify(response: Response): Promise<JupiterFlightPnrPriceVerifyRS> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200) {
      return response.text().then((_responseText) => {
        let result200: any = null;
        let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
        result200 = JupiterFlightPnrPriceVerifyRS.fromJS(resultData200);
        return result200;
      });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<JupiterFlightPnrPriceVerifyRS>(<any>null);
  }

  /**
   * Flight Book
   */
  flightBook(request: JupiterFlightBookRQ): Promise<JupiterFlightBookRS> {
    let url_ = this.baseUrl + "/jupiter-api/1/Flight/book";
    url_ = url_.replace(/[?&]$/, "");

    const content_ = JSON.stringify(request);

    let options_ = <RequestInit>{
      body: content_,
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processFlightBook(_response);
    });
  }

  protected processFlightBook(response: Response): Promise<JupiterFlightBookRS> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200) {
      return response.text().then((_responseText) => {
        let result200: any = null;
        let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
        result200 = JupiterFlightBookRS.fromJS(resultData200);
        return result200;
      });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<JupiterFlightBookRS>(<any>null);
  }

  /**
   * Flight PNR Retrieve
   */
  flightPnrRetrieve(request: JupiterFlightPnrRetrieveRQ): Promise<JupiterFlightPnrRetrieveRS> {
    let url_ = this.baseUrl + "/jupiter-api/1/Flight/pnr-retrieve";
    url_ = url_.replace(/[?&]$/, "");

    const content_ = JSON.stringify(request);

    let options_ = <RequestInit>{
      body: content_,
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processFlightPnrRetrieve(_response);
    });
  }

  protected processFlightPnrRetrieve(response: Response): Promise<JupiterFlightPnrRetrieveRS> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200) {
      return response.text().then((_responseText) => {
        let result200: any = null;
        let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
        result200 = JupiterFlightPnrRetrieveRS.fromJS(resultData200);
        return result200;
      });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<JupiterFlightPnrRetrieveRS>(<any>null);
  }
}

export class SessionAndCrypticClient extends ApiClientBase {
  private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };
  private baseUrl: string;
  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

  constructor(configuration: ApiConfig, baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {
    super(configuration);
    this.http = http ? http : <any>window;
    this.baseUrl = baseUrl ? baseUrl : "http://localhost:5000";
  }

  /**
   * GDS Cryptic Command
   */
  cryptic(request: JupiterCrypticRQ): Promise<JupiterCrypticRS> {
    let url_ = this.baseUrl + "/jupiter-api/1/SessionAndCryptic/cryptic";
    url_ = url_.replace(/[?&]$/, "");

    const content_ = JSON.stringify(request);

    let options_ = <RequestInit>{
      body: content_,
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processCryptic(_response);
    });
  }

  protected processCryptic(response: Response): Promise<JupiterCrypticRS> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200) {
      return response.text().then((_responseText) => {
        let result200: any = null;
        let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
        result200 = JupiterCrypticRS.fromJS(resultData200);
        return result200;
      });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<JupiterCrypticRS>(<any>null);
  }

  /**
   * GDS Session Create
   */
  sessionCreate(request: JupiterSessionCreateRQ): Promise<JupiterSessionCreateRS> {
    let url_ = this.baseUrl + "/jupiter-api/1/SessionAndCryptic/session-create";
    url_ = url_.replace(/[?&]$/, "");

    const content_ = JSON.stringify(request);

    let options_ = <RequestInit>{
      body: content_,
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processSessionCreate(_response);
    });
  }

  protected processSessionCreate(response: Response): Promise<JupiterSessionCreateRS> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200) {
      return response.text().then((_responseText) => {
        let result200: any = null;
        let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
        result200 = JupiterSessionCreateRS.fromJS(resultData200);
        return result200;
      });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<JupiterSessionCreateRS>(<any>null);
  }

  /**
   * GDS Session Close
   */
  sessionClose(request: JupiterSessionCloseRQ): Promise<JupiterSessionCloseRS> {
    let url_ = this.baseUrl + "/jupiter-api/1/SessionAndCryptic/session-close";
    url_ = url_.replace(/[?&]$/, "");

    const content_ = JSON.stringify(request);

    let options_ = <RequestInit>{
      body: content_,
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processSessionClose(_response);
    });
  }

  protected processSessionClose(response: Response): Promise<JupiterSessionCloseRS> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200) {
      return response.text().then((_responseText) => {
        let result200: any = null;
        let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
        result200 = JupiterSessionCloseRS.fromJS(resultData200);
        return result200;
      });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<JupiterSessionCloseRS>(<any>null);
  }

  /**
   * GDS Session Refresh
   */
  sessionRefresh(request: JupiterSessionRefreshRQ): Promise<JupiterSessionRefreshRS> {
    let url_ = this.baseUrl + "/jupiter-api/1/SessionAndCryptic/session-refresh";
    url_ = url_.replace(/[?&]$/, "");

    const content_ = JSON.stringify(request);

    let options_ = <RequestInit>{
      body: content_,
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processSessionRefresh(_response);
    });
  }

  protected processSessionRefresh(response: Response): Promise<JupiterSessionRefreshRS> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200) {
      return response.text().then((_responseText) => {
        let result200: any = null;
        let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
        result200 = JupiterSessionRefreshRS.fromJS(resultData200);
        return result200;
      });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<JupiterSessionRefreshRS>(<any>null);
  }

  /**
   * GDS Token Create
   */
  sessionTokenCreate(request: JupiterSessionTokenCreateRQ): Promise<JupiterSessionTokenCreateRS> {
    let url_ = this.baseUrl + "/jupiter-api/1/SessionAndCryptic/session-token-create";
    url_ = url_.replace(/[?&]$/, "");

    const content_ = JSON.stringify(request);

    let options_ = <RequestInit>{
      body: content_,
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processSessionTokenCreate(_response);
    });
  }

  protected processSessionTokenCreate(response: Response): Promise<JupiterSessionTokenCreateRS> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200) {
      return response.text().then((_responseText) => {
        let result200: any = null;
        let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
        result200 = JupiterSessionTokenCreateRS.fromJS(resultData200);
        return result200;
      });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<JupiterSessionTokenCreateRS>(<any>null);
  }

  /**
   * GDS Ignore Transaction
   */
  ignoreTransaction(request: JupiterIgnoreTransactionRQ): Promise<JupiterIgnoreTransactionRS> {
    let url_ = this.baseUrl + "/jupiter-api/1/SessionAndCryptic/ignore-transaction";
    url_ = url_.replace(/[?&]$/, "");

    const content_ = JSON.stringify(request);

    let options_ = <RequestInit>{
      body: content_,
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processIgnoreTransaction(_response);
    });
  }

  protected processIgnoreTransaction(response: Response): Promise<JupiterIgnoreTransactionRS> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200) {
      return response.text().then((_responseText) => {
        let result200: any = null;
        let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
        result200 = JupiterIgnoreTransactionRS.fromJS(resultData200);
        return result200;
      });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<JupiterIgnoreTransactionRS>(<any>null);
  }
}

export class SabreClient extends ApiClientBase {
  private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };
  private baseUrl: string;
  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

  constructor(configuration: ApiConfig, baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {
    super(configuration);
    this.http = http ? http : <any>window;
    this.baseUrl = baseUrl ? baseUrl : "http://localhost:5000";
  }

  encodeDecode(request: JupiterConnectorCustomRQOfEncodeDecodeInput): Promise<JupiterConnectorCustomRSOfEncodeDecodeOutput> {
    let url_ = this.baseUrl + "/jupiter-api/1/Sabre/encode-decode";
    url_ = url_.replace(/[?&]$/, "");

    const content_ = JSON.stringify(request);

    let options_ = <RequestInit>{
      body: content_,
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processEncodeDecode(_response);
    });
  }

  protected processEncodeDecode(response: Response): Promise<JupiterConnectorCustomRSOfEncodeDecodeOutput> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200) {
      return response.text().then((_responseText) => {
        let result200: any = null;
        let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
        result200 = JupiterConnectorCustomRSOfEncodeDecodeOutput.fromJS(resultData200);
        return result200;
      });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<JupiterConnectorCustomRSOfEncodeDecodeOutput>(<any>null);
  }

  /**
   * Change Pcc Method
   */
  changePcc(request: JupiterConnectorCustomRQOfChangePccInput): Promise<JupiterConnectorCustomRSOfChangePccOutput> {
    let url_ = this.baseUrl + "/jupiter-api/1/Sabre/change-pcc";
    url_ = url_.replace(/[?&]$/, "");

    const content_ = JSON.stringify(request);

    let options_ = <RequestInit>{
      body: content_,
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processChangePcc(_response);
    });
  }

  protected processChangePcc(response: Response): Promise<JupiterConnectorCustomRSOfChangePccOutput> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200) {
      return response.text().then((_responseText) => {
        let result200: any = null;
        let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
        result200 = JupiterConnectorCustomRSOfChangePccOutput.fromJS(resultData200);
        return result200;
      });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<JupiterConnectorCustomRSOfChangePccOutput>(<any>null);
  }

  /**
   * Delete Pnr Method
   */
  deletePnr(request: JupiterConnectorCustomRQOfDeletePnrInput): Promise<JupiterConnectorCustomRSOfDeletePnrOutput> {
    let url_ = this.baseUrl + "/jupiter-api/1/Sabre/delete-pnr";
    url_ = url_.replace(/[?&]$/, "");

    const content_ = JSON.stringify(request);

    let options_ = <RequestInit>{
      body: content_,
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/json"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processDeletePnr(_response);
    });
  }

  protected processDeletePnr(response: Response): Promise<JupiterConnectorCustomRSOfDeletePnrOutput> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200) {
      return response.text().then((_responseText) => {
        let result200: any = null;
        let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
        result200 = JupiterConnectorCustomRSOfDeletePnrOutput.fromJS(resultData200);
        return result200;
      });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<JupiterConnectorCustomRSOfDeletePnrOutput>(<any>null);
  }
}

export class TravelFusionClient extends ApiClientBase {
  private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };
  private baseUrl: string;
  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

  constructor(configuration: ApiConfig, baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {
    super(configuration);
    this.http = http ? http : <any>window;
    this.baseUrl = baseUrl ? baseUrl : "http://localhost:5000";
  }

  test(): Promise<JupiterFlightPnrRetrieveRS> {
    let url_ = this.baseUrl + "/jupiter-api/1/TravelFusion/test";
    url_ = url_.replace(/[?&]$/, "");

    let options_ = <RequestInit>{
      method: "GET",
      headers: {
        "Accept": "application/json"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processTest(_response);
    });
  }

  protected processTest(response: Response): Promise<JupiterFlightPnrRetrieveRS> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200) {
      return response.text().then((_responseText) => {
        let result200: any = null;
        let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
        result200 = JupiterFlightPnrRetrieveRS.fromJS(resultData200);
        return result200;
      });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<JupiterFlightPnrRetrieveRS>(<any>null);
  }
}

export class UtilityClient extends ApiClientBase {
  private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };
  private baseUrl: string;
  protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;

  constructor(configuration: ApiConfig, baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {
    super(configuration);
    this.http = http ? http : <any>window;
    this.baseUrl = baseUrl ? baseUrl : "http://localhost:5000";
  }

  /**
   * Utility get Version
   */
  getVersion(): Promise<string> {
    let url_ = this.baseUrl + "/jupiter-api/1/Utility/version";
    url_ = url_.replace(/[?&]$/, "");

    let options_ = <RequestInit>{
      method: "GET",
      headers: {
        "Accept": "application/json"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processGetVersion(_response);
    });
  }

  protected processGetVersion(response: Response): Promise<string> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200) {
      return response.text().then((_responseText) => {
        let result200: any = null;
        let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
        result200 = resultData200 !== undefined ? resultData200 : <any>null;
        return result200;
      });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<string>(<any>null);
  }

  /**
   * Utility get ApiName
   */
  getApiName(): Promise<string> {
    let url_ = this.baseUrl + "/jupiter-api/1/Utility/api-name";
    url_ = url_.replace(/[?&]$/, "");

    let options_ = <RequestInit>{
      method: "GET",
      headers: {
        "Accept": "application/json"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processGetApiName(_response);
    });
  }

  protected processGetApiName(response: Response): Promise<string> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200) {
      return response.text().then((_responseText) => {
        let result200: any = null;
        let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
        result200 = resultData200 !== undefined ? resultData200 : <any>null;
        return result200;
      });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<string>(<any>null);
  }

  /**
   * Utility Ping
   */
  getPing(): Promise<JupiterPingRS> {
    let url_ = this.baseUrl + "/jupiter-api/1/Utility/ping";
    url_ = url_.replace(/[?&]$/, "");

    let options_ = <RequestInit>{
      method: "GET",
      headers: {
        "Accept": "application/json"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processGetPing(_response);
    });
  }

  protected processGetPing(response: Response): Promise<JupiterPingRS> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200) {
      return response.text().then((_responseText) => {
        let result200: any = null;
        let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
        result200 = JupiterPingRS.fromJS(resultData200);
        return result200;
      });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<JupiterPingRS>(<any>null);
  }

  /**
   * Utility Settings
   */
  getSettings(): Promise<AppSettings> {
    let url_ = this.baseUrl + "/jupiter-api/1/Utility/settings";
    url_ = url_.replace(/[?&]$/, "");

    let options_ = <RequestInit>{
      method: "GET",
      headers: {
        "Accept": "application/json"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processGetSettings(_response);
    });
  }

  protected processGetSettings(response: Response): Promise<AppSettings> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200) {
      return response.text().then((_responseText) => {
        let result200: any = null;
        let resultData200 = _responseText === "" ? null : JSON.parse(_responseText, this.jsonParseReviver);
        result200 = AppSettings.fromJS(resultData200);
        return result200;
      });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<AppSettings>(<any>null);
  }

  /**
   * Utility Generate a TypescriptClient form Swagger definition url
   */
  generateTypescriptClient(swaggerSpecUrl: SwaggerUrlRQ): Promise<FileResponse> {
    let url_ = this.baseUrl + "/jupiter-api/1/Utility/typescript-client";
    url_ = url_.replace(/[?&]$/, "");

    const content_ = JSON.stringify(swaggerSpecUrl);

    let options_ = <RequestInit>{
      body: content_,
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/octet-stream"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processGenerateTypescriptClient(_response);
    });
  }

  protected processGenerateTypescriptClient(response: Response): Promise<FileResponse> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200 || status === 206) {
      const contentDisposition = response.headers ? response.headers.get("content-disposition") : undefined;
      const fileNameMatch = contentDisposition ? /filename="?([^"]*?)"?(;|$)/g.exec(contentDisposition) : undefined;
      const fileName = fileNameMatch && fileNameMatch.length > 1 ? fileNameMatch[1] : undefined;
      return response.blob().then(blob => { return { fileName: fileName, data: blob, status: status, headers: _headers }; });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<FileResponse>(<any>null);
  }

  /**
   * Utility Generate a TypescriptClient for Jupiter
   */
  generateJupiterTypescriptClient(): Promise<FileResponse> {
    let url_ = this.baseUrl + "/jupiter-api/1/Utility/jupiter-typescript-client";
    url_ = url_.replace(/[?&]$/, "");

    let options_ = <RequestInit>{
      method: "GET",
      headers: {
        "Accept": "application/octet-stream"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processGenerateJupiterTypescriptClient(_response);
    });
  }

  protected processGenerateJupiterTypescriptClient(response: Response): Promise<FileResponse> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200 || status === 206) {
      const contentDisposition = response.headers ? response.headers.get("content-disposition") : undefined;
      const fileNameMatch = contentDisposition ? /filename="?([^"]*?)"?(;|$)/g.exec(contentDisposition) : undefined;
      const fileName = fileNameMatch && fileNameMatch.length > 1 ? fileNameMatch[1] : undefined;
      return response.blob().then(blob => { return { fileName: fileName, data: blob, status: status, headers: _headers }; });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<FileResponse>(<any>null);
  }

  /**
   * Utility Generate a C# CLIENT form Swagger definition url
   */
  generateCSharpClient(swaggerSpecUrl: SwaggerUrlRQ): Promise<FileResponse> {
    let url_ = this.baseUrl + "/jupiter-api/1/Utility/csharp-client";
    url_ = url_.replace(/[?&]$/, "");

    const content_ = JSON.stringify(swaggerSpecUrl);

    let options_ = <RequestInit>{
      body: content_,
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Accept": "application/octet-stream"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processGenerateCSharpClient(_response);
    });
  }

  protected processGenerateCSharpClient(response: Response): Promise<FileResponse> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200 || status === 206) {
      const contentDisposition = response.headers ? response.headers.get("content-disposition") : undefined;
      const fileNameMatch = contentDisposition ? /filename="?([^"]*?)"?(;|$)/g.exec(contentDisposition) : undefined;
      const fileName = fileNameMatch && fileNameMatch.length > 1 ? fileNameMatch[1] : undefined;
      return response.blob().then(blob => { return { fileName: fileName, data: blob, status: status, headers: _headers }; });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<FileResponse>(<any>null);
  }

  /**
   * Utility Generate a C# CLIENT for Jupiter
   */
  generateJupiterCSharpClient(): Promise<FileResponse> {
    let url_ = this.baseUrl + "/jupiter-api/1/Utility/jupiter-csharp-client";
    url_ = url_.replace(/[?&]$/, "");

    let options_ = <RequestInit>{
      method: "GET",
      headers: {
        "Accept": "application/octet-stream"
      }
    };

    return this.transformOptions(options_).then(transformedOptions_ => {
      return this.http.fetch(url_, transformedOptions_);
    }).then((_response: Response) => {
      return this.processGenerateJupiterCSharpClient(_response);
    });
  }

  protected processGenerateJupiterCSharpClient(response: Response): Promise<FileResponse> {
    const status = response.status;
    let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };
    if (status === 200 || status === 206) {
      const contentDisposition = response.headers ? response.headers.get("content-disposition") : undefined;
      const fileNameMatch = contentDisposition ? /filename="?([^"]*?)"?(;|$)/g.exec(contentDisposition) : undefined;
      const fileName = fileNameMatch && fileNameMatch.length > 1 ? fileNameMatch[1] : undefined;
      return response.blob().then(blob => { return { fileName: fileName, data: blob, status: status, headers: _headers }; });
    } else if (status !== 200 && status !== 204) {
      return response.text().then((_responseText) => {
        return throwException("An unexpected server error occurred.", status, _responseText, _headers);
      });
    }
    return Promise.resolve<FileResponse>(<any>null);
  }
}

export abstract class BaseRS implements IBaseRS {
  /** Process ID */
  Pid?: string | undefined;
  /** Status of the response */
  Status?: EOperationStatus;
  /** Message List */
  Messages?: Message[] | undefined;
  /** Response details of Connectors */
  ConnectorsResponseDetails?: ConnectorResponseDetails[] | undefined;

  constructor(data?: IBaseRS) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Pid = _data["Pid"];
      this.Status = _data["Status"];
      if (Array.isArray(_data["Messages"])) {
        this.Messages = [] as any;
        for (let item of _data["Messages"])
          this.Messages!.push(Message.fromJS(item));
      }
      if (Array.isArray(_data["ConnectorsResponseDetails"])) {
        this.ConnectorsResponseDetails = [] as any;
        for (let item of _data["ConnectorsResponseDetails"])
          this.ConnectorsResponseDetails!.push(ConnectorResponseDetails.fromJS(item));
      }
    }
  }

  static fromJS(data: any): BaseRS {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'BaseRS' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Pid"] = this.Pid;
    data["Status"] = this.Status;
    if (Array.isArray(this.Messages)) {
      data["Messages"] = [];
      for (let item of this.Messages)
        data["Messages"].push(item.toJSON());
    }
    if (Array.isArray(this.ConnectorsResponseDetails)) {
      data["ConnectorsResponseDetails"] = [];
      for (let item of this.ConnectorsResponseDetails)
        data["ConnectorsResponseDetails"].push(item.toJSON());
    }
    return data;
  }
}

export interface IBaseRS {
  /** Process ID */
  Pid?: string | undefined;
  /** Status of the response */
  Status?: EOperationStatus;
  /** Message List */
  Messages?: Message[] | undefined;
  /** Response details of Connectors */
  ConnectorsResponseDetails?: ConnectorResponseDetails[] | undefined;
}

export abstract class BaseCacheableRS extends BaseRS implements IBaseCacheableRS {
  /** Response Cache infos - details on to the current result if comes from cache or not */
  CacheResponseInfo?: CacheResponseInfo | undefined;

  constructor(data?: IBaseCacheableRS) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.CacheResponseInfo = _data["CacheResponseInfo"] ? CacheResponseInfo.fromJS(_data["CacheResponseInfo"]) : <any>undefined;
    }
  }

  static fromJS(data: any): BaseCacheableRS {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'BaseCacheableRS' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CacheResponseInfo"] = this.CacheResponseInfo ? this.CacheResponseInfo.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IBaseCacheableRS extends IBaseRS {
  /** Response Cache infos - details on to the current result if comes from cache or not */
  CacheResponseInfo?: CacheResponseInfo | undefined;
}

export class JupiterHotelChainListRS extends BaseCacheableRS implements IJupiterHotelChainListRS {
  /** JupiterHotelChainListOutput Response */
  Response?: JupiterHotelChainListOutput | undefined;

  constructor(data?: IJupiterHotelChainListRS) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Response = _data["Response"] ? JupiterHotelChainListOutput.fromJS(_data["Response"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterHotelChainListRS {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelChainListRS();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Response"] = this.Response ? this.Response.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelChainListRS extends IBaseCacheableRS {
  /** JupiterHotelChainListOutput Response */
  Response?: JupiterHotelChainListOutput | undefined;
}

export abstract class BaseOutput implements IBaseOutput {

  constructor(data?: IBaseOutput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
  }

  static fromJS(data: any): BaseOutput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'BaseOutput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    return data;
  }
}

export interface IBaseOutput {
}

export class JupiterHotelChainListOutput extends BaseOutput implements IJupiterHotelChainListOutput {
  /** List of Hotel Results */
  ChainList?: ChainDetails[] | undefined;

  constructor(data?: IJupiterHotelChainListOutput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      if (Array.isArray(_data["ChainList"])) {
        this.ChainList = [] as any;
        for (let item of _data["ChainList"])
          this.ChainList!.push(ChainDetails.fromJS(item));
      }
    }
  }

  static fromJS(data: any): JupiterHotelChainListOutput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelChainListOutput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.ChainList)) {
      data["ChainList"] = [];
      for (let item of this.ChainList)
        data["ChainList"].push(item.toJSON());
    }
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelChainListOutput extends IBaseOutput {
  /** List of Hotel Results */
  ChainList?: ChainDetails[] | undefined;
}

export class ChainDetails implements IChainDetails {
  /** Chain Id */
  Id?: string | undefined;
  /** Chain Name */
  Name?: string | undefined;
  /** List of match on the Connectors */
  ConnectorsMatch?: ConnectorMatch[] | undefined;

  constructor(data?: IChainDetails) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Id = _data["Id"];
      this.Name = _data["Name"];
      if (Array.isArray(_data["ConnectorsMatch"])) {
        this.ConnectorsMatch = [] as any;
        for (let item of _data["ConnectorsMatch"])
          this.ConnectorsMatch!.push(ConnectorMatch.fromJS(item));
      }
    }
  }

  static fromJS(data: any): ChainDetails {
    data = typeof data === 'object' ? data : {};
    let result = new ChainDetails();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Id"] = this.Id;
    data["Name"] = this.Name;
    if (Array.isArray(this.ConnectorsMatch)) {
      data["ConnectorsMatch"] = [];
      for (let item of this.ConnectorsMatch)
        data["ConnectorsMatch"].push(item.toJSON());
    }
    return data;
  }
}

export interface IChainDetails {
  /** Chain Id */
  Id?: string | undefined;
  /** Chain Name */
  Name?: string | undefined;
  /** List of match on the Connectors */
  ConnectorsMatch?: ConnectorMatch[] | undefined;
}

export class ConnectorMatch implements IConnectorMatch {
  /** Connector Code */
  ConnectorCode?: EH2HConnectorCode;
  /** Reference Id on Connector */
  RefId?: string | undefined;

  constructor(data?: IConnectorMatch) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.ConnectorCode = _data["ConnectorCode"];
      this.RefId = _data["RefId"];
    }
  }

  static fromJS(data: any): ConnectorMatch {
    data = typeof data === 'object' ? data : {};
    let result = new ConnectorMatch();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCode"] = this.ConnectorCode;
    data["RefId"] = this.RefId;
    return data;
  }
}

export interface IConnectorMatch {
  /** Connector Code */
  ConnectorCode?: EH2HConnectorCode;
  /** Reference Id on Connector */
  RefId?: string | undefined;
}

export enum EH2HConnectorCode {
  UNKNOWN = "UNKNOWN",
  BOOKING_DOT_COM = "BOOKING_DOT_COM",
  SABRE_SYNXIS = "SABRE_SYNXIS",
  AMADEUS = "AMADEUS",
  SABRE = "SABRE",
  SABRE_CSL = "SABRE_CSL",
  CREOLE = "CREOLE",
  SANDALS = "SANDALS",
  TRAVELFUSION = "TRAVELFUSION",
  IHG_GRS = "IHG_GRS",
  OKKAMI = "OKKAMI",
  HOTELBEDS = "HOTELBEDS",
  EMINDS = "EMINDS",
  EXPEDIA = "EXPEDIA",
  A_SAMPLE = "A_SAMPLE",
}

export abstract class CustomerCustomDataOfJupiterHotelChainListOutput implements ICustomerCustomDataOfJupiterHotelChainListOutput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterHotelChainListOutput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterHotelChainListOutput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterHotelChainListOutput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterHotelChainListOutput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterHotelChainListOutput {
}

export class CacheResponseInfo implements ICacheResponseInfo {
  /** Info on the current Response Cache
   true -&gt; is a Cached Response
   false -&gt; isn't a Cached Response */
  IsCachedResponse?: boolean;
  /** The Cached Item Key */
  CachedItemKey?: string | undefined;
  /** DateTime of the cached result
   it has value only if IsCachedResponse = true -&gt; is a Cached Response */
  CachedDateTimeUtc?: string | undefined;
  /** ExpirationTimeSpan of the cached Response
   it has value only if IsCachedResponse = true -&gt; is a Cached Response */
  ExpirationTimeSpan?: string | undefined;

  constructor(data?: ICacheResponseInfo) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.IsCachedResponse = _data["IsCachedResponse"];
      this.CachedItemKey = _data["CachedItemKey"];
      this.CachedDateTimeUtc = _data["CachedDateTimeUtc"];
      this.ExpirationTimeSpan = _data["ExpirationTimeSpan"];
    }
  }

  static fromJS(data: any): CacheResponseInfo {
    data = typeof data === 'object' ? data : {};
    let result = new CacheResponseInfo();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["IsCachedResponse"] = this.IsCachedResponse;
    data["CachedItemKey"] = this.CachedItemKey;
    data["CachedDateTimeUtc"] = this.CachedDateTimeUtc;
    data["ExpirationTimeSpan"] = this.ExpirationTimeSpan;
    return data;
  }
}

export interface ICacheResponseInfo {
  /** Info on the current Response Cache
   true -&gt; is a Cached Response
   false -&gt; isn't a Cached Response */
  IsCachedResponse?: boolean;
  /** The Cached Item Key */
  CachedItemKey?: string | undefined;
  /** DateTime of the cached result
   it has value only if IsCachedResponse = true -&gt; is a Cached Response */
  CachedDateTimeUtc?: string | undefined;
  /** ExpirationTimeSpan of the cached Response
   it has value only if IsCachedResponse = true -&gt; is a Cached Response */
  ExpirationTimeSpan?: string | undefined;
}

export enum EOperationStatus {
  SUCCESS = "SUCCESS",
  WARNING = "WARNING",
  ERROR = "ERROR",
}

export class Message implements IMessage {
  /** Connector Code */
  ConnectorCode?: EH2HConnectorCode | undefined;
  /** Message Type */
  Type?: EMessageType;
  /** Message Code */
  Code?: EMessageCode | undefined;
  /** Message Text */
  Text?: string | undefined;

  constructor(data?: IMessage) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.ConnectorCode = _data["ConnectorCode"];
      this.Type = _data["Type"];
      this.Code = _data["Code"];
      this.Text = _data["Text"];
    }
  }

  static fromJS(data: any): Message {
    data = typeof data === 'object' ? data : {};
    let result = new Message();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCode"] = this.ConnectorCode;
    data["Type"] = this.Type;
    data["Code"] = this.Code;
    data["Text"] = this.Text;
    return data;
  }
}

export interface IMessage {
  /** Connector Code */
  ConnectorCode?: EH2HConnectorCode | undefined;
  /** Message Type */
  Type?: EMessageType;
  /** Message Code */
  Code?: EMessageCode | undefined;
  /** Message Text */
  Text?: string | undefined;
}

export enum EMessageType {
  INFO = "INFO",
  WARNING = "WARNING",
  ERROR = "ERROR",
}

export enum EMessageCode {
  UNKNOWN = "UNKNOWN",
  INTERNAL_ERROR = "INTERNAL_ERROR",
  NOT_ENABLED_CONNECTOR = "NOT_ENABLED_CONNECTOR",
  NOT_ENABLED_OPERATION = "NOT_ENABLED_OPERATION",
  CONNECTOR_ERROR = "CONNECTOR_ERROR",
  NO_AVAIL = "NO_AVAIL",
  NO_FARE_OR_RATE = "NO_FARE_OR_RATE",
  WRONG_CC = "WRONG_CC",
  IMPOSSIBLE_TO_CANCEL = "IMPOSSIBLE_TO_CANCEL",
  BOOK_NOT_FOUND = "BOOK_NOT_FOUND",
  WRONG_INPUTS = "WRONG_INPUTS",
  PRICE_CHANGED = "PRICE_CHANGED",
  NO_RESULTS = "NO_RESULTS",
}

export class ConnectorResponseDetails implements IConnectorResponseDetails {
  /** Connector Code */
  ConnectorCode?: EH2HConnectorCode | undefined;
  /** Connector Environment */
  Environment?: string | undefined;
  /** Status of the response by the Connector */
  Status?: EH2HOperationStatus;
  /** Execution Time of the Connector Remote Call */
  ExecutionTime?: number | undefined;
  /** List of Connector Specific Messages */
  Messages?: Message[] | undefined;
  /** List of Messages Codes if any */
  MessageCodes?: EMessageCode[] | undefined;
  /** Connector Debug Data if are enabled in ConnectorsDebug (RQ) */
  ConnectorDebugData?: ConnectorDebugData | undefined;

  constructor(data?: IConnectorResponseDetails) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.ConnectorCode = _data["ConnectorCode"];
      this.Environment = _data["Environment"];
      this.Status = _data["Status"];
      this.ExecutionTime = _data["ExecutionTime"];
      if (Array.isArray(_data["Messages"])) {
        this.Messages = [] as any;
        for (let item of _data["Messages"])
          this.Messages!.push(Message.fromJS(item));
      }
      if (Array.isArray(_data["MessageCodes"])) {
        this.MessageCodes = [] as any;
        for (let item of _data["MessageCodes"])
          this.MessageCodes!.push(item);
      }
      this.ConnectorDebugData = _data["ConnectorDebugData"] ? ConnectorDebugData.fromJS(_data["ConnectorDebugData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): ConnectorResponseDetails {
    data = typeof data === 'object' ? data : {};
    let result = new ConnectorResponseDetails();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCode"] = this.ConnectorCode;
    data["Environment"] = this.Environment;
    data["Status"] = this.Status;
    data["ExecutionTime"] = this.ExecutionTime;
    if (Array.isArray(this.Messages)) {
      data["Messages"] = [];
      for (let item of this.Messages)
        data["Messages"].push(item.toJSON());
    }
    if (Array.isArray(this.MessageCodes)) {
      data["MessageCodes"] = [];
      for (let item of this.MessageCodes)
        data["MessageCodes"].push(item);
    }
    data["ConnectorDebugData"] = this.ConnectorDebugData ? this.ConnectorDebugData.toJSON() : <any>undefined;
    return data;
  }
}

export interface IConnectorResponseDetails {
  /** Connector Code */
  ConnectorCode?: EH2HConnectorCode | undefined;
  /** Connector Environment */
  Environment?: string | undefined;
  /** Status of the response by the Connector */
  Status?: EH2HOperationStatus;
  /** Execution Time of the Connector Remote Call */
  ExecutionTime?: number | undefined;
  /** List of Connector Specific Messages */
  Messages?: Message[] | undefined;
  /** List of Messages Codes if any */
  MessageCodes?: EMessageCode[] | undefined;
  /** Connector Debug Data if are enabled in ConnectorsDebug (RQ) */
  ConnectorDebugData?: ConnectorDebugData | undefined;
}

export enum EH2HOperationStatus {
  START = "START",
  PENDING = "PENDING",
  SUCCESS = "SUCCESS",
  WARNING = "WARNING",
  ERROR = "ERROR",
}

export class ConnectorDebugData implements IConnectorDebugData {
  /** Connector Request */
  Request?: string | undefined;
  /** Connector Response */
  Response?: string | undefined;

  constructor(data?: IConnectorDebugData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Request = _data["Request"];
      this.Response = _data["Response"];
    }
  }

  static fromJS(data: any): ConnectorDebugData {
    data = typeof data === 'object' ? data : {};
    let result = new ConnectorDebugData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Request"] = this.Request;
    data["Response"] = this.Response;
    return data;
  }
}

export interface IConnectorDebugData {
  /** Connector Request */
  Request?: string | undefined;
  /** Connector Response */
  Response?: string | undefined;
}

export abstract class BaseRQ implements IBaseRQ {
  /** Process ID */
  Pid?: string | undefined;
  /** Lst of DefaultConnectorEnvironment
   Used to identify which Environment the current RQ should use.
   The process will use the first ConnectorCode Environment value if any
   Otherwise it will use the default set up in the AppSettings */
  ConnectorsEnvironment?: ConnectorEnvironment[] | undefined;

  constructor(data?: IBaseRQ) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Pid = _data["Pid"];
      if (Array.isArray(_data["ConnectorsEnvironment"])) {
        this.ConnectorsEnvironment = [] as any;
        for (let item of _data["ConnectorsEnvironment"])
          this.ConnectorsEnvironment!.push(ConnectorEnvironment.fromJS(item));
      }
    }
  }

  static fromJS(data: any): BaseRQ {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'BaseRQ' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Pid"] = this.Pid;
    if (Array.isArray(this.ConnectorsEnvironment)) {
      data["ConnectorsEnvironment"] = [];
      for (let item of this.ConnectorsEnvironment)
        data["ConnectorsEnvironment"].push(item.toJSON());
    }
    return data;
  }
}

export interface IBaseRQ {
  /** Process ID */
  Pid?: string | undefined;
  /** Lst of DefaultConnectorEnvironment
   Used to identify which Environment the current RQ should use.
   The process will use the first ConnectorCode Environment value if any
   Otherwise it will use the default set up in the AppSettings */
  ConnectorsEnvironment?: ConnectorEnvironment[] | undefined;
}

export abstract class BaseCacheableRQ extends BaseRQ implements IBaseCacheableRQ {
  /** Force a result not form cache

   true -&gt; will not use cache and call connectors

   false -&gt; will use the cache if there is a valid cached result

   *Note: Not all the Responses can be cached for example: Booking Request/Response will always be forwarded to the Connectors */
  ForceNotCachedResponse?: boolean;

  constructor(data?: IBaseCacheableRQ) {
    super(data);
    if (!data) {
      this.ForceNotCachedResponse = false;
    }
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ForceNotCachedResponse = _data["ForceNotCachedResponse"] !== undefined ? _data["ForceNotCachedResponse"] : false;
    }
  }

  static fromJS(data: any): BaseCacheableRQ {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'BaseCacheableRQ' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ForceNotCachedResponse"] = this.ForceNotCachedResponse;
    super.toJSON(data);
    return data;
  }
}

export interface IBaseCacheableRQ extends IBaseRQ {
  /** Force a result not form cache

   true -&gt; will not use cache and call connectors

   false -&gt; will use the cache if there is a valid cached result

   *Note: Not all the Responses can be cached for example: Booking Request/Response will always be forwarded to the Connectors */
  ForceNotCachedResponse?: boolean;
}

export class JupiterHotelChainListRQ extends BaseCacheableRQ implements IJupiterHotelChainListRQ {
  /** JupiterHotelChainListInput Request */
  Request?: JupiterHotelChainListInput | undefined;

  constructor(data?: IJupiterHotelChainListRQ) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Request = _data["Request"] ? JupiterHotelChainListInput.fromJS(_data["Request"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterHotelChainListRQ {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelChainListRQ();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Request"] = this.Request ? this.Request.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelChainListRQ extends IBaseCacheableRQ {
  /** JupiterHotelChainListInput Request */
  Request?: JupiterHotelChainListInput | undefined;
}

export abstract class BaseInput implements IBaseInput {
  /** Enable Connectors Debug Mode */
  ConnectorsDebug?: EH2HConnectorCode[] | undefined;

  constructor(data?: IBaseInput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      if (Array.isArray(_data["ConnectorsDebug"])) {
        this.ConnectorsDebug = [] as any;
        for (let item of _data["ConnectorsDebug"])
          this.ConnectorsDebug!.push(item);
      }
    }
  }

  static fromJS(data: any): BaseInput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'BaseInput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.ConnectorsDebug)) {
      data["ConnectorsDebug"] = [];
      for (let item of this.ConnectorsDebug)
        data["ConnectorsDebug"].push(item);
    }
    return data;
  }
}

export interface IBaseInput {
  /** Enable Connectors Debug Mode */
  ConnectorsDebug?: EH2HConnectorCode[] | undefined;
}

export class JupiterHotelChainListInput extends BaseInput implements IJupiterHotelChainListInput {
  /** List of Connectors code to search. If null search on all Enable Connectors */
  ConnectorsSearchOnly?: EH2HConnectorCode[] | undefined;
  /** Dictionary of Connectors search Settings */
  ConnectorsSettings!: ChainListInputCustomData[];

  constructor(data?: IJupiterHotelChainListInput) {
    super(data);
    if (!data) {
      this.ConnectorsSettings = [];
    }
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      if (Array.isArray(_data["ConnectorsSearchOnly"])) {
        this.ConnectorsSearchOnly = [] as any;
        for (let item of _data["ConnectorsSearchOnly"])
          this.ConnectorsSearchOnly!.push(item);
      }
      if (Array.isArray(_data["ConnectorsSettings"])) {
        this.ConnectorsSettings = [] as any;
        for (let item of _data["ConnectorsSettings"])
          this.ConnectorsSettings!.push(ChainListInputCustomData.fromJS(item));
      }
    }
  }

  static fromJS(data: any): JupiterHotelChainListInput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelChainListInput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.ConnectorsSearchOnly)) {
      data["ConnectorsSearchOnly"] = [];
      for (let item of this.ConnectorsSearchOnly)
        data["ConnectorsSearchOnly"].push(item);
    }
    if (Array.isArray(this.ConnectorsSettings)) {
      data["ConnectorsSettings"] = [];
      for (let item of this.ConnectorsSettings)
        data["ConnectorsSettings"].push(item.toJSON());
    }
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelChainListInput extends IBaseInput {
  /** List of Connectors code to search. If null search on all Enable Connectors */
  ConnectorsSearchOnly?: EH2HConnectorCode[] | undefined;
  /** Dictionary of Connectors search Settings */
  ConnectorsSettings: ChainListInputCustomData[];
}

export class ChainListInputCustomData implements IChainListInputCustomData {

  protected _discriminator: string;

  constructor(data?: IChainListInputCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "ChainListInputCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): ChainListInputCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "BOOKING_DOT_COM") {
      let result = new BookingDotComChainListInputCustomData();
      result.init(data);
      return result;
    }
    let result = new ChainListInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IChainListInputCustomData {
}

export class BookingDotComChainListInputCustomData extends ChainListInputCustomData implements IBookingDotComChainListInputCustomData {
  ChainIds?: number[] | undefined;
  Rows?: number;
  Offset?: number;

  constructor(data?: IBookingDotComChainListInputCustomData) {
    super(data);
    this._discriminator = "BOOKING_DOT_COM";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      if (Array.isArray(_data["ChainIds"])) {
        this.ChainIds = [] as any;
        for (let item of _data["ChainIds"])
          this.ChainIds!.push(item);
      }
      this.Rows = _data["Rows"];
      this.Offset = _data["Offset"];
    }
  }

  static fromJS(data: any): BookingDotComChainListInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new BookingDotComChainListInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.ChainIds)) {
      data["ChainIds"] = [];
      for (let item of this.ChainIds)
        data["ChainIds"].push(item);
    }
    data["Rows"] = this.Rows;
    data["Offset"] = this.Offset;
    super.toJSON(data);
    return data;
  }
}

export interface IBookingDotComChainListInputCustomData extends IChainListInputCustomData {
  ChainIds?: number[] | undefined;
  Rows?: number;
  Offset?: number;
}

export abstract class CustomerCustomDataOfJupiterHotelChainListInput implements ICustomerCustomDataOfJupiterHotelChainListInput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterHotelChainListInput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterHotelChainListInput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterHotelChainListInput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterHotelChainListInput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterHotelChainListInput {
}

export class ConnectorEnvironment implements IConnectorEnvironment {
  /** Connector Code */
  ConnectorCode?: EH2HConnectorCode;
  /** Default Environment */
  Environment?: string | undefined;

  constructor(data?: IConnectorEnvironment) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.ConnectorCode = _data["ConnectorCode"];
      this.Environment = _data["Environment"];
    }
  }

  static fromJS(data: any): ConnectorEnvironment {
    data = typeof data === 'object' ? data : {};
    let result = new ConnectorEnvironment();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCode"] = this.ConnectorCode;
    data["Environment"] = this.Environment;
    return data;
  }
}

export interface IConnectorEnvironment {
  /** Connector Code */
  ConnectorCode?: EH2HConnectorCode;
  /** Default Environment */
  Environment?: string | undefined;
}

export class JupiterHotelAvailabilityRS extends BaseCacheableRS implements IJupiterHotelAvailabilityRS {
  /** JupiterHotelAvailabilityOutput Response */
  Response?: JupiterHotelAvailabilityOutput | undefined;

  constructor(data?: IJupiterHotelAvailabilityRS) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Response = _data["Response"] ? JupiterHotelAvailabilityOutput.fromJS(_data["Response"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterHotelAvailabilityRS {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelAvailabilityRS();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Response"] = this.Response ? this.Response.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelAvailabilityRS extends IBaseCacheableRS {
  /** JupiterHotelAvailabilityOutput Response */
  Response?: JupiterHotelAvailabilityOutput | undefined;
}

export class JupiterHotelAvailabilityOutput extends BaseOutput implements IJupiterHotelAvailabilityOutput {
  /** List of Hotel Results */
  Hotels?: SingleHotelAvailResult[] | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: AvailabilityOutputCustomData | undefined;

  constructor(data?: IJupiterHotelAvailabilityOutput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      if (Array.isArray(_data["Hotels"])) {
        this.Hotels = [] as any;
        for (let item of _data["Hotels"])
          this.Hotels!.push(SingleHotelAvailResult.fromJS(item));
      }
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? AvailabilityOutputCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterHotelAvailabilityOutput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelAvailabilityOutput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.Hotels)) {
      data["Hotels"] = [];
      for (let item of this.Hotels)
        data["Hotels"].push(item.toJSON());
    }
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelAvailabilityOutput extends IBaseOutput {
  /** List of Hotel Results */
  Hotels?: SingleHotelAvailResult[] | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: AvailabilityOutputCustomData | undefined;
}

export class HotelDetails implements IHotelDetails {
  /** Hotel Id */
  Id?: string | undefined;
  /** Hotel Name */
  Name?: string | undefined;
  /** List of Connectors Match */
  ConnectorsMatch?: ConnectorMatch[] | undefined;
  /** Hotel Destination  */
  Destination?: DestinationDetails | undefined;
  /** Hotel Latitude Longitude Location */
  Location?: LatLng | undefined;
  /** Hotel Thumbnail Image */
  Thumbnail?: Image | undefined;
  /** Hotel Address */
  Address?: Address | undefined;
  /** Hotel Currency */
  Currency?: string | undefined;
  /** List of Hotel contact emails */
  Emails?: Email[] | undefined;
  /** List of Hotel contact phones */
  Phones?: Phone[] | undefined;
  /** Hotel chain */
  Chain?: string | undefined;
  /** Hotel Star Rating */
  StarRating?: string | undefined;
  /** Hotel Review Score */
  ReviewScore?: string | undefined;
  /** Number of reviews */
  NumberOfReview?: number | undefined;
  /** Hotel Checkin - Checkout details */
  CheckinCheckout?: CheckinCheckout | undefined;
  /** Hotel Description */
  Description?: string | undefined;
  /** List of Hotel Amenities */
  Amenities?: string[] | undefined;
  /** List of Hotel General Policies */
  HotelPolicies?: GeneralPolicy[] | undefined;
  /** List of Hotel Images */
  Images?: Image[] | undefined;
  /** List of Hotel Links */
  Links?: Link[] | undefined;
  /** List of Hotel Chain */
  ChainList?: ChainDetails[] | undefined;
  /** Hotel Accepted credit card list */
  AcceptedCreditCardTypes?: ECreditCardType[] | undefined;

  constructor(data?: IHotelDetails) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Id = _data["Id"];
      this.Name = _data["Name"];
      if (Array.isArray(_data["ConnectorsMatch"])) {
        this.ConnectorsMatch = [] as any;
        for (let item of _data["ConnectorsMatch"])
          this.ConnectorsMatch!.push(ConnectorMatch.fromJS(item));
      }
      this.Destination = _data["Destination"] ? DestinationDetails.fromJS(_data["Destination"]) : <any>undefined;
      this.Location = _data["Location"] ? LatLng.fromJS(_data["Location"]) : <any>undefined;
      this.Thumbnail = _data["Thumbnail"] ? Image.fromJS(_data["Thumbnail"]) : <any>undefined;
      this.Address = _data["Address"] ? Address.fromJS(_data["Address"]) : <any>undefined;
      this.Currency = _data["Currency"];
      if (Array.isArray(_data["Emails"])) {
        this.Emails = [] as any;
        for (let item of _data["Emails"])
          this.Emails!.push(Email.fromJS(item));
      }
      if (Array.isArray(_data["Phones"])) {
        this.Phones = [] as any;
        for (let item of _data["Phones"])
          this.Phones!.push(Phone.fromJS(item));
      }
      this.Chain = _data["Chain"];
      this.StarRating = _data["StarRating"];
      this.ReviewScore = _data["ReviewScore"];
      this.NumberOfReview = _data["NumberOfReview"];
      this.CheckinCheckout = _data["CheckinCheckout"] ? CheckinCheckout.fromJS(_data["CheckinCheckout"]) : <any>undefined;
      this.Description = _data["Description"];
      if (Array.isArray(_data["Amenities"])) {
        this.Amenities = [] as any;
        for (let item of _data["Amenities"])
          this.Amenities!.push(item);
      }
      if (Array.isArray(_data["HotelPolicies"])) {
        this.HotelPolicies = [] as any;
        for (let item of _data["HotelPolicies"])
          this.HotelPolicies!.push(GeneralPolicy.fromJS(item));
      }
      if (Array.isArray(_data["Images"])) {
        this.Images = [] as any;
        for (let item of _data["Images"])
          this.Images!.push(Image.fromJS(item));
      }
      if (Array.isArray(_data["Links"])) {
        this.Links = [] as any;
        for (let item of _data["Links"])
          this.Links!.push(Link.fromJS(item));
      }
      if (Array.isArray(_data["ChainList"])) {
        this.ChainList = [] as any;
        for (let item of _data["ChainList"])
          this.ChainList!.push(ChainDetails.fromJS(item));
      }
      if (Array.isArray(_data["AcceptedCreditCardTypes"])) {
        this.AcceptedCreditCardTypes = [] as any;
        for (let item of _data["AcceptedCreditCardTypes"])
          this.AcceptedCreditCardTypes!.push(item);
      }
    }
  }

  static fromJS(data: any): HotelDetails {
    data = typeof data === 'object' ? data : {};
    let result = new HotelDetails();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Id"] = this.Id;
    data["Name"] = this.Name;
    if (Array.isArray(this.ConnectorsMatch)) {
      data["ConnectorsMatch"] = [];
      for (let item of this.ConnectorsMatch)
        data["ConnectorsMatch"].push(item.toJSON());
    }
    data["Destination"] = this.Destination ? this.Destination.toJSON() : <any>undefined;
    data["Location"] = this.Location ? this.Location.toJSON() : <any>undefined;
    data["Thumbnail"] = this.Thumbnail ? this.Thumbnail.toJSON() : <any>undefined;
    data["Address"] = this.Address ? this.Address.toJSON() : <any>undefined;
    data["Currency"] = this.Currency;
    if (Array.isArray(this.Emails)) {
      data["Emails"] = [];
      for (let item of this.Emails)
        data["Emails"].push(item.toJSON());
    }
    if (Array.isArray(this.Phones)) {
      data["Phones"] = [];
      for (let item of this.Phones)
        data["Phones"].push(item.toJSON());
    }
    data["Chain"] = this.Chain;
    data["StarRating"] = this.StarRating;
    data["ReviewScore"] = this.ReviewScore;
    data["NumberOfReview"] = this.NumberOfReview;
    data["CheckinCheckout"] = this.CheckinCheckout ? this.CheckinCheckout.toJSON() : <any>undefined;
    data["Description"] = this.Description;
    if (Array.isArray(this.Amenities)) {
      data["Amenities"] = [];
      for (let item of this.Amenities)
        data["Amenities"].push(item);
    }
    if (Array.isArray(this.HotelPolicies)) {
      data["HotelPolicies"] = [];
      for (let item of this.HotelPolicies)
        data["HotelPolicies"].push(item.toJSON());
    }
    if (Array.isArray(this.Images)) {
      data["Images"] = [];
      for (let item of this.Images)
        data["Images"].push(item.toJSON());
    }
    if (Array.isArray(this.Links)) {
      data["Links"] = [];
      for (let item of this.Links)
        data["Links"].push(item.toJSON());
    }
    if (Array.isArray(this.ChainList)) {
      data["ChainList"] = [];
      for (let item of this.ChainList)
        data["ChainList"].push(item.toJSON());
    }
    if (Array.isArray(this.AcceptedCreditCardTypes)) {
      data["AcceptedCreditCardTypes"] = [];
      for (let item of this.AcceptedCreditCardTypes)
        data["AcceptedCreditCardTypes"].push(item);
    }
    return data;
  }
}

export interface IHotelDetails {
  /** Hotel Id */
  Id?: string | undefined;
  /** Hotel Name */
  Name?: string | undefined;
  /** List of Connectors Match */
  ConnectorsMatch?: ConnectorMatch[] | undefined;
  /** Hotel Destination  */
  Destination?: DestinationDetails | undefined;
  /** Hotel Latitude Longitude Location */
  Location?: LatLng | undefined;
  /** Hotel Thumbnail Image */
  Thumbnail?: Image | undefined;
  /** Hotel Address */
  Address?: Address | undefined;
  /** Hotel Currency */
  Currency?: string | undefined;
  /** List of Hotel contact emails */
  Emails?: Email[] | undefined;
  /** List of Hotel contact phones */
  Phones?: Phone[] | undefined;
  /** Hotel chain */
  Chain?: string | undefined;
  /** Hotel Star Rating */
  StarRating?: string | undefined;
  /** Hotel Review Score */
  ReviewScore?: string | undefined;
  /** Number of reviews */
  NumberOfReview?: number | undefined;
  /** Hotel Checkin - Checkout details */
  CheckinCheckout?: CheckinCheckout | undefined;
  /** Hotel Description */
  Description?: string | undefined;
  /** List of Hotel Amenities */
  Amenities?: string[] | undefined;
  /** List of Hotel General Policies */
  HotelPolicies?: GeneralPolicy[] | undefined;
  /** List of Hotel Images */
  Images?: Image[] | undefined;
  /** List of Hotel Links */
  Links?: Link[] | undefined;
  /** List of Hotel Chain */
  ChainList?: ChainDetails[] | undefined;
  /** Hotel Accepted credit card list */
  AcceptedCreditCardTypes?: ECreditCardType[] | undefined;
}

export class SingleHotelAvailResult extends HotelDetails implements ISingleHotelAvailResult {
  /** Connector Debug Data */
  ConnectorDebugData?: any | undefined;
  /** List of Rooms */
  Rooms?: SingleRoomResult[] | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: SingleHotelAvailResultCustomData | undefined;
  /** Customer Custom Data */
  CustomerCustomData?: CustomerCustomDataOfSingleHotelAvailResult | undefined;

  constructor(data?: ISingleHotelAvailResult) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ConnectorDebugData = _data["ConnectorDebugData"];
      if (Array.isArray(_data["Rooms"])) {
        this.Rooms = [] as any;
        for (let item of _data["Rooms"])
          this.Rooms!.push(SingleRoomResult.fromJS(item));
      }
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? SingleHotelAvailResultCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
      this.CustomerCustomData = _data["CustomerCustomData"] ? CustomerCustomDataOfSingleHotelAvailResult.fromJS(_data["CustomerCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): SingleHotelAvailResult {
    data = typeof data === 'object' ? data : {};
    let result = new SingleHotelAvailResult();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorDebugData"] = this.ConnectorDebugData;
    if (Array.isArray(this.Rooms)) {
      data["Rooms"] = [];
      for (let item of this.Rooms)
        data["Rooms"].push(item.toJSON());
    }
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    data["CustomerCustomData"] = this.CustomerCustomData ? this.CustomerCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface ISingleHotelAvailResult extends IHotelDetails {
  /** Connector Debug Data */
  ConnectorDebugData?: any | undefined;
  /** List of Rooms */
  Rooms?: SingleRoomResult[] | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: SingleHotelAvailResultCustomData | undefined;
  /** Customer Custom Data */
  CustomerCustomData?: CustomerCustomDataOfSingleHotelAvailResult | undefined;
}

export class RoomDetails implements IRoomDetails {
  /** Room Id */
  Id?: string | undefined;
  /** Room Name */
  Name?: string | undefined;
  /** RoomType Code */
  RoomTypeCode?: string | undefined;
  /** RoomType Name */
  RoomTypeName?: string | undefined;
  /** RoomType Description */
  RoomTypeDescription?: string | undefined;
  /** Connector Match */
  ConnectorMatch?: ConnectorMatch | undefined;
  /** Room Description */
  Description?: string | undefined;
  /** List of Room Amenities */
  Amenities?: string[] | undefined;
  /** List of Room Policies */
  RoomPolicies?: GeneralPolicy[] | undefined;
  /** List of Room Images */
  Images?: Image[] | undefined;

  constructor(data?: IRoomDetails) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Id = _data["Id"];
      this.Name = _data["Name"];
      this.RoomTypeCode = _data["RoomTypeCode"];
      this.RoomTypeName = _data["RoomTypeName"];
      this.RoomTypeDescription = _data["RoomTypeDescription"];
      this.ConnectorMatch = _data["ConnectorMatch"] ? ConnectorMatch.fromJS(_data["ConnectorMatch"]) : <any>undefined;
      this.Description = _data["Description"];
      if (Array.isArray(_data["Amenities"])) {
        this.Amenities = [] as any;
        for (let item of _data["Amenities"])
          this.Amenities!.push(item);
      }
      if (Array.isArray(_data["RoomPolicies"])) {
        this.RoomPolicies = [] as any;
        for (let item of _data["RoomPolicies"])
          this.RoomPolicies!.push(GeneralPolicy.fromJS(item));
      }
      if (Array.isArray(_data["Images"])) {
        this.Images = [] as any;
        for (let item of _data["Images"])
          this.Images!.push(Image.fromJS(item));
      }
    }
  }

  static fromJS(data: any): RoomDetails {
    data = typeof data === 'object' ? data : {};
    let result = new RoomDetails();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Id"] = this.Id;
    data["Name"] = this.Name;
    data["RoomTypeCode"] = this.RoomTypeCode;
    data["RoomTypeName"] = this.RoomTypeName;
    data["RoomTypeDescription"] = this.RoomTypeDescription;
    data["ConnectorMatch"] = this.ConnectorMatch ? this.ConnectorMatch.toJSON() : <any>undefined;
    data["Description"] = this.Description;
    if (Array.isArray(this.Amenities)) {
      data["Amenities"] = [];
      for (let item of this.Amenities)
        data["Amenities"].push(item);
    }
    if (Array.isArray(this.RoomPolicies)) {
      data["RoomPolicies"] = [];
      for (let item of this.RoomPolicies)
        data["RoomPolicies"].push(item.toJSON());
    }
    if (Array.isArray(this.Images)) {
      data["Images"] = [];
      for (let item of this.Images)
        data["Images"].push(item.toJSON());
    }
    return data;
  }
}

export interface IRoomDetails {
  /** Room Id */
  Id?: string | undefined;
  /** Room Name */
  Name?: string | undefined;
  /** RoomType Code */
  RoomTypeCode?: string | undefined;
  /** RoomType Name */
  RoomTypeName?: string | undefined;
  /** RoomType Description */
  RoomTypeDescription?: string | undefined;
  /** Connector Match */
  ConnectorMatch?: ConnectorMatch | undefined;
  /** Room Description */
  Description?: string | undefined;
  /** List of Room Amenities */
  Amenities?: string[] | undefined;
  /** List of Room Policies */
  RoomPolicies?: GeneralPolicy[] | undefined;
  /** List of Room Images */
  Images?: Image[] | undefined;
}

export class SingleRoomResult extends RoomDetails implements ISingleRoomResult {
  /** Connector Debug Data */
  ConnectorDebugData?: any | undefined;
  /** List of Room RatePlan Rates */
  Rates?: RoomRatePlan[] | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: SingleRoomResultCustomData | undefined;

  constructor(data?: ISingleRoomResult) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ConnectorDebugData = _data["ConnectorDebugData"];
      if (Array.isArray(_data["Rates"])) {
        this.Rates = [] as any;
        for (let item of _data["Rates"])
          this.Rates!.push(RoomRatePlan.fromJS(item));
      }
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? SingleRoomResultCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): SingleRoomResult {
    data = typeof data === 'object' ? data : {};
    let result = new SingleRoomResult();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorDebugData"] = this.ConnectorDebugData;
    if (Array.isArray(this.Rates)) {
      data["Rates"] = [];
      for (let item of this.Rates)
        data["Rates"].push(item.toJSON());
    }
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface ISingleRoomResult extends IRoomDetails {
  /** Connector Debug Data */
  ConnectorDebugData?: any | undefined;
  /** List of Room RatePlan Rates */
  Rates?: RoomRatePlan[] | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: SingleRoomResultCustomData | undefined;
}

export class BaseRoomRatePlan implements IBaseRoomRatePlan {
  /** Rate Plan ID */
  Id?: string | undefined;
  /** RatePlan Code */
  RatePlanCode?: string | undefined;
  /** RatePlan Name */
  RatePlanName?: string | undefined;
  /** RatePlan Description */
  RatePlanDescription?: string | undefined;
  /** RatePlan Promotion Description */
  RatePlanPromoDescription?: string | undefined;
  /** MealPlan Code */
  MealPlanCode?: string | undefined;
  /** MealPlan Name */
  MealPlanName?: string | undefined;
  /** MealPlan Description */
  MealPlanDescription?: string | undefined;
  /** Total Amount */
  Total?: Total | undefined;
  /** List of Nightly Rates */
  NightlyRates?: NightlyRate[] | undefined;
  /** Average Nightly Rate */
  AverageNightlyRate?: CurrencyAmount | undefined;
  /** Determine if is Refundable or not */
  Refundable?: boolean;
  /** The Room Occupancy */
  Occupancy?: number;
  /** List of Cancel Policies */
  CancelPolicies?: Policy[] | undefined;
  /** Payment Terms */
  PaymentTerms?: Policy | undefined;
  /** List of Extra Charges */
  ExtraCharges?: ExtraCharge[] | undefined;
  /** Rate Commission */
  Commission?: Commission | undefined;
  /** Rate Promotions */
  Promotion?: Promotion | undefined;

  constructor(data?: IBaseRoomRatePlan) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Id = _data["Id"];
      this.RatePlanCode = _data["RatePlanCode"];
      this.RatePlanName = _data["RatePlanName"];
      this.RatePlanDescription = _data["RatePlanDescription"];
      this.RatePlanPromoDescription = _data["RatePlanPromoDescription"];
      this.MealPlanCode = _data["MealPlanCode"];
      this.MealPlanName = _data["MealPlanName"];
      this.MealPlanDescription = _data["MealPlanDescription"];
      this.Total = _data["Total"] ? Total.fromJS(_data["Total"]) : <any>undefined;
      if (Array.isArray(_data["NightlyRates"])) {
        this.NightlyRates = [] as any;
        for (let item of _data["NightlyRates"])
          this.NightlyRates!.push(NightlyRate.fromJS(item));
      }
      this.AverageNightlyRate = _data["AverageNightlyRate"] ? CurrencyAmount.fromJS(_data["AverageNightlyRate"]) : <any>undefined;
      this.Refundable = _data["Refundable"];
      this.Occupancy = _data["Occupancy"];
      if (Array.isArray(_data["CancelPolicies"])) {
        this.CancelPolicies = [] as any;
        for (let item of _data["CancelPolicies"])
          this.CancelPolicies!.push(Policy.fromJS(item));
      }
      this.PaymentTerms = _data["PaymentTerms"] ? Policy.fromJS(_data["PaymentTerms"]) : <any>undefined;
      if (Array.isArray(_data["ExtraCharges"])) {
        this.ExtraCharges = [] as any;
        for (let item of _data["ExtraCharges"])
          this.ExtraCharges!.push(ExtraCharge.fromJS(item));
      }
      this.Commission = _data["Commission"] ? Commission.fromJS(_data["Commission"]) : <any>undefined;
      this.Promotion = _data["Promotion"] ? Promotion.fromJS(_data["Promotion"]) : <any>undefined;
    }
  }

  static fromJS(data: any): BaseRoomRatePlan {
    data = typeof data === 'object' ? data : {};
    let result = new BaseRoomRatePlan();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Id"] = this.Id;
    data["RatePlanCode"] = this.RatePlanCode;
    data["RatePlanName"] = this.RatePlanName;
    data["RatePlanDescription"] = this.RatePlanDescription;
    data["RatePlanPromoDescription"] = this.RatePlanPromoDescription;
    data["MealPlanCode"] = this.MealPlanCode;
    data["MealPlanName"] = this.MealPlanName;
    data["MealPlanDescription"] = this.MealPlanDescription;
    data["Total"] = this.Total ? this.Total.toJSON() : <any>undefined;
    if (Array.isArray(this.NightlyRates)) {
      data["NightlyRates"] = [];
      for (let item of this.NightlyRates)
        data["NightlyRates"].push(item.toJSON());
    }
    data["AverageNightlyRate"] = this.AverageNightlyRate ? this.AverageNightlyRate.toJSON() : <any>undefined;
    data["Refundable"] = this.Refundable;
    data["Occupancy"] = this.Occupancy;
    if (Array.isArray(this.CancelPolicies)) {
      data["CancelPolicies"] = [];
      for (let item of this.CancelPolicies)
        data["CancelPolicies"].push(item.toJSON());
    }
    data["PaymentTerms"] = this.PaymentTerms ? this.PaymentTerms.toJSON() : <any>undefined;
    if (Array.isArray(this.ExtraCharges)) {
      data["ExtraCharges"] = [];
      for (let item of this.ExtraCharges)
        data["ExtraCharges"].push(item.toJSON());
    }
    data["Commission"] = this.Commission ? this.Commission.toJSON() : <any>undefined;
    data["Promotion"] = this.Promotion ? this.Promotion.toJSON() : <any>undefined;
    return data;
  }
}

export interface IBaseRoomRatePlan {
  /** Rate Plan ID */
  Id?: string | undefined;
  /** RatePlan Code */
  RatePlanCode?: string | undefined;
  /** RatePlan Name */
  RatePlanName?: string | undefined;
  /** RatePlan Description */
  RatePlanDescription?: string | undefined;
  /** RatePlan Promotion Description */
  RatePlanPromoDescription?: string | undefined;
  /** MealPlan Code */
  MealPlanCode?: string | undefined;
  /** MealPlan Name */
  MealPlanName?: string | undefined;
  /** MealPlan Description */
  MealPlanDescription?: string | undefined;
  /** Total Amount */
  Total?: Total | undefined;
  /** List of Nightly Rates */
  NightlyRates?: NightlyRate[] | undefined;
  /** Average Nightly Rate */
  AverageNightlyRate?: CurrencyAmount | undefined;
  /** Determine if is Refundable or not */
  Refundable?: boolean;
  /** The Room Occupancy */
  Occupancy?: number;
  /** List of Cancel Policies */
  CancelPolicies?: Policy[] | undefined;
  /** Payment Terms */
  PaymentTerms?: Policy | undefined;
  /** List of Extra Charges */
  ExtraCharges?: ExtraCharge[] | undefined;
  /** Rate Commission */
  Commission?: Commission | undefined;
  /** Rate Promotions */
  Promotion?: Promotion | undefined;
}

export class RoomRatePlan extends BaseRoomRatePlan implements IRoomRatePlan {
  /** Connector Custom Data */
  ConnectorCustomData?: RoomRatePlanCustomData | undefined;

  constructor(data?: IRoomRatePlan) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? RoomRatePlanCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): RoomRatePlan {
    data = typeof data === 'object' ? data : {};
    let result = new RoomRatePlan();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IRoomRatePlan extends IBaseRoomRatePlan {
  /** Connector Custom Data */
  ConnectorCustomData?: RoomRatePlanCustomData | undefined;
}

export abstract class RoomRatePlanCustomData implements IRoomRatePlanCustomData {

  protected _discriminator: string;

  constructor(data?: IRoomRatePlanCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "RoomRatePlanCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): RoomRatePlanCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "BOOKING_DOT_COM") {
      let result = new BookingDotComRoomRatePlanCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "SABRE_SYNXIS") {
      let result = new SabreSynXisRoomRatePlanCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "CREOLE") {
      let result = new CreoleRoomRatePlanCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "HOTELBEDS") {
      let result = new HotelbedsRoomRatePlanCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "SABRE_CSL") {
      let result = new SabreCSLRoomRatePlanCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "IHG_GRS") {
      let result = new IHGRoomRatePlanCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'RoomRatePlanCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IRoomRatePlanCustomData {
}

export class BookingDotComRoomRatePlanCustomData extends RoomRatePlanCustomData implements IBookingDotComRoomRatePlanCustomData {
  BookingRate?: CurrencyAmount | undefined;

  constructor(data?: IBookingDotComRoomRatePlanCustomData) {
    super(data);
    this._discriminator = "BOOKING_DOT_COM";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.BookingRate = _data["BookingRate"] ? CurrencyAmount.fromJS(_data["BookingRate"]) : <any>undefined;
    }
  }

  static fromJS(data: any): BookingDotComRoomRatePlanCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new BookingDotComRoomRatePlanCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["BookingRate"] = this.BookingRate ? this.BookingRate.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IBookingDotComRoomRatePlanCustomData extends IRoomRatePlanCustomData {
  BookingRate?: CurrencyAmount | undefined;
}

export class CurrencyAmount implements ICurrencyAmount {
  /** Currency Code - 3 letters */
  Currency?: string | undefined;
  /** Amount */
  Amount?: number;

  constructor(data?: ICurrencyAmount) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Currency = _data["Currency"];
      this.Amount = _data["Amount"];
    }
  }

  static fromJS(data: any): CurrencyAmount {
    data = typeof data === 'object' ? data : {};
    let result = new CurrencyAmount();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Currency"] = this.Currency;
    data["Amount"] = this.Amount;
    return data;
  }
}

export interface ICurrencyAmount {
  /** Currency Code - 3 letters */
  Currency?: string | undefined;
  /** Amount */
  Amount?: number;
}

export class SabreSynXisRoomRatePlanCustomData extends RoomRatePlanCustomData implements ISabreSynXisRoomRatePlanCustomData {
  /** The RatePlan Id */
  RatePlanId?: string | undefined;
  /** Number of Units returned in the RatePlan from Sabre SynXis */
  NumberOfUnits?: number;

  constructor(data?: ISabreSynXisRoomRatePlanCustomData) {
    super(data);
    this._discriminator = "SABRE_SYNXIS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.RatePlanId = _data["RatePlanId"];
      this.NumberOfUnits = _data["NumberOfUnits"];
    }
  }

  static fromJS(data: any): SabreSynXisRoomRatePlanCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreSynXisRoomRatePlanCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["RatePlanId"] = this.RatePlanId;
    data["NumberOfUnits"] = this.NumberOfUnits;
    super.toJSON(data);
    return data;
  }
}

export interface ISabreSynXisRoomRatePlanCustomData extends IRoomRatePlanCustomData {
  /** The RatePlan Id */
  RatePlanId?: string | undefined;
  /** Number of Units returned in the RatePlan from Sabre SynXis */
  NumberOfUnits?: number;
}

export class CreoleRoomRatePlanCustomData extends RoomRatePlanCustomData implements ICreoleRoomRatePlanCustomData {
  BookingCode?: string | undefined;

  constructor(data?: ICreoleRoomRatePlanCustomData) {
    super(data);
    this._discriminator = "CREOLE";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.BookingCode = _data["BookingCode"];
    }
  }

  static fromJS(data: any): CreoleRoomRatePlanCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new CreoleRoomRatePlanCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["BookingCode"] = this.BookingCode;
    super.toJSON(data);
    return data;
  }
}

export interface ICreoleRoomRatePlanCustomData extends IRoomRatePlanCustomData {
  BookingCode?: string | undefined;
}

export class HotelbedsRoomRatePlanCustomData extends RoomRatePlanCustomData implements IHotelbedsRoomRatePlanCustomData {
  /** Whether the booking can be confirmed in two steps (BOOKABLE) or three steps (RECHECK). */
  RateType?: string | undefined;
  /** Rate comments that contain important information. */
  Comments?: string | undefined;
  /** Difference between original rate price and upselling rate price. */
  Rateup?: number | undefined;

  constructor(data?: IHotelbedsRoomRatePlanCustomData) {
    super(data);
    this._discriminator = "HOTELBEDS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.RateType = _data["RateType"];
      this.Comments = _data["Comments"];
      this.Rateup = _data["Rateup"];
    }
  }

  static fromJS(data: any): HotelbedsRoomRatePlanCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new HotelbedsRoomRatePlanCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["RateType"] = this.RateType;
    data["Comments"] = this.Comments;
    data["Rateup"] = this.Rateup;
    super.toJSON(data);
    return data;
  }
}

export interface IHotelbedsRoomRatePlanCustomData extends IRoomRatePlanCustomData {
  /** Whether the booking can be confirmed in two steps (BOOKABLE) or three steps (RECHECK). */
  RateType?: string | undefined;
  /** Rate comments that contain important information. */
  Comments?: string | undefined;
  /** Difference between original rate price and upselling rate price. */
  Rateup?: number | undefined;
}

export class SabreCSLRoomRatePlanCustomData extends RoomRatePlanCustomData implements ISabreCSLRoomRatePlanCustomData {
  InfoSource?: EInfoSource;
  BookingKey?: string | undefined;
  PriceChange?: boolean;
  PriceDifference?: number;
  CurrencyCode?: string | undefined;
  RatePlanCode?: string | undefined;
  GuaranteeType?: string | undefined;

  constructor(data?: ISabreCSLRoomRatePlanCustomData) {
    super(data);
    this._discriminator = "SABRE_CSL";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.InfoSource = _data["InfoSource"];
      this.BookingKey = _data["BookingKey"];
      this.PriceChange = _data["PriceChange"];
      this.PriceDifference = _data["PriceDifference"];
      this.CurrencyCode = _data["CurrencyCode"];
      this.RatePlanCode = _data["RatePlanCode"];
      this.GuaranteeType = _data["GuaranteeType"];
    }
  }

  static fromJS(data: any): SabreCSLRoomRatePlanCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreCSLRoomRatePlanCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["InfoSource"] = this.InfoSource;
    data["BookingKey"] = this.BookingKey;
    data["PriceChange"] = this.PriceChange;
    data["PriceDifference"] = this.PriceDifference;
    data["CurrencyCode"] = this.CurrencyCode;
    data["RatePlanCode"] = this.RatePlanCode;
    data["GuaranteeType"] = this.GuaranteeType;
    super.toJSON(data);
    return data;
  }
}

export interface ISabreCSLRoomRatePlanCustomData extends IRoomRatePlanCustomData {
  InfoSource?: EInfoSource;
  BookingKey?: string | undefined;
  PriceChange?: boolean;
  PriceDifference?: number;
  CurrencyCode?: string | undefined;
  RatePlanCode?: string | undefined;
  GuaranteeType?: string | undefined;
}

export enum EInfoSource {
  SABRE_GDS = "SABRE_GDS",
  EXPEDIA = "EXPEDIA",
  BEDSONLINE = "BEDSONLINE",
  BOOKING_DOT_COM = "BOOKING_DOT_COM",
}

export class IHGRoomRatePlanCustomData extends RoomRatePlanCustomData implements IIHGRoomRatePlanCustomData {
  /** The number of available products during the stay. */
  NumberOfAvailableProducts?: number | undefined;
  /** True if the current RatePlanCode is present in any other Offer RatePlan returned by IHG as UpSell */
  IsUpsell?: boolean;
  /** Upsells returned by IHG */
  Upsells?: IHGUpSell[] | undefined;
  /** Points and cash Options returned by IHG */
  PointsAndCashOptions?: IHGPointsAndCashOption[] | undefined;
  /** Guarantee Type returned if is required and need to be passed during booking */
  GuaranteeType?: string | undefined;
  /** Indicates if booking this rate gives reward points to the customer */
  IsRewardEarned?: boolean | undefined;
  /** Indicates if this rate is commissionable or not */
  IsCommissionable?: boolean | undefined;
  /** Indicates if a coupon voucher is required */
  IsVoucherRequired?: boolean | undefined;
  /** Indicates if the priority club number is required */
  IsLoyaltyIdRequired?: boolean | undefined;
  /** Indicates if an ID is required at check-in for this rate category */
  IsIdRequired?: boolean | undefined;
  /** Indicates if the rate plan is a free night rate plan */
  IsFreeNight?: boolean | undefined;
  /** Indicates if the rate plan is a rewards night rate plan */
  IsRewardNight?: boolean | undefined;

  constructor(data?: IIHGRoomRatePlanCustomData) {
    super(data);
    this._discriminator = "IHG_GRS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.NumberOfAvailableProducts = _data["NumberOfAvailableProducts"];
      this.IsUpsell = _data["IsUpsell"];
      if (Array.isArray(_data["Upsells"])) {
        this.Upsells = [] as any;
        for (let item of _data["Upsells"])
          this.Upsells!.push(IHGUpSell.fromJS(item));
      }
      if (Array.isArray(_data["PointsAndCashOptions"])) {
        this.PointsAndCashOptions = [] as any;
        for (let item of _data["PointsAndCashOptions"])
          this.PointsAndCashOptions!.push(IHGPointsAndCashOption.fromJS(item));
      }
      this.GuaranteeType = _data["GuaranteeType"];
      this.IsRewardEarned = _data["IsRewardEarned"];
      this.IsCommissionable = _data["IsCommissionable"];
      this.IsVoucherRequired = _data["IsVoucherRequired"];
      this.IsLoyaltyIdRequired = _data["IsLoyaltyIdRequired"];
      this.IsIdRequired = _data["IsIdRequired"];
      this.IsFreeNight = _data["IsFreeNight"];
      this.IsRewardNight = _data["IsRewardNight"];
    }
  }

  static fromJS(data: any): IHGRoomRatePlanCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new IHGRoomRatePlanCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["NumberOfAvailableProducts"] = this.NumberOfAvailableProducts;
    data["IsUpsell"] = this.IsUpsell;
    if (Array.isArray(this.Upsells)) {
      data["Upsells"] = [];
      for (let item of this.Upsells)
        data["Upsells"].push(item.toJSON());
    }
    if (Array.isArray(this.PointsAndCashOptions)) {
      data["PointsAndCashOptions"] = [];
      for (let item of this.PointsAndCashOptions)
        data["PointsAndCashOptions"].push(item.toJSON());
    }
    data["GuaranteeType"] = this.GuaranteeType;
    data["IsRewardEarned"] = this.IsRewardEarned;
    data["IsCommissionable"] = this.IsCommissionable;
    data["IsVoucherRequired"] = this.IsVoucherRequired;
    data["IsLoyaltyIdRequired"] = this.IsLoyaltyIdRequired;
    data["IsIdRequired"] = this.IsIdRequired;
    data["IsFreeNight"] = this.IsFreeNight;
    data["IsRewardNight"] = this.IsRewardNight;
    super.toJSON(data);
    return data;
  }
}

export interface IIHGRoomRatePlanCustomData extends IRoomRatePlanCustomData {
  /** The number of available products during the stay. */
  NumberOfAvailableProducts?: number | undefined;
  /** True if the current RatePlanCode is present in any other Offer RatePlan returned by IHG as UpSell */
  IsUpsell?: boolean;
  /** Upsells returned by IHG */
  Upsells?: IHGUpSell[] | undefined;
  /** Points and cash Options returned by IHG */
  PointsAndCashOptions?: IHGPointsAndCashOption[] | undefined;
  /** Guarantee Type returned if is required and need to be passed during booking */
  GuaranteeType?: string | undefined;
  /** Indicates if booking this rate gives reward points to the customer */
  IsRewardEarned?: boolean | undefined;
  /** Indicates if this rate is commissionable or not */
  IsCommissionable?: boolean | undefined;
  /** Indicates if a coupon voucher is required */
  IsVoucherRequired?: boolean | undefined;
  /** Indicates if the priority club number is required */
  IsLoyaltyIdRequired?: boolean | undefined;
  /** Indicates if an ID is required at check-in for this rate category */
  IsIdRequired?: boolean | undefined;
  /** Indicates if the rate plan is a free night rate plan */
  IsFreeNight?: boolean | undefined;
  /** Indicates if the rate plan is a rewards night rate plan */
  IsRewardNight?: boolean | undefined;
}

export class IHGUpSell implements IIHGUpSell {
  /** Upsell RatePlan Code */
  RatePlanCode?: string | undefined;
  /** Upsell Header, es. Add Breakfast */
  Header?: string | undefined;
  /** Upsell description */
  Description?: string | undefined;
  /** Upsell Category es. STANDARD */
  Category?: string | undefined;
  /** Upsell priority es. 1 */
  Priority?: number | undefined;
  /** Upsell Price difference es. 8.00 -&gt; the IHG Prices are always per day */
  PriceDifference?: string | undefined;

  constructor(data?: IIHGUpSell) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.RatePlanCode = _data["RatePlanCode"];
      this.Header = _data["Header"];
      this.Description = _data["Description"];
      this.Category = _data["Category"];
      this.Priority = _data["Priority"];
      this.PriceDifference = _data["PriceDifference"];
    }
  }

  static fromJS(data: any): IHGUpSell {
    data = typeof data === 'object' ? data : {};
    let result = new IHGUpSell();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["RatePlanCode"] = this.RatePlanCode;
    data["Header"] = this.Header;
    data["Description"] = this.Description;
    data["Category"] = this.Category;
    data["Priority"] = this.Priority;
    data["PriceDifference"] = this.PriceDifference;
    return data;
  }
}

export interface IIHGUpSell {
  /** Upsell RatePlan Code */
  RatePlanCode?: string | undefined;
  /** Upsell Header, es. Add Breakfast */
  Header?: string | undefined;
  /** Upsell description */
  Description?: string | undefined;
  /** Upsell Category es. STANDARD */
  Category?: string | undefined;
  /** Upsell priority es. 1 */
  Priority?: number | undefined;
  /** Upsell Price difference es. 8.00 -&gt; the IHG Prices are always per day */
  PriceDifference?: string | undefined;
}

export class IHGPointsAndCashOption implements IIHGPointsAndCashOption {
  /** Code provided by loyalty to uniquely identify offer */
  OfferCode?: string | undefined;
  /** This object is available ONLY when rewards night has different daily points. checkinPointsCost should be ignored if this is present in the response as checkinPointsCost would be just the check-in points. */
  DynamicDailyPoints?: PointDetails[] | undefined;
  /** May be returned if an auth token is provided, discounted points cost for this option available due to membership / deal */
  CheckinDiscountPointsCost?: number | undefined;
  /** May be returned if an auth token is provided, total discounted points cost for this option available due to membership / deal */
  TotalDiscountPointsCost?: number | undefined;
  /** May be returned if an auth token is provided, discounted cash cost for this option available due to membership / deal */
  CheckinDiscountCashCost?: number | undefined;
  /** May be returned if an auth token is provided, total discounted cash cost for this option available due to membership / deal */
  TotalDiscountCashCost?: number | undefined;
  /** Checkin cash cost for this option */
  CheckinCashCost?: number | undefined;
  /** Total cash cost for this option */
  TotalCashCost?: number | undefined;
  /** Checkin points cost for this option */
  CheckinPointsCost?: number | undefined;
  /** Total points cost for this option */
  TotalPointsCost?: number | undefined;

  constructor(data?: IIHGPointsAndCashOption) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.OfferCode = _data["OfferCode"];
      if (Array.isArray(_data["DynamicDailyPoints"])) {
        this.DynamicDailyPoints = [] as any;
        for (let item of _data["DynamicDailyPoints"])
          this.DynamicDailyPoints!.push(PointDetails.fromJS(item));
      }
      this.CheckinDiscountPointsCost = _data["CheckinDiscountPointsCost"];
      this.TotalDiscountPointsCost = _data["TotalDiscountPointsCost"];
      this.CheckinDiscountCashCost = _data["CheckinDiscountCashCost"];
      this.TotalDiscountCashCost = _data["TotalDiscountCashCost"];
      this.CheckinCashCost = _data["CheckinCashCost"];
      this.TotalCashCost = _data["TotalCashCost"];
      this.CheckinPointsCost = _data["CheckinPointsCost"];
      this.TotalPointsCost = _data["TotalPointsCost"];
    }
  }

  static fromJS(data: any): IHGPointsAndCashOption {
    data = typeof data === 'object' ? data : {};
    let result = new IHGPointsAndCashOption();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["OfferCode"] = this.OfferCode;
    if (Array.isArray(this.DynamicDailyPoints)) {
      data["DynamicDailyPoints"] = [];
      for (let item of this.DynamicDailyPoints)
        data["DynamicDailyPoints"].push(item.toJSON());
    }
    data["CheckinDiscountPointsCost"] = this.CheckinDiscountPointsCost;
    data["TotalDiscountPointsCost"] = this.TotalDiscountPointsCost;
    data["CheckinDiscountCashCost"] = this.CheckinDiscountCashCost;
    data["TotalDiscountCashCost"] = this.TotalDiscountCashCost;
    data["CheckinCashCost"] = this.CheckinCashCost;
    data["TotalCashCost"] = this.TotalCashCost;
    data["CheckinPointsCost"] = this.CheckinPointsCost;
    data["TotalPointsCost"] = this.TotalPointsCost;
    return data;
  }
}

export interface IIHGPointsAndCashOption {
  /** Code provided by loyalty to uniquely identify offer */
  OfferCode?: string | undefined;
  /** This object is available ONLY when rewards night has different daily points. checkinPointsCost should be ignored if this is present in the response as checkinPointsCost would be just the check-in points. */
  DynamicDailyPoints?: PointDetails[] | undefined;
  /** May be returned if an auth token is provided, discounted points cost for this option available due to membership / deal */
  CheckinDiscountPointsCost?: number | undefined;
  /** May be returned if an auth token is provided, total discounted points cost for this option available due to membership / deal */
  TotalDiscountPointsCost?: number | undefined;
  /** May be returned if an auth token is provided, discounted cash cost for this option available due to membership / deal */
  CheckinDiscountCashCost?: number | undefined;
  /** May be returned if an auth token is provided, total discounted cash cost for this option available due to membership / deal */
  TotalDiscountCashCost?: number | undefined;
  /** Checkin cash cost for this option */
  CheckinCashCost?: number | undefined;
  /** Total cash cost for this option */
  TotalCashCost?: number | undefined;
  /** Checkin points cost for this option */
  CheckinPointsCost?: number | undefined;
  /** Total points cost for this option */
  TotalPointsCost?: number | undefined;
}

export class PointDetails implements IPointDetails {
  /** Start date */
  Start?: string | undefined;
  /** Amount defined in the CRS which includes included taxes/service charges and excludes excluded taxes/service charges */
  DailyPointsCost?: string | undefined;

  constructor(data?: IPointDetails) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Start = _data["Start"];
      this.DailyPointsCost = _data["DailyPointsCost"];
    }
  }

  static fromJS(data: any): PointDetails {
    data = typeof data === 'object' ? data : {};
    let result = new PointDetails();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Start"] = this.Start;
    data["DailyPointsCost"] = this.DailyPointsCost;
    return data;
  }
}

export interface IPointDetails {
  /** Start date */
  Start?: string | undefined;
  /** Amount defined in the CRS which includes included taxes/service charges and excludes excluded taxes/service charges */
  DailyPointsCost?: string | undefined;
}

export abstract class CustomerCustomDataOfRoomRatePlan implements ICustomerCustomDataOfRoomRatePlan {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfRoomRatePlan) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfRoomRatePlan";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfRoomRatePlan {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfRoomRatePlan' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfRoomRatePlan {
}

export class Total extends CurrencyAmount implements ITotal {
  /** Amount Without Tax */
  AmountWithoutTax?: number | undefined;
  /** Taxes */
  Taxes?: Taxes | undefined;

  constructor(data?: ITotal) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.AmountWithoutTax = _data["AmountWithoutTax"];
      this.Taxes = _data["Taxes"] ? Taxes.fromJS(_data["Taxes"]) : <any>undefined;
    }
  }

  static fromJS(data: any): Total {
    data = typeof data === 'object' ? data : {};
    let result = new Total();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["AmountWithoutTax"] = this.AmountWithoutTax;
    data["Taxes"] = this.Taxes ? this.Taxes.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface ITotal extends ICurrencyAmount {
  /** Amount Without Tax */
  AmountWithoutTax?: number | undefined;
  /** Taxes */
  Taxes?: Taxes | undefined;
}

export class Taxes extends CurrencyAmount implements ITaxes {
  /** Tax List */
  TaxList?: Tax[] | undefined;

  constructor(data?: ITaxes) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      if (Array.isArray(_data["TaxList"])) {
        this.TaxList = [] as any;
        for (let item of _data["TaxList"])
          this.TaxList!.push(Tax.fromJS(item));
      }
    }
  }

  static fromJS(data: any): Taxes {
    data = typeof data === 'object' ? data : {};
    let result = new Taxes();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.TaxList)) {
      data["TaxList"] = [];
      for (let item of this.TaxList)
        data["TaxList"].push(item.toJSON());
    }
    super.toJSON(data);
    return data;
  }
}

export interface ITaxes extends ICurrencyAmount {
  /** Tax List */
  TaxList?: Tax[] | undefined;
}

export class Tax extends CurrencyAmount implements ITax {
  /** Tax Code */
  Code?: string | undefined;
  /** Tax Name */
  Name?: string | undefined;
  /** Tax Description */
  Description?: string | undefined;

  constructor(data?: ITax) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Code = _data["Code"];
      this.Name = _data["Name"];
      this.Description = _data["Description"];
    }
  }

  static fromJS(data: any): Tax {
    data = typeof data === 'object' ? data : {};
    let result = new Tax();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Code"] = this.Code;
    data["Name"] = this.Name;
    data["Description"] = this.Description;
    super.toJSON(data);
    return data;
  }
}

export interface ITax extends ICurrencyAmount {
  /** Tax Code */
  Code?: string | undefined;
  /** Tax Name */
  Name?: string | undefined;
  /** Tax Description */
  Description?: string | undefined;
}

export class NightlyRate extends CurrencyAmount implements INightlyRate {
  /** Date of the HolderName */
  Date?: string;
  /** Tax Amount */
  Tax?: number | undefined;
  /** Amount Without Tax */
  AmountWithoutTax?: number | undefined;
  /** Fee Amount */
  Fee?: number | undefined;

  constructor(data?: INightlyRate) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Date = _data["Date"];
      this.Tax = _data["Tax"];
      this.AmountWithoutTax = _data["AmountWithoutTax"];
      this.Fee = _data["Fee"];
    }
  }

  static fromJS(data: any): NightlyRate {
    data = typeof data === 'object' ? data : {};
    let result = new NightlyRate();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Date"] = this.Date;
    data["Tax"] = this.Tax;
    data["AmountWithoutTax"] = this.AmountWithoutTax;
    data["Fee"] = this.Fee;
    super.toJSON(data);
    return data;
  }
}

export interface INightlyRate extends ICurrencyAmount {
  /** Date of the HolderName */
  Date?: string;
  /** Tax Amount */
  Tax?: number | undefined;
  /** Amount Without Tax */
  AmountWithoutTax?: number | undefined;
  /** Fee Amount */
  Fee?: number | undefined;
}

export class Policy implements IPolicy {
  /** Policy Type */
  PolicyType?: EPolicyType | undefined;
  PolicyCode?: string | undefined;
  /** Policy Text */
  PolicyText?: string | undefined;
  /** Policy ConnectorCustom Data */
  PolicyConnectorCustomData?: any | undefined;
  /** Policy Dead Line */
  PolicyDeadline?: Deadline | undefined;
  /** Policy Amount */
  Amount?: Amount | undefined;
  /** Define if a Deposit is required */
  DepositRequired?: boolean | undefined;

  constructor(data?: IPolicy) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.PolicyType = _data["PolicyType"];
      this.PolicyCode = _data["PolicyCode"];
      this.PolicyText = _data["PolicyText"];
      this.PolicyConnectorCustomData = _data["PolicyConnectorCustomData"];
      this.PolicyDeadline = _data["PolicyDeadline"] ? Deadline.fromJS(_data["PolicyDeadline"]) : <any>undefined;
      this.Amount = _data["Amount"] ? Amount.fromJS(_data["Amount"]) : <any>undefined;
      this.DepositRequired = _data["DepositRequired"];
    }
  }

  static fromJS(data: any): Policy {
    data = typeof data === 'object' ? data : {};
    let result = new Policy();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["PolicyType"] = this.PolicyType;
    data["PolicyCode"] = this.PolicyCode;
    data["PolicyText"] = this.PolicyText;
    data["PolicyConnectorCustomData"] = this.PolicyConnectorCustomData;
    data["PolicyDeadline"] = this.PolicyDeadline ? this.PolicyDeadline.toJSON() : <any>undefined;
    data["Amount"] = this.Amount ? this.Amount.toJSON() : <any>undefined;
    data["DepositRequired"] = this.DepositRequired;
    return data;
  }
}

export interface IPolicy {
  /** Policy Type */
  PolicyType?: EPolicyType | undefined;
  PolicyCode?: string | undefined;
  /** Policy Text */
  PolicyText?: string | undefined;
  /** Policy ConnectorCustom Data */
  PolicyConnectorCustomData?: any | undefined;
  /** Policy Dead Line */
  PolicyDeadline?: Deadline | undefined;
  /** Policy Amount */
  Amount?: Amount | undefined;
  /** Define if a Deposit is required */
  DepositRequired?: boolean | undefined;
}

export enum EPolicyType {
  FREE_CANCELLATION = "FREE_CANCELLATION",
  TEXT_CONDITION = "TEXT_CONDITION",
  CONDITION = "CONDITION",
}

export class Deadline implements IDeadline {
  /** Start DateTime of the Deadline */
  FromDeadLine?: string | undefined;
  /** End DateTime of the Deadline */
  ToDeadLine?: string | undefined;
  /** DateTime if it's an Absolute Deadline */
  AbsoluteDeadLine?: string | undefined;
  /** Offset Time Type of the Policy */
  OffsetPolicyTime?: EOffsetPolicyTime | undefined;
  /** Offset Time Unit Type of the Policy */
  OffsetPolicyTimeUnit?: EOffsetPolicyTimeUnit | undefined;
  /** Offset Multiplier */
  OffsetMultiplier?: number | undefined;

  constructor(data?: IDeadline) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.FromDeadLine = _data["FromDeadLine"];
      this.ToDeadLine = _data["ToDeadLine"];
      this.AbsoluteDeadLine = _data["AbsoluteDeadLine"];
      this.OffsetPolicyTime = _data["OffsetPolicyTime"];
      this.OffsetPolicyTimeUnit = _data["OffsetPolicyTimeUnit"];
      this.OffsetMultiplier = _data["OffsetMultiplier"];
    }
  }

  static fromJS(data: any): Deadline {
    data = typeof data === 'object' ? data : {};
    let result = new Deadline();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["FromDeadLine"] = this.FromDeadLine;
    data["ToDeadLine"] = this.ToDeadLine;
    data["AbsoluteDeadLine"] = this.AbsoluteDeadLine;
    data["OffsetPolicyTime"] = this.OffsetPolicyTime;
    data["OffsetPolicyTimeUnit"] = this.OffsetPolicyTimeUnit;
    data["OffsetMultiplier"] = this.OffsetMultiplier;
    return data;
  }
}

export interface IDeadline {
  /** Start DateTime of the Deadline */
  FromDeadLine?: string | undefined;
  /** End DateTime of the Deadline */
  ToDeadLine?: string | undefined;
  /** DateTime if it's an Absolute Deadline */
  AbsoluteDeadLine?: string | undefined;
  /** Offset Time Type of the Policy */
  OffsetPolicyTime?: EOffsetPolicyTime | undefined;
  /** Offset Time Unit Type of the Policy */
  OffsetPolicyTimeUnit?: EOffsetPolicyTimeUnit | undefined;
  /** Offset Multiplier */
  OffsetMultiplier?: number | undefined;
}

export enum EOffsetPolicyTime {
  AFTER_BOOKING = "AFTER_BOOKING",
  BEFORE_ARRIVAL = "BEFORE_ARRIVAL",
}

export enum EOffsetPolicyTimeUnit {
  YEAR = "YEAR",
  MONTH = "MONTH",
  WEEK = "WEEK",
  DAY = "DAY",
  HOUR = "HOUR",
  SECOND = "SECOND",
  FULL_DURATION = "FULL_DURATION",
}

export class Amount implements IAmount {
  /** Total Amount */
  TotalAmount?: CurrencyAmount | undefined;
  /** Number of Nights */
  Nights?: number | undefined;
  /** Percentage of the Total */
  Percent?: number | undefined;
  /** If the penalty is Tax Inclusive or not */
  TaxInclusive?: boolean;

  constructor(data?: IAmount) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.TotalAmount = _data["TotalAmount"] ? CurrencyAmount.fromJS(_data["TotalAmount"]) : <any>undefined;
      this.Nights = _data["Nights"];
      this.Percent = _data["Percent"];
      this.TaxInclusive = _data["TaxInclusive"];
    }
  }

  static fromJS(data: any): Amount {
    data = typeof data === 'object' ? data : {};
    let result = new Amount();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["TotalAmount"] = this.TotalAmount ? this.TotalAmount.toJSON() : <any>undefined;
    data["Nights"] = this.Nights;
    data["Percent"] = this.Percent;
    data["TaxInclusive"] = this.TaxInclusive;
    return data;
  }
}

export interface IAmount {
  /** Total Amount */
  TotalAmount?: CurrencyAmount | undefined;
  /** Number of Nights */
  Nights?: number | undefined;
  /** Percentage of the Total */
  Percent?: number | undefined;
  /** If the penalty is Tax Inclusive or not */
  TaxInclusive?: boolean;
}

export class ExtraCharge implements IExtraCharge {
  /** The actual amount in currency that this charge is calculated to be. Eg. ChargeModeAmount x
   */
  Amount?: CurrencyAmount | undefined;
  /** Set to true when this fee is excluded from the net_price shown */
  Excluded?: boolean;
  /** The name of this type of charge */
  Text?: string | undefined;
  /** The type of charge */
  Type?: string | undefined;
  /** The type of charge this is. */
  ChargeMode?: EExtraChargeMode;
  /** The value used with the charge_price_mode to calculate the {amount} that this fee represents. */
  ChargeModeAmount?: number;

  constructor(data?: IExtraCharge) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Amount = _data["Amount"] ? CurrencyAmount.fromJS(_data["Amount"]) : <any>undefined;
      this.Excluded = _data["Excluded"];
      this.Text = _data["Text"];
      this.Type = _data["Type"];
      this.ChargeMode = _data["ChargeMode"];
      this.ChargeModeAmount = _data["ChargeModeAmount"];
    }
  }

  static fromJS(data: any): ExtraCharge {
    data = typeof data === 'object' ? data : {};
    let result = new ExtraCharge();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Amount"] = this.Amount ? this.Amount.toJSON() : <any>undefined;
    data["Excluded"] = this.Excluded;
    data["Text"] = this.Text;
    data["Type"] = this.Type;
    data["ChargeMode"] = this.ChargeMode;
    data["ChargeModeAmount"] = this.ChargeModeAmount;
    return data;
  }
}

export interface IExtraCharge {
  /** The actual amount in currency that this charge is calculated to be. Eg. ChargeModeAmount x
   */
  Amount?: CurrencyAmount | undefined;
  /** Set to true when this fee is excluded from the net_price shown */
  Excluded?: boolean;
  /** The name of this type of charge */
  Text?: string | undefined;
  /** The type of charge */
  Type?: string | undefined;
  /** The type of charge this is. */
  ChargeMode?: EExtraChargeMode;
  /** The value used with the charge_price_mode to calculate the {amount} that this fee represents. */
  ChargeModeAmount?: number;
}

export enum EExtraChargeMode {
  PERCENTAGE = "PERCENTAGE",
  PER_STAY = "PER_STAY",
  PER_NIGHT = "PER_NIGHT",
  PER_PERSON = "PER_PERSON",
  PER_PERSON_PER_STAY = "PER_PERSON_PER_STAY",
  PER_PERSON_PER_NIGHT = "PER_PERSON_PER_NIGHT",
}

export class Commission implements ICommission {
  /** Commission Type */
  Type?: ECommissionType;
  /** Commission Amount in case Type is AMOUNT */
  Amount?: CurrencyAmount | undefined;
  /** Commission Value */
  Value?: string | undefined;
  /** Commission Text Description */
  Description?: string | undefined;

  constructor(data?: ICommission) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Type = _data["Type"];
      this.Amount = _data["Amount"] ? CurrencyAmount.fromJS(_data["Amount"]) : <any>undefined;
      this.Value = _data["Value"];
      this.Description = _data["Description"];
    }
  }

  static fromJS(data: any): Commission {
    data = typeof data === 'object' ? data : {};
    let result = new Commission();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Type"] = this.Type;
    data["Amount"] = this.Amount ? this.Amount.toJSON() : <any>undefined;
    data["Value"] = this.Value;
    data["Description"] = this.Description;
    return data;
  }
}

export interface ICommission {
  /** Commission Type */
  Type?: ECommissionType;
  /** Commission Amount in case Type is AMOUNT */
  Amount?: CurrencyAmount | undefined;
  /** Commission Value */
  Value?: string | undefined;
  /** Commission Text Description */
  Description?: string | undefined;
}

export enum ECommissionType {
  PERCENTAGE = "PERCENTAGE",
  AMOUNT = "AMOUNT",
}

export class Promotion implements IPromotion {
  /** Promotion Title */
  Title?: string | undefined;
  /** Promotion Description */
  Description?: string | undefined;

  constructor(data?: IPromotion) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Title = _data["Title"];
      this.Description = _data["Description"];
    }
  }

  static fromJS(data: any): Promotion {
    data = typeof data === 'object' ? data : {};
    let result = new Promotion();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Title"] = this.Title;
    data["Description"] = this.Description;
    return data;
  }
}

export interface IPromotion {
  /** Promotion Title */
  Title?: string | undefined;
  /** Promotion Description */
  Description?: string | undefined;
}

export abstract class SingleRoomResultCustomData implements ISingleRoomResultCustomData {

  protected _discriminator: string;

  constructor(data?: ISingleRoomResultCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "SingleRoomResultCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): SingleRoomResultCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "BOOKING_DOT_COM") {
      let result = new BookingDotComSingleRoomResultCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "SABRE_SYNXIS") {
      let result = new SabreSynXisSingleRoomResultCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "CREOLE") {
      let result = new CreoleSingleRoomResultCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "IHG_GRS") {
      let result = new IHGSingleRoomResultCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'SingleRoomResultCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface ISingleRoomResultCustomData {
}

export class BookingDotComSingleRoomResultCustomData extends SingleRoomResultCustomData implements IBookingDotComSingleRoomResultCustomData {
  RoomId?: number;
  RoomTypeId?: number;
  NumberOfRoomsLeft?: number;
  RoomSize?: RoomSize | undefined;

  constructor(data?: IBookingDotComSingleRoomResultCustomData) {
    super(data);
    this._discriminator = "BOOKING_DOT_COM";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.RoomId = _data["RoomId"];
      this.RoomTypeId = _data["RoomTypeId"];
      this.NumberOfRoomsLeft = _data["NumberOfRoomsLeft"];
      this.RoomSize = _data["RoomSize"] ? RoomSize.fromJS(_data["RoomSize"]) : <any>undefined;
    }
  }

  static fromJS(data: any): BookingDotComSingleRoomResultCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new BookingDotComSingleRoomResultCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["RoomId"] = this.RoomId;
    data["RoomTypeId"] = this.RoomTypeId;
    data["NumberOfRoomsLeft"] = this.NumberOfRoomsLeft;
    data["RoomSize"] = this.RoomSize ? this.RoomSize.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IBookingDotComSingleRoomResultCustomData extends ISingleRoomResultCustomData {
  RoomId?: number;
  RoomTypeId?: number;
  NumberOfRoomsLeft?: number;
  RoomSize?: RoomSize | undefined;
}

export class RoomSize implements IRoomSize {
  SquareFeet?: string | undefined;
  SquareMeters?: string | undefined;

  constructor(data?: IRoomSize) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.SquareFeet = _data["SquareFeet"];
      this.SquareMeters = _data["SquareMeters"];
    }
  }

  static fromJS(data: any): RoomSize {
    data = typeof data === 'object' ? data : {};
    let result = new RoomSize();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["SquareFeet"] = this.SquareFeet;
    data["SquareMeters"] = this.SquareMeters;
    return data;
  }
}

export interface IRoomSize {
  SquareFeet?: string | undefined;
  SquareMeters?: string | undefined;
}

export class SabreSynXisSingleRoomResultCustomData extends SingleRoomResultCustomData implements ISabreSynXisSingleRoomResultCustomData {
  /** The RoomType Code */
  RoomTypeCode?: string | undefined;
  /** The Hotel Code */
  HotelCode?: string | undefined;
  /** Number of Units returned in the RoomType from Sabre SynXis */
  NumberOfUnits?: number;

  constructor(data?: ISabreSynXisSingleRoomResultCustomData) {
    super(data);
    this._discriminator = "SABRE_SYNXIS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.RoomTypeCode = _data["RoomTypeCode"];
      this.HotelCode = _data["HotelCode"];
      this.NumberOfUnits = _data["NumberOfUnits"];
    }
  }

  static fromJS(data: any): SabreSynXisSingleRoomResultCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreSynXisSingleRoomResultCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["RoomTypeCode"] = this.RoomTypeCode;
    data["HotelCode"] = this.HotelCode;
    data["NumberOfUnits"] = this.NumberOfUnits;
    super.toJSON(data);
    return data;
  }
}

export interface ISabreSynXisSingleRoomResultCustomData extends ISingleRoomResultCustomData {
  /** The RoomType Code */
  RoomTypeCode?: string | undefined;
  /** The Hotel Code */
  HotelCode?: string | undefined;
  /** Number of Units returned in the RoomType from Sabre SynXis */
  NumberOfUnits?: number;
}

export class CreoleSingleRoomResultCustomData extends SingleRoomResultCustomData implements ICreoleSingleRoomResultCustomData {
  SequenceNmbr?: string | undefined;

  constructor(data?: ICreoleSingleRoomResultCustomData) {
    super(data);
    this._discriminator = "CREOLE";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.SequenceNmbr = _data["SequenceNmbr"];
    }
  }

  static fromJS(data: any): CreoleSingleRoomResultCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new CreoleSingleRoomResultCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["SequenceNmbr"] = this.SequenceNmbr;
    super.toJSON(data);
    return data;
  }
}

export interface ICreoleSingleRoomResultCustomData extends ISingleRoomResultCustomData {
  SequenceNmbr?: string | undefined;
}

export class IHGSingleRoomResultCustomData extends SingleRoomResultCustomData implements IIHGSingleRoomResultCustomData {
  /** IHG Hotel Mnemonic it's the same as connector match */
  HotelMnemonic?: string | undefined;
  /** Product Code used during Book */
  ProductCode?: string | undefined;
  /** Product Type Code same as RoomTypeCode  */
  ProductTypeCode?: string | undefined;

  constructor(data?: IIHGSingleRoomResultCustomData) {
    super(data);
    this._discriminator = "IHG_GRS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.HotelMnemonic = _data["HotelMnemonic"];
      this.ProductCode = _data["ProductCode"];
      this.ProductTypeCode = _data["ProductTypeCode"];
    }
  }

  static fromJS(data: any): IHGSingleRoomResultCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new IHGSingleRoomResultCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["HotelMnemonic"] = this.HotelMnemonic;
    data["ProductCode"] = this.ProductCode;
    data["ProductTypeCode"] = this.ProductTypeCode;
    super.toJSON(data);
    return data;
  }
}

export interface IIHGSingleRoomResultCustomData extends ISingleRoomResultCustomData {
  /** IHG Hotel Mnemonic it's the same as connector match */
  HotelMnemonic?: string | undefined;
  /** Product Code used during Book */
  ProductCode?: string | undefined;
  /** Product Type Code same as RoomTypeCode  */
  ProductTypeCode?: string | undefined;
}

export abstract class CustomerCustomDataOfSingleRoomResult implements ICustomerCustomDataOfSingleRoomResult {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfSingleRoomResult) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfSingleRoomResult";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfSingleRoomResult {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfSingleRoomResult' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfSingleRoomResult {
}

/** General Hotel Policy for Example: admitted child, pets or other general policies NOT REFERRED TO CANCEL POLICY */
export class GeneralPolicy implements IGeneralPolicy {
  /** Policy Code */
  PolicyCode?: string | undefined;
  /** Policy Text */
  PolicyText?: string | undefined;

  constructor(data?: IGeneralPolicy) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.PolicyCode = _data["PolicyCode"];
      this.PolicyText = _data["PolicyText"];
    }
  }

  static fromJS(data: any): GeneralPolicy {
    data = typeof data === 'object' ? data : {};
    let result = new GeneralPolicy();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["PolicyCode"] = this.PolicyCode;
    data["PolicyText"] = this.PolicyText;
    return data;
  }
}

/** General Hotel Policy for Example: admitted child, pets or other general policies NOT REFERRED TO CANCEL POLICY */
export interface IGeneralPolicy {
  /** Policy Code */
  PolicyCode?: string | undefined;
  /** Policy Text */
  PolicyText?: string | undefined;
}

export class Image implements IImage {
  /** Define if the Image is the main Photo */
  IsMainPhoto?: boolean;
  /** Image Title */
  Title?: string | undefined;
  /** List of Image Tags */
  Tags?: EImageTags[] | undefined;
  /** List of original Tags */
  OriginalTags?: string[] | undefined;
  /** Original Image URL */
  OriginalUrl?: string | undefined;

  constructor(data?: IImage) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.IsMainPhoto = _data["IsMainPhoto"];
      this.Title = _data["Title"];
      if (Array.isArray(_data["Tags"])) {
        this.Tags = [] as any;
        for (let item of _data["Tags"])
          this.Tags!.push(item);
      }
      if (Array.isArray(_data["OriginalTags"])) {
        this.OriginalTags = [] as any;
        for (let item of _data["OriginalTags"])
          this.OriginalTags!.push(item);
      }
      this.OriginalUrl = _data["OriginalUrl"];
    }
  }

  static fromJS(data: any): Image {
    data = typeof data === 'object' ? data : {};
    let result = new Image();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["IsMainPhoto"] = this.IsMainPhoto;
    data["Title"] = this.Title;
    if (Array.isArray(this.Tags)) {
      data["Tags"] = [];
      for (let item of this.Tags)
        data["Tags"].push(item);
    }
    if (Array.isArray(this.OriginalTags)) {
      data["OriginalTags"] = [];
      for (let item of this.OriginalTags)
        data["OriginalTags"].push(item);
    }
    data["OriginalUrl"] = this.OriginalUrl;
    return data;
  }
}

export interface IImage {
  /** Define if the Image is the main Photo */
  IsMainPhoto?: boolean;
  /** Image Title */
  Title?: string | undefined;
  /** List of Image Tags */
  Tags?: EImageTags[] | undefined;
  /** List of original Tags */
  OriginalTags?: string[] | undefined;
  /** Original Image URL */
  OriginalUrl?: string | undefined;
}

export enum EImageTags {
  HOTEL = "HOTEL",
  ROOM = "ROOM",
  SPA = "SPA",
  RECEPTION = "RECEPTION",
  BATH = "BATH",
  POOL = "POOL",
  BEACH = "BEACH",
  RESTAURANT = "RESTAURANT",
}

export abstract class SingleHotelAvailResultCustomData implements ISingleHotelAvailResultCustomData {

  protected _discriminator: string;

  constructor(data?: ISingleHotelAvailResultCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "SingleHotelAvailResultCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): SingleHotelAvailResultCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "BOOKING_DOT_COM") {
      let result = new BookingDotComSingleHotelAvailResultCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'SingleHotelAvailResultCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface ISingleHotelAvailResultCustomData {
}

export class BookingDotComSingleHotelAvailResultCustomData extends SingleHotelAvailResultCustomData implements IBookingDotComSingleHotelAvailResultCustomData {
  CC_Required?: boolean;
  DirectPayment?: boolean;

  constructor(data?: IBookingDotComSingleHotelAvailResultCustomData) {
    super(data);
    this._discriminator = "BOOKING_DOT_COM";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.CC_Required = _data["CC_Required"];
      this.DirectPayment = _data["DirectPayment"];
    }
  }

  static fromJS(data: any): BookingDotComSingleHotelAvailResultCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new BookingDotComSingleHotelAvailResultCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CC_Required"] = this.CC_Required;
    data["DirectPayment"] = this.DirectPayment;
    super.toJSON(data);
    return data;
  }
}

export interface IBookingDotComSingleHotelAvailResultCustomData extends ISingleHotelAvailResultCustomData {
  CC_Required?: boolean;
  DirectPayment?: boolean;
}

export abstract class CustomerCustomDataOfSingleHotelAvailResult implements ICustomerCustomDataOfSingleHotelAvailResult {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfSingleHotelAvailResult) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfSingleHotelAvailResult";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfSingleHotelAvailResult {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataCode"] === "AAA_BBB") {
      let result = new HotelApiCustomerCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'CustomerCustomDataOfSingleHotelAvailResult' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfSingleHotelAvailResult {
}

export class DestinationDetails implements IDestinationDetails {
  /** Destination Id */
  Id?: string | undefined;
  /** Destination Name */
  Name?: string | undefined;
  /** Destination Code */
  Code?: string | undefined;
  /** List of match on the Connectors */
  ConnectorsMatch?: ConnectorMatch[] | undefined;
  /** Destination Information */
  DestinationInfos?: DestinationInfos | undefined;

  constructor(data?: IDestinationDetails) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Id = _data["Id"];
      this.Name = _data["Name"];
      this.Code = _data["Code"];
      if (Array.isArray(_data["ConnectorsMatch"])) {
        this.ConnectorsMatch = [] as any;
        for (let item of _data["ConnectorsMatch"])
          this.ConnectorsMatch!.push(ConnectorMatch.fromJS(item));
      }
      this.DestinationInfos = _data["DestinationInfos"] ? DestinationInfos.fromJS(_data["DestinationInfos"]) : <any>undefined;
    }
  }

  static fromJS(data: any): DestinationDetails {
    data = typeof data === 'object' ? data : {};
    let result = new DestinationDetails();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Id"] = this.Id;
    data["Name"] = this.Name;
    data["Code"] = this.Code;
    if (Array.isArray(this.ConnectorsMatch)) {
      data["ConnectorsMatch"] = [];
      for (let item of this.ConnectorsMatch)
        data["ConnectorsMatch"].push(item.toJSON());
    }
    data["DestinationInfos"] = this.DestinationInfos ? this.DestinationInfos.toJSON() : <any>undefined;
    return data;
  }
}

export interface IDestinationDetails {
  /** Destination Id */
  Id?: string | undefined;
  /** Destination Name */
  Name?: string | undefined;
  /** Destination Code */
  Code?: string | undefined;
  /** List of match on the Connectors */
  ConnectorsMatch?: ConnectorMatch[] | undefined;
  /** Destination Information */
  DestinationInfos?: DestinationInfos | undefined;
}

export class DestinationInfos implements IDestinationInfos {
  /** Destination Type */
  Type?: EDestinationType;
  /** Latitude and Longitude Location */
  Location?: LatLng | undefined;
  /** Country */
  Country?: string | undefined;
  /** Destination Description */
  Description?: string | undefined;
  /** Destination Images */
  Images?: Image[] | undefined;
  /** Destination Links */
  Links?: Link[] | undefined;

  constructor(data?: IDestinationInfos) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Type = _data["Type"];
      this.Location = _data["Location"] ? LatLng.fromJS(_data["Location"]) : <any>undefined;
      this.Country = _data["Country"];
      this.Description = _data["Description"];
      if (Array.isArray(_data["Images"])) {
        this.Images = [] as any;
        for (let item of _data["Images"])
          this.Images!.push(Image.fromJS(item));
      }
      if (Array.isArray(_data["Links"])) {
        this.Links = [] as any;
        for (let item of _data["Links"])
          this.Links!.push(Link.fromJS(item));
      }
    }
  }

  static fromJS(data: any): DestinationInfos {
    data = typeof data === 'object' ? data : {};
    let result = new DestinationInfos();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Type"] = this.Type;
    data["Location"] = this.Location ? this.Location.toJSON() : <any>undefined;
    data["Country"] = this.Country;
    data["Description"] = this.Description;
    if (Array.isArray(this.Images)) {
      data["Images"] = [];
      for (let item of this.Images)
        data["Images"].push(item.toJSON());
    }
    if (Array.isArray(this.Links)) {
      data["Links"] = [];
      for (let item of this.Links)
        data["Links"].push(item.toJSON());
    }
    return data;
  }
}

export interface IDestinationInfos {
  /** Destination Type */
  Type?: EDestinationType;
  /** Latitude and Longitude Location */
  Location?: LatLng | undefined;
  /** Country */
  Country?: string | undefined;
  /** Destination Description */
  Description?: string | undefined;
  /** Destination Images */
  Images?: Image[] | undefined;
  /** Destination Links */
  Links?: Link[] | undefined;
}

export enum EDestinationType {
  COUNTRY = "COUNTRY",
  REGION = "REGION",
  CITY = "CITY",
}

export class LatLng implements ILatLng {
  /** Latitude */
  Lat?: number;
  /** Longitude */
  Lng?: number;

  constructor(data?: ILatLng) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Lat = _data["Lat"];
      this.Lng = _data["Lng"];
    }
  }

  static fromJS(data: any): LatLng {
    data = typeof data === 'object' ? data : {};
    let result = new LatLng();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Lat"] = this.Lat;
    data["Lng"] = this.Lng;
    return data;
  }
}

export interface ILatLng {
  /** Latitude */
  Lat?: number;
  /** Longitude */
  Lng?: number;
}

export class Link implements ILink {
  /** Link Title */
  Title?: string | undefined;
  /** Link Type */
  Type?: ELinkType;
  /** Link Tag */
  Tag?: string | undefined;
  /** Link URL */
  Url?: string | undefined;

  constructor(data?: ILink) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Title = _data["Title"];
      this.Type = _data["Type"];
      this.Tag = _data["Tag"];
      this.Url = _data["Url"];
    }
  }

  static fromJS(data: any): Link {
    data = typeof data === 'object' ? data : {};
    let result = new Link();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Title"] = this.Title;
    data["Type"] = this.Type;
    data["Tag"] = this.Tag;
    data["Url"] = this.Url;
    return data;
  }
}

export interface ILink {
  /** Link Title */
  Title?: string | undefined;
  /** Link Type */
  Type?: ELinkType;
  /** Link Tag */
  Tag?: string | undefined;
  /** Link URL */
  Url?: string | undefined;
}

export enum ELinkType {
  OFFICIAL_WEBSITE = "OFFICIAL_WEBSITE",
  WIKIPEDIA = "WIKIPEDIA",
  BOOKING_DOT_COM = "BOOKING_DOT_COM",
  OTHER = "OTHER",
}

export class Address implements IAddress {
  /** Address Type if defined */
  Type?: string | undefined;
  /** Street an Number */
  Street?: string | undefined;
  /** Zip */
  Zip?: string | undefined;
  /** City */
  City?: string | undefined;
  /** Country */
  Country?: string | undefined;
  /** State */
  State?: string | undefined;

  constructor(data?: IAddress) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Type = _data["Type"];
      this.Street = _data["Street"];
      this.Zip = _data["Zip"];
      this.City = _data["City"];
      this.Country = _data["Country"];
      this.State = _data["State"];
    }
  }

  static fromJS(data: any): Address {
    data = typeof data === 'object' ? data : {};
    let result = new Address();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Type"] = this.Type;
    data["Street"] = this.Street;
    data["Zip"] = this.Zip;
    data["City"] = this.City;
    data["Country"] = this.Country;
    data["State"] = this.State;
    return data;
  }
}

export interface IAddress {
  /** Address Type if defined */
  Type?: string | undefined;
  /** Street an Number */
  Street?: string | undefined;
  /** Zip */
  Zip?: string | undefined;
  /** City */
  City?: string | undefined;
  /** Country */
  Country?: string | undefined;
  /** State */
  State?: string | undefined;
}

export class Email implements IEmail {
  /** Title */
  Title?: string | undefined;
  /** Email */
  Value?: string | undefined;

  constructor(data?: IEmail) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Title = _data["Title"];
      this.Value = _data["Value"];
    }
  }

  static fromJS(data: any): Email {
    data = typeof data === 'object' ? data : {};
    let result = new Email();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Title"] = this.Title;
    data["Value"] = this.Value;
    return data;
  }
}

export interface IEmail {
  /** Title */
  Title?: string | undefined;
  /** Email */
  Value?: string | undefined;
}

export class Phone implements IPhone {
  /** Phone Title */
  Title?: string | undefined;
  /** Phone */
  Value?: string | undefined;

  constructor(data?: IPhone) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Title = _data["Title"];
      this.Value = _data["Value"];
    }
  }

  static fromJS(data: any): Phone {
    data = typeof data === 'object' ? data : {};
    let result = new Phone();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Title"] = this.Title;
    data["Value"] = this.Value;
    return data;
  }
}

export interface IPhone {
  /** Phone Title */
  Title?: string | undefined;
  /** Phone */
  Value?: string | undefined;
}

export class CheckinCheckout implements ICheckinCheckout {
  /** Checkin Form */
  CheckinFrom?: string | undefined;
  /** Checkin Until */
  CheckinTo?: string | undefined;
  /** Checkout From */
  CheckoutFrom?: string | undefined;
  /** Checkout Until */
  CheckoutTo?: string | undefined;

  constructor(data?: ICheckinCheckout) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.CheckinFrom = _data["CheckinFrom"];
      this.CheckinTo = _data["CheckinTo"];
      this.CheckoutFrom = _data["CheckoutFrom"];
      this.CheckoutTo = _data["CheckoutTo"];
    }
  }

  static fromJS(data: any): CheckinCheckout {
    data = typeof data === 'object' ? data : {};
    let result = new CheckinCheckout();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CheckinFrom"] = this.CheckinFrom;
    data["CheckinTo"] = this.CheckinTo;
    data["CheckoutFrom"] = this.CheckoutFrom;
    data["CheckoutTo"] = this.CheckoutTo;
    return data;
  }
}

export interface ICheckinCheckout {
  /** Checkin Form */
  CheckinFrom?: string | undefined;
  /** Checkin Until */
  CheckinTo?: string | undefined;
  /** Checkout From */
  CheckoutFrom?: string | undefined;
  /** Checkout Until */
  CheckoutTo?: string | undefined;
}

export enum ECreditCardType {
  MASTERCARD = "MASTERCARD",
  VISA = "VISA",
  AMERICAN_EXPRESS = "AMERICAN_EXPRESS",
  JCB_INTERNATIONAL = "JCB_INTERNATIONAL",
  CARTE_BLANCHE = "CARTE_BLANCHE",
  CHINA_UNION_PAY_EXPEDIA = "CHINA_UNION_PAY_EXPEDIA",
  CHINA_UNION_PAY = "CHINA_UNION_PAY",
  DINERS_CLUB = "DINERS_CLUB",
  DISCOVER_CARD = "DISCOVER_CARD",
  EURO_CARD = "EURO_CARD",
  FORBRUGSFORENINGSKORT = "FORBRUGSFORENINGSKORT",
  MAESTRO = "MAESTRO",
  AIR_PLUS = "AIR_PLUS",
  UATP = "UATP",
  BUSINESS_CARD = "BUSINESS_CARD",
}

export class HotelApiCustomerCustomData extends CustomerCustomDataOfSingleHotelAvailResult implements IHotelApiCustomerCustomData {
  Name?: string | undefined;
  Code?: string | undefined;
  Value?: number;

  constructor(data?: IHotelApiCustomerCustomData) {
    super(data);
    this._discriminator = "AAA_BBB";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Name = _data["Name"];
      this.Code = _data["Code"];
      this.Value = _data["Value"];
    }
  }

  static fromJS(data: any): HotelApiCustomerCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new HotelApiCustomerCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Name"] = this.Name;
    data["Code"] = this.Code;
    data["Value"] = this.Value;
    super.toJSON(data);
    return data;
  }
}

export interface IHotelApiCustomerCustomData extends ICustomerCustomDataOfSingleHotelAvailResult {
  Name?: string | undefined;
  Code?: string | undefined;
  Value?: number;
}

export abstract class AvailabilityOutputCustomData implements IAvailabilityOutputCustomData {
  CustomDataConnectorCode!: string;

  constructor(data?: IAvailabilityOutputCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.CustomDataConnectorCode = _data["CustomDataConnectorCode"];
    }
  }

  static fromJS(data: any): AvailabilityOutputCustomData {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'AvailabilityOutputCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this.CustomDataConnectorCode;
    return data;
  }
}

export interface IAvailabilityOutputCustomData {
  CustomDataConnectorCode: string;
}

export abstract class CustomerCustomDataOfJupiterHotelAvailabilityOutput implements ICustomerCustomDataOfJupiterHotelAvailabilityOutput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterHotelAvailabilityOutput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterHotelAvailabilityOutput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterHotelAvailabilityOutput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterHotelAvailabilityOutput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterHotelAvailabilityOutput {
}

export class JupiterHotelAvailabilityRQ extends BaseCacheableRQ implements IJupiterHotelAvailabilityRQ {
  /** JupiterHotelAvailabilityInput Request */
  Request?: JupiterHotelAvailabilityInput | undefined;

  constructor(data?: IJupiterHotelAvailabilityRQ) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Request = _data["Request"] ? JupiterHotelAvailabilityInput.fromJS(_data["Request"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterHotelAvailabilityRQ {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelAvailabilityRQ();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Request"] = this.Request ? this.Request.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelAvailabilityRQ extends IBaseCacheableRQ {
  /** JupiterHotelAvailabilityInput Request */
  Request?: JupiterHotelAvailabilityInput | undefined;
}

export class JupiterHotelAvailabilityInput extends BaseInput implements IJupiterHotelAvailabilityInput {
  /** Start Date of the stay with format: "yyyy-MM-dd" */
  FromDate!: string;
  /** End Date of the stay with format: "yyyy-MM-dd" */
  ToDate!: string;
  /** List of Connectors code to search. If null search on all Enable Connectors */
  ConnectorsSearchOnly?: EH2HConnectorCode[] | undefined;
  /** Room List that will be searched on the Connectors */
  Rooms!: RoomRequest[];
  /** Preferred Currency to search. Depends on Connectors if the features is available */
  PreferredCurrency?: string | undefined;
  /** Preferred Language to search. Depends on Connectors if the features is available

   IHG GRS: The format of the header is language-LOCALE (e.g., en-US) */
  PreferredLanguage?: string | undefined;
  /** Dictionary of Connectors search Settings */
  ConnectorsSettings!: AvailabilityInputCustomData[];

  constructor(data?: IJupiterHotelAvailabilityInput) {
    super(data);
    if (!data) {
      this.Rooms = [];
      this.ConnectorsSettings = [];
    }
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.FromDate = _data["FromDate"];
      this.ToDate = _data["ToDate"];
      if (Array.isArray(_data["ConnectorsSearchOnly"])) {
        this.ConnectorsSearchOnly = [] as any;
        for (let item of _data["ConnectorsSearchOnly"])
          this.ConnectorsSearchOnly!.push(item);
      }
      if (Array.isArray(_data["Rooms"])) {
        this.Rooms = [] as any;
        for (let item of _data["Rooms"])
          this.Rooms!.push(RoomRequest.fromJS(item));
      }
      this.PreferredCurrency = _data["PreferredCurrency"];
      this.PreferredLanguage = _data["PreferredLanguage"];
      if (Array.isArray(_data["ConnectorsSettings"])) {
        this.ConnectorsSettings = [] as any;
        for (let item of _data["ConnectorsSettings"])
          this.ConnectorsSettings!.push(AvailabilityInputCustomData.fromJS(item));
      }
    }
  }

  static fromJS(data: any): JupiterHotelAvailabilityInput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelAvailabilityInput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["FromDate"] = this.FromDate;
    data["ToDate"] = this.ToDate;
    if (Array.isArray(this.ConnectorsSearchOnly)) {
      data["ConnectorsSearchOnly"] = [];
      for (let item of this.ConnectorsSearchOnly)
        data["ConnectorsSearchOnly"].push(item);
    }
    if (Array.isArray(this.Rooms)) {
      data["Rooms"] = [];
      for (let item of this.Rooms)
        data["Rooms"].push(item.toJSON());
    }
    data["PreferredCurrency"] = this.PreferredCurrency;
    data["PreferredLanguage"] = this.PreferredLanguage;
    if (Array.isArray(this.ConnectorsSettings)) {
      data["ConnectorsSettings"] = [];
      for (let item of this.ConnectorsSettings)
        data["ConnectorsSettings"].push(item.toJSON());
    }
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelAvailabilityInput extends IBaseInput {
  /** Start Date of the stay with format: "yyyy-MM-dd" */
  FromDate: string;
  /** End Date of the stay with format: "yyyy-MM-dd" */
  ToDate: string;
  /** List of Connectors code to search. If null search on all Enable Connectors */
  ConnectorsSearchOnly?: EH2HConnectorCode[] | undefined;
  /** Room List that will be searched on the Connectors */
  Rooms: RoomRequest[];
  /** Preferred Currency to search. Depends on Connectors if the features is available */
  PreferredCurrency?: string | undefined;
  /** Preferred Language to search. Depends on Connectors if the features is available

   IHG GRS: The format of the header is language-LOCALE (e.g., en-US) */
  PreferredLanguage?: string | undefined;
  /** Dictionary of Connectors search Settings */
  ConnectorsSettings: AvailabilityInputCustomData[];
}

export class PaxListRequest implements IPaxListRequest {
  /** List of Pax */
  Paxes?: PaxRequest[] | undefined;

  constructor(data?: IPaxListRequest) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      if (Array.isArray(_data["Paxes"])) {
        this.Paxes = [] as any;
        for (let item of _data["Paxes"])
          this.Paxes!.push(PaxRequest.fromJS(item));
      }
    }
  }

  static fromJS(data: any): PaxListRequest {
    data = typeof data === 'object' ? data : {};
    let result = new PaxListRequest();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.Paxes)) {
      data["Paxes"] = [];
      for (let item of this.Paxes)
        data["Paxes"].push(item.toJSON());
    }
    return data;
  }
}

export interface IPaxListRequest {
  /** List of Pax */
  Paxes?: PaxRequest[] | undefined;
}

export class RoomRequest extends PaxListRequest implements IRoomRequest {
  /** Connector Custom Data */
  ConnectorCustomData?: RoomRequestCustomData | undefined;

  constructor(data?: IRoomRequest) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? RoomRequestCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): RoomRequest {
    data = typeof data === 'object' ? data : {};
    let result = new RoomRequest();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IRoomRequest extends IPaxListRequest {
  /** Connector Custom Data */
  ConnectorCustomData?: RoomRequestCustomData | undefined;
}

export abstract class RoomRequestCustomData implements IRoomRequestCustomData {

  protected _discriminator: string;

  constructor(data?: IRoomRequestCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "RoomRequestCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): RoomRequestCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "SABRE_SYNXIS") {
      let result = new SabreSynXisRoomRequestCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "IHG_GRS") {
      let result = new IHGRoomRequestCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "OKKAMI") {
      let result = new OkkamiRoomRequestCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'RoomRequestCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IRoomRequestCustomData {
}

export class SabreSynXisRoomRequestCustomData extends RoomRequestCustomData implements ISabreSynXisRoomRequestCustomData {
  /** The Specific RoomType Code */
  RoomTypeCode?: string | undefined;

  constructor(data?: ISabreSynXisRoomRequestCustomData) {
    super(data);
    this._discriminator = "SABRE_SYNXIS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.RoomTypeCode = _data["RoomTypeCode"];
    }
  }

  static fromJS(data: any): SabreSynXisRoomRequestCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreSynXisRoomRequestCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["RoomTypeCode"] = this.RoomTypeCode;
    super.toJSON(data);
    return data;
  }
}

export interface ISabreSynXisRoomRequestCustomData extends IRoomRequestCustomData {
  /** The Specific RoomType Code */
  RoomTypeCode?: string | undefined;
}

export class IHGRoomRequestCustomData extends RoomRequestCustomData implements IIHGRoomRequestCustomData {
  /** Product Type code passed in the Avail
   Code defining the product type. Ex - SR (Sleeping room), MR (Meeting room) or any service) */
  ProductTypeCode?: string | undefined;
  /** Product Type code passed in the Avail
   Business code representing an inventory type. Only required when requesting the rate rules for the particular product. */
  ProductCode?: string | undefined;

  constructor(data?: IIHGRoomRequestCustomData) {
    super(data);
    this._discriminator = "IHG_GRS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ProductTypeCode = _data["ProductTypeCode"];
      this.ProductCode = _data["ProductCode"];
    }
  }

  static fromJS(data: any): IHGRoomRequestCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new IHGRoomRequestCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ProductTypeCode"] = this.ProductTypeCode;
    data["ProductCode"] = this.ProductCode;
    super.toJSON(data);
    return data;
  }
}

export interface IIHGRoomRequestCustomData extends IRoomRequestCustomData {
  /** Product Type code passed in the Avail
   Code defining the product type. Ex - SR (Sleeping room), MR (Meeting room) or any service) */
  ProductTypeCode?: string | undefined;
  /** Product Type code passed in the Avail
   Business code representing an inventory type. Only required when requesting the rate rules for the particular product. */
  ProductCode?: string | undefined;
}

export class OkkamiRoomRequestCustomData extends RoomRequestCustomData implements IOkkamiRoomRequestCustomData {
  /** Room TypeCode */
  RoomTypeCode?: string | undefined;

  constructor(data?: IOkkamiRoomRequestCustomData) {
    super(data);
    this._discriminator = "OKKAMI";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.RoomTypeCode = _data["RoomTypeCode"];
    }
  }

  static fromJS(data: any): OkkamiRoomRequestCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new OkkamiRoomRequestCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["RoomTypeCode"] = this.RoomTypeCode;
    super.toJSON(data);
    return data;
  }
}

export interface IOkkamiRoomRequestCustomData extends IRoomRequestCustomData {
  /** Room TypeCode */
  RoomTypeCode?: string | undefined;
}

export abstract class CustomerCustomDataOfRoomRequest implements ICustomerCustomDataOfRoomRequest {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfRoomRequest) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfRoomRequest";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfRoomRequest {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfRoomRequest' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfRoomRequest {
}

export class PaxRequest implements IPaxRequest {
  /** Pax Type */
  Type?: EPaxType;
  /** Pax Age */
  Age?: number | undefined;

  constructor(data?: IPaxRequest) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Type = _data["Type"];
      this.Age = _data["Age"];
    }
  }

  static fromJS(data: any): PaxRequest {
    data = typeof data === 'object' ? data : {};
    let result = new PaxRequest();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Type"] = this.Type;
    data["Age"] = this.Age;
    return data;
  }
}

export interface IPaxRequest {
  /** Pax Type */
  Type?: EPaxType;
  /** Pax Age */
  Age?: number | undefined;
}

export enum EPaxType {
  INFANT = "INFANT",
  CHILD = "CHILD",
  ADULT = "ADULT",
}

export abstract class AvailabilityInputCustomData implements IAvailabilityInputCustomData {
  HotelRefIds?: string[] | undefined;
  DestinationRefIds?: string[] | undefined;

  protected _discriminator: string;

  constructor(data?: IAvailabilityInputCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "AvailabilityInputCustomData";
  }

  init(_data?: any) {
    if (_data) {
      if (Array.isArray(_data["HotelRefIds"])) {
        this.HotelRefIds = [] as any;
        for (let item of _data["HotelRefIds"])
          this.HotelRefIds!.push(item);
      }
      if (Array.isArray(_data["DestinationRefIds"])) {
        this.DestinationRefIds = [] as any;
        for (let item of _data["DestinationRefIds"])
          this.DestinationRefIds!.push(item);
      }
    }
  }

  static fromJS(data: any): AvailabilityInputCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "BOOKING_DOT_COM") {
      let result = new BookingDotComAvailabilityInputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "SABRE_SYNXIS") {
      let result = new SabreSynXisAvailabilityInputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "SABRE") {
      let result = new SabreAvailabilityInputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "CREOLE") {
      let result = new CreoleHotelAvailabilityInputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "SABRE_CSL") {
      let result = new SabreCSLAvailabilityInputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "SANDALS") {
      let result = new SandalsAvailabilityInputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "IHG_GRS") {
      let result = new IHGAvailabilityInputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "HOTELBEDS") {
      let result = new HotelbedsAvailabilityInputCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'AvailabilityInputCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    if (Array.isArray(this.HotelRefIds)) {
      data["HotelRefIds"] = [];
      for (let item of this.HotelRefIds)
        data["HotelRefIds"].push(item);
    }
    if (Array.isArray(this.DestinationRefIds)) {
      data["DestinationRefIds"] = [];
      for (let item of this.DestinationRefIds)
        data["DestinationRefIds"].push(item);
    }
    return data;
  }
}

export interface IAvailabilityInputCustomData {
  HotelRefIds?: string[] | undefined;
  DestinationRefIds?: string[] | undefined;
}

export class BookingDotComAvailabilityInputCustomData extends AvailabilityInputCustomData implements IBookingDotComAvailabilityInputCustomData {
  Position?: LatLng | undefined;
  /** The radius is km to search around the specified latitude and longitude. */
  Radius?: number | undefined;
  /** REQUIRED - Application affiliate id that you wish this request to be tracked against. */
  AffiliateId?: number | undefined;
  MinReviewScore?: number | undefined;
  MaxPrice?: number | undefined;
  FreeCancellation?: boolean | undefined;
  NotRefundable?: boolean | undefined;
  ShowTest?: boolean | undefined;
  NoDorms?: boolean;
  PropertyType?: string[] | undefined;
  Stars?: number[] | undefined;
  NoCreditCard?: boolean | undefined;
  MealPlan?: string | undefined;
  Rows?: number;
  Offset?: number;
  OrderBy?: EOrderBy;
  OrderDir?: EOrderDir;

  constructor(data?: IBookingDotComAvailabilityInputCustomData) {
    super(data);
    if (!data) {
      this.OrderBy = EOrderBy.PRICE;
      this.OrderDir = EOrderDir.ASC;
    }
    this._discriminator = "BOOKING_DOT_COM";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Position = _data["Position"] ? LatLng.fromJS(_data["Position"]) : <any>undefined;
      this.Radius = _data["Radius"];
      this.AffiliateId = _data["AffiliateId"];
      this.MinReviewScore = _data["MinReviewScore"];
      this.MaxPrice = _data["MaxPrice"];
      this.FreeCancellation = _data["FreeCancellation"];
      this.NotRefundable = _data["NotRefundable"];
      this.ShowTest = _data["ShowTest"];
      this.NoDorms = _data["NoDorms"];
      if (Array.isArray(_data["PropertyType"])) {
        this.PropertyType = [] as any;
        for (let item of _data["PropertyType"])
          this.PropertyType!.push(item);
      }
      if (Array.isArray(_data["Stars"])) {
        this.Stars = [] as any;
        for (let item of _data["Stars"])
          this.Stars!.push(item);
      }
      this.NoCreditCard = _data["NoCreditCard"];
      this.MealPlan = _data["MealPlan"];
      this.Rows = _data["Rows"];
      this.Offset = _data["Offset"];
      this.OrderBy = _data["OrderBy"] !== undefined ? _data["OrderBy"] : EOrderBy.PRICE;
      this.OrderDir = _data["OrderDir"] !== undefined ? _data["OrderDir"] : EOrderDir.ASC;
    }
  }

  static fromJS(data: any): BookingDotComAvailabilityInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new BookingDotComAvailabilityInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Position"] = this.Position ? this.Position.toJSON() : <any>undefined;
    data["Radius"] = this.Radius;
    data["AffiliateId"] = this.AffiliateId;
    data["MinReviewScore"] = this.MinReviewScore;
    data["MaxPrice"] = this.MaxPrice;
    data["FreeCancellation"] = this.FreeCancellation;
    data["NotRefundable"] = this.NotRefundable;
    data["ShowTest"] = this.ShowTest;
    data["NoDorms"] = this.NoDorms;
    if (Array.isArray(this.PropertyType)) {
      data["PropertyType"] = [];
      for (let item of this.PropertyType)
        data["PropertyType"].push(item);
    }
    if (Array.isArray(this.Stars)) {
      data["Stars"] = [];
      for (let item of this.Stars)
        data["Stars"].push(item);
    }
    data["NoCreditCard"] = this.NoCreditCard;
    data["MealPlan"] = this.MealPlan;
    data["Rows"] = this.Rows;
    data["Offset"] = this.Offset;
    data["OrderBy"] = this.OrderBy;
    data["OrderDir"] = this.OrderDir;
    super.toJSON(data);
    return data;
  }
}

export interface IBookingDotComAvailabilityInputCustomData extends IAvailabilityInputCustomData {
  Position?: LatLng | undefined;
  /** The radius is km to search around the specified latitude and longitude. */
  Radius?: number | undefined;
  /** REQUIRED - Application affiliate id that you wish this request to be tracked against. */
  AffiliateId?: number | undefined;
  MinReviewScore?: number | undefined;
  MaxPrice?: number | undefined;
  FreeCancellation?: boolean | undefined;
  NotRefundable?: boolean | undefined;
  ShowTest?: boolean | undefined;
  NoDorms?: boolean;
  PropertyType?: string[] | undefined;
  Stars?: number[] | undefined;
  NoCreditCard?: boolean | undefined;
  MealPlan?: string | undefined;
  Rows?: number;
  Offset?: number;
  OrderBy?: EOrderBy;
  OrderDir?: EOrderDir;
}

export enum EOrderBy {
  DISTANCE = "DISTANCE",
  POPULARITY = "POPULARITY",
  PRICE = "PRICE",
  RANKING = "RANKING",
  REVIEW_SCORE = "REVIEW_SCORE",
  STARS = "STARS",
}

export enum EOrderDir {
  ASCENDING = "ASCENDING",
  DESCENDING = "DESCENDING",
  ASC = "ASC",
  DESC = "DESC",
}

export class SabreSynXisAvailabilityInputCustomData extends AvailabilityInputCustomData implements ISabreSynXisAvailabilityInputCustomData {
  /** The Sub Source Code passed to Sabre in the POS
   If null or empty it'll use the default value sent by Sabre related to the Login Test/Production */
  ChannelSubSourceCode?: string | undefined;
  /** Promotional Codes -&gt; Passed as PromoCode */
  PromotionCodes?: string[] | undefined;
  /** RatePlan Code or Group Code

   Used to get availability on a specific RatePlan or a Group Code */
  RatePlanCodeOrGroupCode?: string | undefined;
  /** RatePlan Type

   Used to get availability on a specific RatePlan Type

   Value: 29 -  Standard redemption rate.
   All rate plans for the hotel with a redemption type of FNS (free night stay) are included in the availability check.

   Value: 30 -  Discount redemption rate.
   All rate plans for the hotel with a redemption type of PAC (points and cash) are included in the availability check. */
  RatePlanType?: string | undefined;
  /** If set to true it will forward an ExactMatchOnly to Sabre.

   Default functionality:
   pass to Sabre ExactMatchOnly to true if is present RatePlanCodeOrGroupCode on this or is present a RoomTypeCode on Room.ConnectorCustomData
   pass to Sabre ExactMatchOnly to false in other cases

   Set this to true/false if you want to override this functionality.
   If it's setup it will use this value always  */
  ExactMatchOnly?: boolean | undefined;

  constructor(data?: ISabreSynXisAvailabilityInputCustomData) {
    super(data);
    this._discriminator = "SABRE_SYNXIS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ChannelSubSourceCode = _data["ChannelSubSourceCode"];
      if (Array.isArray(_data["PromotionCodes"])) {
        this.PromotionCodes = [] as any;
        for (let item of _data["PromotionCodes"])
          this.PromotionCodes!.push(item);
      }
      this.RatePlanCodeOrGroupCode = _data["RatePlanCodeOrGroupCode"];
      this.RatePlanType = _data["RatePlanType"];
      this.ExactMatchOnly = _data["ExactMatchOnly"];
    }
  }

  static fromJS(data: any): SabreSynXisAvailabilityInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreSynXisAvailabilityInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ChannelSubSourceCode"] = this.ChannelSubSourceCode;
    if (Array.isArray(this.PromotionCodes)) {
      data["PromotionCodes"] = [];
      for (let item of this.PromotionCodes)
        data["PromotionCodes"].push(item);
    }
    data["RatePlanCodeOrGroupCode"] = this.RatePlanCodeOrGroupCode;
    data["RatePlanType"] = this.RatePlanType;
    data["ExactMatchOnly"] = this.ExactMatchOnly;
    super.toJSON(data);
    return data;
  }
}

export interface ISabreSynXisAvailabilityInputCustomData extends IAvailabilityInputCustomData {
  /** The Sub Source Code passed to Sabre in the POS
   If null or empty it'll use the default value sent by Sabre related to the Login Test/Production */
  ChannelSubSourceCode?: string | undefined;
  /** Promotional Codes -&gt; Passed as PromoCode */
  PromotionCodes?: string[] | undefined;
  /** RatePlan Code or Group Code

   Used to get availability on a specific RatePlan or a Group Code */
  RatePlanCodeOrGroupCode?: string | undefined;
  /** RatePlan Type

   Used to get availability on a specific RatePlan Type

   Value: 29 -  Standard redemption rate.
   All rate plans for the hotel with a redemption type of FNS (free night stay) are included in the availability check.

   Value: 30 -  Discount redemption rate.
   All rate plans for the hotel with a redemption type of PAC (points and cash) are included in the availability check. */
  RatePlanType?: string | undefined;
  /** If set to true it will forward an ExactMatchOnly to Sabre.

   Default functionality:
   pass to Sabre ExactMatchOnly to true if is present RatePlanCodeOrGroupCode on this or is present a RoomTypeCode on Room.ConnectorCustomData
   pass to Sabre ExactMatchOnly to false in other cases

   Set this to true/false if you want to override this functionality.
   If it's setup it will use this value always  */
  ExactMatchOnly?: boolean | undefined;
}

export class SabreAvailabilityInputCustomData extends AvailabilityInputCustomData implements ISabreAvailabilityInputCustomData {
  Position?: LatLng | undefined;
  MaxResults?: number;

  constructor(data?: ISabreAvailabilityInputCustomData) {
    super(data);
    this._discriminator = "SABRE";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Position = _data["Position"] ? LatLng.fromJS(_data["Position"]) : <any>undefined;
      this.MaxResults = _data["MaxResults"];
    }
  }

  static fromJS(data: any): SabreAvailabilityInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreAvailabilityInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Position"] = this.Position ? this.Position.toJSON() : <any>undefined;
    data["MaxResults"] = this.MaxResults;
    super.toJSON(data);
    return data;
  }
}

export interface ISabreAvailabilityInputCustomData extends IAvailabilityInputCustomData {
  Position?: LatLng | undefined;
  MaxResults?: number;
}

export class CreoleHotelAvailabilityInputCustomData extends AvailabilityInputCustomData implements ICreoleHotelAvailabilityInputCustomData {
  /** If the value is true, it will show extra information about the hotels. */
  ShowHotelInfo?: boolean | undefined;
  /** If the value is true, it will show the full price object with all the information about the prices. If not specified, false is assumed by default. */
  ShowBreakdownPrice?: boolean | undefined;
  /** If the value is true, it will only show rooms with availability. If not specified, it will show all the rooms.
   If you plan on using this option, then please refer to the following section from the FAQ. */
  ShowOnlyAvailable?: boolean | undefined;
  /** If the value is true, it will show all the possible room combinations. */
  ShowAllCombinations?: boolean | undefined;
  /** If the value is true, it will show all the available combinations assuming children as adults. This may result in a slower response. This option only applies for directly contracted hotels. */
  ShowAllChildrenCombinations?: boolean | undefined;
  /** If the value is true, it will show the combination cancellation policies, if available (it is important to note that not all hotels will have the cancellation policies available on this step and that, even if enabled, you will have to control the possibility on not receiving them in this step)
   Please, contact Juniper in order to know if this option is available on your supplier. */
  ShowCancellationPolicies?: boolean | undefined;
  /** If the value is true, it will only show the cheapest available combination.
   This option will considerable reduce the size of the response at the expense of only getting the cheapest available combination.
   This is useful for those cases that you wish to only show the cheapest available combination prior to sending an availability request for a specific hotel in order to retrieve all of the available combinations under the mentioned hotel. */
  ShowOnlyBestPriceCombination?: boolean | undefined;
  /** This value allows you to set the timeout that will be used on the availability request. Note that this node expects milliseconds (for example; 5000 for a 5 second timeout)
   This feature is recommended to be used only on single hotel availability requests on which you need to set a different timeout than the one that you use on the multi hotel / zone availability (as note that the default timeout is directly configured by your supplier, contact with your supplier if you wish for the mentioned to be adjusted).
   Note that the maximum timeout that the WebSevice interface allows is 8 seconds. */
  TimeOut?: number | undefined;
  /** Nationality of the holder of the booking.
   Please note that the nationality of the holder will have to be consistent between all of the steps of the booking flow and that, consequently, you will have to set the nationality of the holder along the same value on the HotelBooking request.
   This code follows the ISO-3166-1 standard, you may refer to the FAQ section for further information. */
  CountryOfResidence?: string | undefined;
  /** Mandatory on HOTEL PRICE VERIFY Call Only */
  RatePlanCode?: string | undefined;
  /** Hotel code related to the RatePlanCode that is being requested for. HOTEL PRICE VERIFY Call Only */
  HotelCode?: string | undefined;

  constructor(data?: ICreoleHotelAvailabilityInputCustomData) {
    super(data);
    this._discriminator = "CREOLE";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ShowHotelInfo = _data["ShowHotelInfo"];
      this.ShowBreakdownPrice = _data["ShowBreakdownPrice"];
      this.ShowOnlyAvailable = _data["ShowOnlyAvailable"];
      this.ShowAllCombinations = _data["ShowAllCombinations"];
      this.ShowAllChildrenCombinations = _data["ShowAllChildrenCombinations"];
      this.ShowCancellationPolicies = _data["ShowCancellationPolicies"];
      this.ShowOnlyBestPriceCombination = _data["ShowOnlyBestPriceCombination"];
      this.TimeOut = _data["TimeOut"];
      this.CountryOfResidence = _data["CountryOfResidence"];
      this.RatePlanCode = _data["RatePlanCode"];
      this.HotelCode = _data["HotelCode"];
    }
  }

  static fromJS(data: any): CreoleHotelAvailabilityInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new CreoleHotelAvailabilityInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ShowHotelInfo"] = this.ShowHotelInfo;
    data["ShowBreakdownPrice"] = this.ShowBreakdownPrice;
    data["ShowOnlyAvailable"] = this.ShowOnlyAvailable;
    data["ShowAllCombinations"] = this.ShowAllCombinations;
    data["ShowAllChildrenCombinations"] = this.ShowAllChildrenCombinations;
    data["ShowCancellationPolicies"] = this.ShowCancellationPolicies;
    data["ShowOnlyBestPriceCombination"] = this.ShowOnlyBestPriceCombination;
    data["TimeOut"] = this.TimeOut;
    data["CountryOfResidence"] = this.CountryOfResidence;
    data["RatePlanCode"] = this.RatePlanCode;
    data["HotelCode"] = this.HotelCode;
    super.toJSON(data);
    return data;
  }
}

export interface ICreoleHotelAvailabilityInputCustomData extends IAvailabilityInputCustomData {
  /** If the value is true, it will show extra information about the hotels. */
  ShowHotelInfo?: boolean | undefined;
  /** If the value is true, it will show the full price object with all the information about the prices. If not specified, false is assumed by default. */
  ShowBreakdownPrice?: boolean | undefined;
  /** If the value is true, it will only show rooms with availability. If not specified, it will show all the rooms.
   If you plan on using this option, then please refer to the following section from the FAQ. */
  ShowOnlyAvailable?: boolean | undefined;
  /** If the value is true, it will show all the possible room combinations. */
  ShowAllCombinations?: boolean | undefined;
  /** If the value is true, it will show all the available combinations assuming children as adults. This may result in a slower response. This option only applies for directly contracted hotels. */
  ShowAllChildrenCombinations?: boolean | undefined;
  /** If the value is true, it will show the combination cancellation policies, if available (it is important to note that not all hotels will have the cancellation policies available on this step and that, even if enabled, you will have to control the possibility on not receiving them in this step)
   Please, contact Juniper in order to know if this option is available on your supplier. */
  ShowCancellationPolicies?: boolean | undefined;
  /** If the value is true, it will only show the cheapest available combination.
   This option will considerable reduce the size of the response at the expense of only getting the cheapest available combination.
   This is useful for those cases that you wish to only show the cheapest available combination prior to sending an availability request for a specific hotel in order to retrieve all of the available combinations under the mentioned hotel. */
  ShowOnlyBestPriceCombination?: boolean | undefined;
  /** This value allows you to set the timeout that will be used on the availability request. Note that this node expects milliseconds (for example; 5000 for a 5 second timeout)
   This feature is recommended to be used only on single hotel availability requests on which you need to set a different timeout than the one that you use on the multi hotel / zone availability (as note that the default timeout is directly configured by your supplier, contact with your supplier if you wish for the mentioned to be adjusted).
   Note that the maximum timeout that the WebSevice interface allows is 8 seconds. */
  TimeOut?: number | undefined;
  /** Nationality of the holder of the booking.
   Please note that the nationality of the holder will have to be consistent between all of the steps of the booking flow and that, consequently, you will have to set the nationality of the holder along the same value on the HotelBooking request.
   This code follows the ISO-3166-1 standard, you may refer to the FAQ section for further information. */
  CountryOfResidence?: string | undefined;
  /** Mandatory on HOTEL PRICE VERIFY Call Only */
  RatePlanCode?: string | undefined;
  /** Hotel code related to the RatePlanCode that is being requested for. HOTEL PRICE VERIFY Call Only */
  HotelCode?: string | undefined;
}

export class SabreCSLAvailabilityInputCustomData extends AvailabilityInputCustomData implements ISabreCSLAvailabilityInputCustomData {
  /** maxItems: 200 - Lists hotels by code. */
  HotelRefs?: HotelRef[] | undefined;
  /** USE: HotelRefs List of HotelRef (HotelCode,CodeContext) */
  HotelRefIds?: string[] | undefined;
  /** maxItems: 1 - Lists hotels by code. */
  DestinationRefIds?: string[] | undefined;
  Position?: LatLng | undefined;
  /** The radius is km/mi to search around the specified latitude and longitude. */
  Radius?: number | undefined;
  Uom?: EUOM;
  Offset?: number;
  SortBy?: ESortBy;
  SortOrder?: ESortOrder;
  PageSize?: number;
  /** If true, the TierLabel value is visible for preferenced properties in the response. */
  TierLabels?: boolean;
  /** Encrypted key used to fetch rates for a set of properties matching the SearchCriteria object. When used, only Offset is considered to fetch the page number - all other parameters in the request are ignored. */
  ShopKey?: string | undefined;
  /** 1: Lowest of all sources | 2: Lowest from each source | 3: Best rate from each source, along with the lowest negotiated/contractual rate. */
  BestOnly?: number;
  PrepaidQualifier?: EPrepaidQualifier;
  RefundableOnly?: boolean;
  ConvertedRateInfoOnly?: boolean;
  /** Hotels with average nightly rates greater than this value will be returned in the response. */
  RateRangeMin?: number;
  /** Hotels with average nightly rates lower than this value will be returned in the response. */
  RateRangeMax?: number;
  /** Contains the traveler's loyality numbers, if applicable. Lists loyalty numbers by ID. */
  LoyaltyIds?: string[] | undefined;
  /** The traveler's frequent flyer number, if available. */
  FrequentFlyerNumber?: string | undefined;
  /** The traveler's corporate discount code, if available. */
  CorpDiscount?: string | undefined;
  /** example: 100,111,112,110,113 - Specifies the sources to be checked for rates. When blank, all allowed rate sources are used to fetch the rates. */
  InfoSource?: string | undefined;
  /** 0-5 Default: 0 */
  RatingMin?: number;
  /** 0-5 Default: 5 */
  RatingMax?: number;
  /** List traveler's corporate discounts / rate plan codes, if available max items 11. */
  RatePlanCodes?: string[] | undefined;
  /** Lists chain codes associated with the property.max items 20. */
  ChainCodes?: string[] | undefined;
  /** Specifies the hotel name (minimum 3 characters) to be searched or used for filtering results. */
  HotelName?: string | undefined;
  /** Used on Price Verify */
  RateKey?: string | undefined;

  constructor(data?: ISabreCSLAvailabilityInputCustomData) {
    super(data);
    this._discriminator = "SABRE_CSL";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      if (Array.isArray(_data["HotelRefs"])) {
        this.HotelRefs = [] as any;
        for (let item of _data["HotelRefs"])
          this.HotelRefs!.push(HotelRef.fromJS(item));
      }
      if (Array.isArray(_data["HotelRefIds"])) {
        this.HotelRefIds = [] as any;
        for (let item of _data["HotelRefIds"])
          this.HotelRefIds!.push(item);
      }
      if (Array.isArray(_data["DestinationRefIds"])) {
        this.DestinationRefIds = [] as any;
        for (let item of _data["DestinationRefIds"])
          this.DestinationRefIds!.push(item);
      }
      this.Position = _data["Position"] ? LatLng.fromJS(_data["Position"]) : <any>undefined;
      this.Radius = _data["Radius"];
      this.Uom = _data["Uom"];
      this.Offset = _data["Offset"];
      this.SortBy = _data["SortBy"];
      this.SortOrder = _data["SortOrder"];
      this.PageSize = _data["PageSize"];
      this.TierLabels = _data["TierLabels"];
      this.ShopKey = _data["ShopKey"];
      this.BestOnly = _data["BestOnly"];
      this.PrepaidQualifier = _data["PrepaidQualifier"];
      this.RefundableOnly = _data["RefundableOnly"];
      this.ConvertedRateInfoOnly = _data["ConvertedRateInfoOnly"];
      this.RateRangeMin = _data["RateRangeMin"];
      this.RateRangeMax = _data["RateRangeMax"];
      if (Array.isArray(_data["LoyaltyIds"])) {
        this.LoyaltyIds = [] as any;
        for (let item of _data["LoyaltyIds"])
          this.LoyaltyIds!.push(item);
      }
      this.FrequentFlyerNumber = _data["FrequentFlyerNumber"];
      this.CorpDiscount = _data["CorpDiscount"];
      this.InfoSource = _data["InfoSource"];
      this.RatingMin = _data["RatingMin"];
      this.RatingMax = _data["RatingMax"];
      if (Array.isArray(_data["RatePlanCodes"])) {
        this.RatePlanCodes = [] as any;
        for (let item of _data["RatePlanCodes"])
          this.RatePlanCodes!.push(item);
      }
      if (Array.isArray(_data["ChainCodes"])) {
        this.ChainCodes = [] as any;
        for (let item of _data["ChainCodes"])
          this.ChainCodes!.push(item);
      }
      this.HotelName = _data["HotelName"];
      this.RateKey = _data["RateKey"];
    }
  }

  static fromJS(data: any): SabreCSLAvailabilityInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreCSLAvailabilityInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.HotelRefs)) {
      data["HotelRefs"] = [];
      for (let item of this.HotelRefs)
        data["HotelRefs"].push(item.toJSON());
    }
    if (Array.isArray(this.HotelRefIds)) {
      data["HotelRefIds"] = [];
      for (let item of this.HotelRefIds)
        data["HotelRefIds"].push(item);
    }
    if (Array.isArray(this.DestinationRefIds)) {
      data["DestinationRefIds"] = [];
      for (let item of this.DestinationRefIds)
        data["DestinationRefIds"].push(item);
    }
    data["Position"] = this.Position ? this.Position.toJSON() : <any>undefined;
    data["Radius"] = this.Radius;
    data["Uom"] = this.Uom;
    data["Offset"] = this.Offset;
    data["SortBy"] = this.SortBy;
    data["SortOrder"] = this.SortOrder;
    data["PageSize"] = this.PageSize;
    data["TierLabels"] = this.TierLabels;
    data["ShopKey"] = this.ShopKey;
    data["BestOnly"] = this.BestOnly;
    data["PrepaidQualifier"] = this.PrepaidQualifier;
    data["RefundableOnly"] = this.RefundableOnly;
    data["ConvertedRateInfoOnly"] = this.ConvertedRateInfoOnly;
    data["RateRangeMin"] = this.RateRangeMin;
    data["RateRangeMax"] = this.RateRangeMax;
    if (Array.isArray(this.LoyaltyIds)) {
      data["LoyaltyIds"] = [];
      for (let item of this.LoyaltyIds)
        data["LoyaltyIds"].push(item);
    }
    data["FrequentFlyerNumber"] = this.FrequentFlyerNumber;
    data["CorpDiscount"] = this.CorpDiscount;
    data["InfoSource"] = this.InfoSource;
    data["RatingMin"] = this.RatingMin;
    data["RatingMax"] = this.RatingMax;
    if (Array.isArray(this.RatePlanCodes)) {
      data["RatePlanCodes"] = [];
      for (let item of this.RatePlanCodes)
        data["RatePlanCodes"].push(item);
    }
    if (Array.isArray(this.ChainCodes)) {
      data["ChainCodes"] = [];
      for (let item of this.ChainCodes)
        data["ChainCodes"].push(item);
    }
    data["HotelName"] = this.HotelName;
    data["RateKey"] = this.RateKey;
    super.toJSON(data);
    return data;
  }
}

export interface ISabreCSLAvailabilityInputCustomData extends IAvailabilityInputCustomData {
  /** maxItems: 200 - Lists hotels by code. */
  HotelRefs?: HotelRef[] | undefined;
  /** USE: HotelRefs List of HotelRef (HotelCode,CodeContext) */
  HotelRefIds?: string[] | undefined;
  /** maxItems: 1 - Lists hotels by code. */
  DestinationRefIds?: string[] | undefined;
  Position?: LatLng | undefined;
  /** The radius is km/mi to search around the specified latitude and longitude. */
  Radius?: number | undefined;
  Uom?: EUOM;
  Offset?: number;
  SortBy?: ESortBy;
  SortOrder?: ESortOrder;
  PageSize?: number;
  /** If true, the TierLabel value is visible for preferenced properties in the response. */
  TierLabels?: boolean;
  /** Encrypted key used to fetch rates for a set of properties matching the SearchCriteria object. When used, only Offset is considered to fetch the page number - all other parameters in the request are ignored. */
  ShopKey?: string | undefined;
  /** 1: Lowest of all sources | 2: Lowest from each source | 3: Best rate from each source, along with the lowest negotiated/contractual rate. */
  BestOnly?: number;
  PrepaidQualifier?: EPrepaidQualifier;
  RefundableOnly?: boolean;
  ConvertedRateInfoOnly?: boolean;
  /** Hotels with average nightly rates greater than this value will be returned in the response. */
  RateRangeMin?: number;
  /** Hotels with average nightly rates lower than this value will be returned in the response. */
  RateRangeMax?: number;
  /** Contains the traveler's loyality numbers, if applicable. Lists loyalty numbers by ID. */
  LoyaltyIds?: string[] | undefined;
  /** The traveler's frequent flyer number, if available. */
  FrequentFlyerNumber?: string | undefined;
  /** The traveler's corporate discount code, if available. */
  CorpDiscount?: string | undefined;
  /** example: 100,111,112,110,113 - Specifies the sources to be checked for rates. When blank, all allowed rate sources are used to fetch the rates. */
  InfoSource?: string | undefined;
  /** 0-5 Default: 0 */
  RatingMin?: number;
  /** 0-5 Default: 5 */
  RatingMax?: number;
  /** List traveler's corporate discounts / rate plan codes, if available max items 11. */
  RatePlanCodes?: string[] | undefined;
  /** Lists chain codes associated with the property.max items 20. */
  ChainCodes?: string[] | undefined;
  /** Specifies the hotel name (minimum 3 characters) to be searched or used for filtering results. */
  HotelName?: string | undefined;
  /** Used on Price Verify */
  RateKey?: string | undefined;
}

export class HotelRef implements IHotelRef {
  HotelCode?: string | undefined;
  CodeContext?: ECodeContext | undefined;

  constructor(data?: IHotelRef) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.HotelCode = _data["HotelCode"];
      this.CodeContext = _data["CodeContext"];
    }
  }

  static fromJS(data: any): HotelRef {
    data = typeof data === 'object' ? data : {};
    let result = new HotelRef();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["HotelCode"] = this.HotelCode;
    data["CodeContext"] = this.CodeContext;
    return data;
  }
}

export interface IHotelRef {
  HotelCode?: string | undefined;
  CodeContext?: ECodeContext | undefined;
}

export enum ECodeContext {
  SABRE = "SABRE",
  GLOBAL = "GLOBAL",
}

export enum EUOM {
  MI = "MI",
  KM = "KM",
}

export enum ESortBy {
  TotalRate = "TotalRate",
  DistanceFrom = "DistanceFrom",
  SabreRating = "SabreRating",
}

export enum ESortOrder {
  ASC = "ASC",
  DESC = "DESC",
}

export enum EPrepaidQualifier {
  IncludePrepaid = "IncludePrepaid",
  PrepaidOnly = "PrepaidOnly",
  ExcludePrepaid = "ExcludePrepaid",
}

export class SandalsAvailabilityInputCustomData extends AvailabilityInputCustomData implements ISandalsAvailabilityInputCustomData {

  constructor(data?: ISandalsAvailabilityInputCustomData) {
    super(data);
    this._discriminator = "SANDALS";
  }

  init(_data?: any) {
    super.init(_data);
  }

  static fromJS(data: any): SandalsAvailabilityInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SandalsAvailabilityInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    super.toJSON(data);
    return data;
  }
}

export interface ISandalsAvailabilityInputCustomData extends IAvailabilityInputCustomData {
}

export class IHGAvailabilityInputCustomData extends AvailabilityInputCustomData implements IIHGAvailabilityInputCustomData {
  /** Passed to IHG as Header X-IHG-SSO-TOKEN
   Authentication token to verify the user's identity. If provided this will allow additional rates / discounts. */
  IhgSsoToken?: string | undefined;
  /** Passed to IHG as Header IHG-SESSION-ID
   Session Id used for analytics to tie shop and book requests. */
  IhgSessionId?: string | undefined;
  /** Passed to IHG as Header IHG-POS
   Point of Sale header to capture the agency information, agent information etc. This object has to match ihgRequestPos object defined in this contract. */
  IhgPos?: string | undefined;
  /** Passed to IHG as Header X-IHG-AGENT-TOKEN
   Authentication token to verify the cro agent. */
  IhgAgentToken?: string | undefined;
  /** Loyalty Id
   Passed in the options-&gt;loyalty-&gt;loyaltyId */
  LoyaltyId?: string | undefined;
  /** Code of the group contract
   Passed in the requestedRates-&gt;groupCode */
  GroupCode?: string | undefined;
  /** List of internal requested rate plan codes
   Passed in the requestedRates-&gt;requestedRatePlanCodes-&gt;internal
   Internal IHG rate plan code */
  InternalRatePlanCodes?: string[] | undefined;
  /** List of internal requested rate plan codes
   Passed in the requestedRates-&gt;requestedRatePlanCodes-&gt;external
   External rate plan code */
  ExternalRatePlanCodes?: string[] | undefined;
  /** List of corporate accounts requested
   Passed in the corporateAccounts
   Corporate discount Number associated to the rate category */
  CorporateAccounts?: string[] | undefined;

  constructor(data?: IIHGAvailabilityInputCustomData) {
    super(data);
    this._discriminator = "IHG_GRS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.IhgSsoToken = _data["IhgSsoToken"];
      this.IhgSessionId = _data["IhgSessionId"];
      this.IhgPos = _data["IhgPos"];
      this.IhgAgentToken = _data["IhgAgentToken"];
      this.LoyaltyId = _data["LoyaltyId"];
      this.GroupCode = _data["GroupCode"];
      if (Array.isArray(_data["InternalRatePlanCodes"])) {
        this.InternalRatePlanCodes = [] as any;
        for (let item of _data["InternalRatePlanCodes"])
          this.InternalRatePlanCodes!.push(item);
      }
      if (Array.isArray(_data["ExternalRatePlanCodes"])) {
        this.ExternalRatePlanCodes = [] as any;
        for (let item of _data["ExternalRatePlanCodes"])
          this.ExternalRatePlanCodes!.push(item);
      }
      if (Array.isArray(_data["CorporateAccounts"])) {
        this.CorporateAccounts = [] as any;
        for (let item of _data["CorporateAccounts"])
          this.CorporateAccounts!.push(item);
      }
    }
  }

  static fromJS(data: any): IHGAvailabilityInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new IHGAvailabilityInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["IhgSsoToken"] = this.IhgSsoToken;
    data["IhgSessionId"] = this.IhgSessionId;
    data["IhgPos"] = this.IhgPos;
    data["IhgAgentToken"] = this.IhgAgentToken;
    data["LoyaltyId"] = this.LoyaltyId;
    data["GroupCode"] = this.GroupCode;
    if (Array.isArray(this.InternalRatePlanCodes)) {
      data["InternalRatePlanCodes"] = [];
      for (let item of this.InternalRatePlanCodes)
        data["InternalRatePlanCodes"].push(item);
    }
    if (Array.isArray(this.ExternalRatePlanCodes)) {
      data["ExternalRatePlanCodes"] = [];
      for (let item of this.ExternalRatePlanCodes)
        data["ExternalRatePlanCodes"].push(item);
    }
    if (Array.isArray(this.CorporateAccounts)) {
      data["CorporateAccounts"] = [];
      for (let item of this.CorporateAccounts)
        data["CorporateAccounts"].push(item);
    }
    super.toJSON(data);
    return data;
  }
}

export interface IIHGAvailabilityInputCustomData extends IAvailabilityInputCustomData {
  /** Passed to IHG as Header X-IHG-SSO-TOKEN
   Authentication token to verify the user's identity. If provided this will allow additional rates / discounts. */
  IhgSsoToken?: string | undefined;
  /** Passed to IHG as Header IHG-SESSION-ID
   Session Id used for analytics to tie shop and book requests. */
  IhgSessionId?: string | undefined;
  /** Passed to IHG as Header IHG-POS
   Point of Sale header to capture the agency information, agent information etc. This object has to match ihgRequestPos object defined in this contract. */
  IhgPos?: string | undefined;
  /** Passed to IHG as Header X-IHG-AGENT-TOKEN
   Authentication token to verify the cro agent. */
  IhgAgentToken?: string | undefined;
  /** Loyalty Id
   Passed in the options-&gt;loyalty-&gt;loyaltyId */
  LoyaltyId?: string | undefined;
  /** Code of the group contract
   Passed in the requestedRates-&gt;groupCode */
  GroupCode?: string | undefined;
  /** List of internal requested rate plan codes
   Passed in the requestedRates-&gt;requestedRatePlanCodes-&gt;internal
   Internal IHG rate plan code */
  InternalRatePlanCodes?: string[] | undefined;
  /** List of internal requested rate plan codes
   Passed in the requestedRates-&gt;requestedRatePlanCodes-&gt;external
   External rate plan code */
  ExternalRatePlanCodes?: string[] | undefined;
  /** List of corporate accounts requested
   Passed in the corporateAccounts
   Corporate discount Number associated to the rate category */
  CorporateAccounts?: string[] | undefined;
}

export class HotelbedsAvailabilityInputCustomData extends AvailabilityInputCustomData implements IHotelbedsAvailabilityInputCustomData {
  /** In a rectangular area search it indicates the top-left corner of the area to search in.
   In a circular area search it indicates the center of the area. */
  Position?: LatLng | undefined;
  /** The radius to search around the specified latitude and longitude.
   It is mandatory for a circular area search.
   The limit allowed is 200. */
  Radius?: number | undefined;
  /** The unit measure to use for the specified latitude and longitude. */
  Unit?: ERadiusUnit;
  /** If TRUE, it search in a rectangular area, otherwise in a circular one. */
  IsRectangularArea?: boolean;
  /** It indicates the bottom-right corner of the rectangular area to search in.
   It is mandatory for the rectangular area search. */
  SecondaryPosition?: LatLng | undefined;
  /** Integer from 1 to 5 Amount of days after and before the check-in to check availability, keeping the same stay duration. */
  ShiftDays?: number | undefined;
  /** If TRUE, the response will return shiftDays even if there is no availability for the searched dates.
   If FALSE, if there is no availability for the searched dates, do not return any shiftDays. */
  AllowOnlyShift?: boolean;
  /** Types of accomodation. */
  AccomodationTypes?: string[] | undefined;
  /** List of board values. */
  BoardCodes?: string[] | undefined;
  /** The attribute indicates if the BoardCodes should be excluded or included in the response.
   If FALSE, the boards will be excluded from the response.
   If TRUE, the response will return only the boards listed. */
  BoardsIncluded?: boolean;
  /** Filters the results by the Reviews information. */
  Reviews?: Review[] | undefined;
  MinStar?: number | undefined;
  MaxStar?: number | undefined;
  /** Filters the results by the contract requested. */
  Contract?: string | undefined;
  /** Mandatory on HOTEL PRICE VERIFY Call Only. */
  RateKey?: string | undefined;
  /** Parameter to add or remove the upselling options node to the response in the HOTEL PRICE VERIFY Call Only. */
  Upselling?: boolean | undefined;

  constructor(data?: IHotelbedsAvailabilityInputCustomData) {
    super(data);
    if (!data) {
      this.IsRectangularArea = false;
      this.AllowOnlyShift = true;
      this.BoardsIncluded = true;
    }
    this._discriminator = "HOTELBEDS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Position = _data["Position"] ? LatLng.fromJS(_data["Position"]) : <any>undefined;
      this.Radius = _data["Radius"];
      this.Unit = _data["Unit"];
      this.IsRectangularArea = _data["IsRectangularArea"] !== undefined ? _data["IsRectangularArea"] : false;
      this.SecondaryPosition = _data["SecondaryPosition"] ? LatLng.fromJS(_data["SecondaryPosition"]) : <any>undefined;
      this.ShiftDays = _data["ShiftDays"];
      this.AllowOnlyShift = _data["AllowOnlyShift"] !== undefined ? _data["AllowOnlyShift"] : true;
      if (Array.isArray(_data["AccomodationTypes"])) {
        this.AccomodationTypes = [] as any;
        for (let item of _data["AccomodationTypes"])
          this.AccomodationTypes!.push(item);
      }
      if (Array.isArray(_data["BoardCodes"])) {
        this.BoardCodes = [] as any;
        for (let item of _data["BoardCodes"])
          this.BoardCodes!.push(item);
      }
      this.BoardsIncluded = _data["BoardsIncluded"] !== undefined ? _data["BoardsIncluded"] : true;
      if (Array.isArray(_data["Reviews"])) {
        this.Reviews = [] as any;
        for (let item of _data["Reviews"])
          this.Reviews!.push(Review.fromJS(item));
      }
      this.MinStar = _data["MinStar"];
      this.MaxStar = _data["MaxStar"];
      this.Contract = _data["Contract"];
      this.RateKey = _data["RateKey"];
      this.Upselling = _data["Upselling"];
    }
  }

  static fromJS(data: any): HotelbedsAvailabilityInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new HotelbedsAvailabilityInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Position"] = this.Position ? this.Position.toJSON() : <any>undefined;
    data["Radius"] = this.Radius;
    data["Unit"] = this.Unit;
    data["IsRectangularArea"] = this.IsRectangularArea;
    data["SecondaryPosition"] = this.SecondaryPosition ? this.SecondaryPosition.toJSON() : <any>undefined;
    data["ShiftDays"] = this.ShiftDays;
    data["AllowOnlyShift"] = this.AllowOnlyShift;
    if (Array.isArray(this.AccomodationTypes)) {
      data["AccomodationTypes"] = [];
      for (let item of this.AccomodationTypes)
        data["AccomodationTypes"].push(item);
    }
    if (Array.isArray(this.BoardCodes)) {
      data["BoardCodes"] = [];
      for (let item of this.BoardCodes)
        data["BoardCodes"].push(item);
    }
    data["BoardsIncluded"] = this.BoardsIncluded;
    if (Array.isArray(this.Reviews)) {
      data["Reviews"] = [];
      for (let item of this.Reviews)
        data["Reviews"].push(item.toJSON());
    }
    data["MinStar"] = this.MinStar;
    data["MaxStar"] = this.MaxStar;
    data["Contract"] = this.Contract;
    data["RateKey"] = this.RateKey;
    data["Upselling"] = this.Upselling;
    super.toJSON(data);
    return data;
  }
}

export interface IHotelbedsAvailabilityInputCustomData extends IAvailabilityInputCustomData {
  /** In a rectangular area search it indicates the top-left corner of the area to search in.
   In a circular area search it indicates the center of the area. */
  Position?: LatLng | undefined;
  /** The radius to search around the specified latitude and longitude.
   It is mandatory for a circular area search.
   The limit allowed is 200. */
  Radius?: number | undefined;
  /** The unit measure to use for the specified latitude and longitude. */
  Unit?: ERadiusUnit;
  /** If TRUE, it search in a rectangular area, otherwise in a circular one. */
  IsRectangularArea?: boolean;
  /** It indicates the bottom-right corner of the rectangular area to search in.
   It is mandatory for the rectangular area search. */
  SecondaryPosition?: LatLng | undefined;
  /** Integer from 1 to 5 Amount of days after and before the check-in to check availability, keeping the same stay duration. */
  ShiftDays?: number | undefined;
  /** If TRUE, the response will return shiftDays even if there is no availability for the searched dates.
   If FALSE, if there is no availability for the searched dates, do not return any shiftDays. */
  AllowOnlyShift?: boolean;
  /** Types of accomodation. */
  AccomodationTypes?: string[] | undefined;
  /** List of board values. */
  BoardCodes?: string[] | undefined;
  /** The attribute indicates if the BoardCodes should be excluded or included in the response.
   If FALSE, the boards will be excluded from the response.
   If TRUE, the response will return only the boards listed. */
  BoardsIncluded?: boolean;
  /** Filters the results by the Reviews information. */
  Reviews?: Review[] | undefined;
  MinStar?: number | undefined;
  MaxStar?: number | undefined;
  /** Filters the results by the contract requested. */
  Contract?: string | undefined;
  /** Mandatory on HOTEL PRICE VERIFY Call Only. */
  RateKey?: string | undefined;
  /** Parameter to add or remove the upselling options node to the response in the HOTEL PRICE VERIFY Call Only. */
  Upselling?: boolean | undefined;
}

export enum ERadiusUnit {
  KM = "KM",
  MILES = "MILES",
}

export class Review implements IReview {
  /** Type of review */
  Type?: EReviewType;
  /** Type of review */
  MinRate?: number | undefined;
  /** Type of review */
  MaxRate?: number | undefined;
  /** Minumum number of counts you want the reviews in the response to have */
  MinReviewCount?: number | undefined;

  constructor(data?: IReview) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Type = _data["Type"];
      this.MinRate = _data["MinRate"];
      this.MaxRate = _data["MaxRate"];
      this.MinReviewCount = _data["MinReviewCount"];
    }
  }

  static fromJS(data: any): Review {
    data = typeof data === 'object' ? data : {};
    let result = new Review();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Type"] = this.Type;
    data["MinRate"] = this.MinRate;
    data["MaxRate"] = this.MaxRate;
    data["MinReviewCount"] = this.MinReviewCount;
    return data;
  }
}

export interface IReview {
  /** Type of review */
  Type?: EReviewType;
  /** Type of review */
  MinRate?: number | undefined;
  /** Type of review */
  MaxRate?: number | undefined;
  /** Minumum number of counts you want the reviews in the response to have */
  MinReviewCount?: number | undefined;
}

export enum EReviewType {
  TRIPADVISOR = "TRIPADVISOR",
  HOTELBEDS = "HOTELBEDS",
}

export abstract class CustomerCustomDataOfJupiterHotelAvailabilityInput implements ICustomerCustomDataOfJupiterHotelAvailabilityInput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterHotelAvailabilityInput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterHotelAvailabilityInput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterHotelAvailabilityInput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterHotelAvailabilityInput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterHotelAvailabilityInput {
}

export class JupiterSingleHotelAvailabilityRS extends BaseCacheableRS implements IJupiterSingleHotelAvailabilityRS {
  /** JupiterSingleHotelAvailabilityOutput Response */
  Response?: JupiterSingleHotelAvailabilityOutput | undefined;

  constructor(data?: IJupiterSingleHotelAvailabilityRS) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Response = _data["Response"] ? JupiterSingleHotelAvailabilityOutput.fromJS(_data["Response"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterSingleHotelAvailabilityRS {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterSingleHotelAvailabilityRS();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Response"] = this.Response ? this.Response.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterSingleHotelAvailabilityRS extends IBaseCacheableRS {
  /** JupiterSingleHotelAvailabilityOutput Response */
  Response?: JupiterSingleHotelAvailabilityOutput | undefined;
}

export class JupiterSingleHotelAvailabilityOutput extends BaseOutput implements IJupiterSingleHotelAvailabilityOutput {
  /** List of Hotels Availability */
  Hotels?: SingleHotelAvailResult[] | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: SingleHotelAvailabilityOutputCustomData | undefined;

  constructor(data?: IJupiterSingleHotelAvailabilityOutput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      if (Array.isArray(_data["Hotels"])) {
        this.Hotels = [] as any;
        for (let item of _data["Hotels"])
          this.Hotels!.push(SingleHotelAvailResult.fromJS(item));
      }
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? SingleHotelAvailabilityOutputCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterSingleHotelAvailabilityOutput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterSingleHotelAvailabilityOutput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.Hotels)) {
      data["Hotels"] = [];
      for (let item of this.Hotels)
        data["Hotels"].push(item.toJSON());
    }
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterSingleHotelAvailabilityOutput extends IBaseOutput {
  /** List of Hotels Availability */
  Hotels?: SingleHotelAvailResult[] | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: SingleHotelAvailabilityOutputCustomData | undefined;
}

export class SingleHotelAvailabilityOutputCustomData implements ISingleHotelAvailabilityOutputCustomData {
  CustomDataConnectorCode?: string | undefined;

  constructor(data?: ISingleHotelAvailabilityOutputCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.CustomDataConnectorCode = _data["CustomDataConnectorCode"];
    }
  }

  static fromJS(data: any): SingleHotelAvailabilityOutputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SingleHotelAvailabilityOutputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this.CustomDataConnectorCode;
    return data;
  }
}

export interface ISingleHotelAvailabilityOutputCustomData {
  CustomDataConnectorCode?: string | undefined;
}

export abstract class CustomerCustomDataOfJupiterSingleHotelAvailabilityOutput implements ICustomerCustomDataOfJupiterSingleHotelAvailabilityOutput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterSingleHotelAvailabilityOutput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterSingleHotelAvailabilityOutput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterSingleHotelAvailabilityOutput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterSingleHotelAvailabilityOutput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterSingleHotelAvailabilityOutput {
}

export class JupiterSingleHotelAvailabilityRQ extends BaseCacheableRQ implements IJupiterSingleHotelAvailabilityRQ {
  /** JupiterSingleHotelAvailabilityInput Request */
  Request?: JupiterSingleHotelAvailabilityInput | undefined;

  constructor(data?: IJupiterSingleHotelAvailabilityRQ) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Request = _data["Request"] ? JupiterSingleHotelAvailabilityInput.fromJS(_data["Request"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterSingleHotelAvailabilityRQ {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterSingleHotelAvailabilityRQ();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Request"] = this.Request ? this.Request.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterSingleHotelAvailabilityRQ extends IBaseCacheableRQ {
  /** JupiterSingleHotelAvailabilityInput Request */
  Request?: JupiterSingleHotelAvailabilityInput | undefined;
}

export class JupiterSingleHotelAvailabilityInput extends BaseInput implements IJupiterSingleHotelAvailabilityInput {
  /** Start Date of the search with format: "yyyy-MM-dd" */
  FromDate!: string;
  /** End Date of the search with format: "yyyy-MM-dd" */
  ToDate!: string;
  /** List of Connectors code to search. If null search on all Enable Connectors */
  ConnectorsSearchOnly?: EH2HConnectorCode[] | undefined;
  /** Room List that will be searched on the Connectors */
  Rooms!: RoomRequest[];
  /** Preferred Currency to search. Depends on Connectors if the features is available */
  PreferredCurrency?: string | undefined;
  /** Preferred Language to search. Depends on Connectors if the features is available */
  PreferredLanguage?: string | undefined;
  ConnectorsSettings?: SingleHotelAvailabilityInputCustomData[] | undefined;

  constructor(data?: IJupiterSingleHotelAvailabilityInput) {
    super(data);
    if (!data) {
      this.Rooms = [];
    }
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.FromDate = _data["FromDate"];
      this.ToDate = _data["ToDate"];
      if (Array.isArray(_data["ConnectorsSearchOnly"])) {
        this.ConnectorsSearchOnly = [] as any;
        for (let item of _data["ConnectorsSearchOnly"])
          this.ConnectorsSearchOnly!.push(item);
      }
      if (Array.isArray(_data["Rooms"])) {
        this.Rooms = [] as any;
        for (let item of _data["Rooms"])
          this.Rooms!.push(RoomRequest.fromJS(item));
      }
      this.PreferredCurrency = _data["PreferredCurrency"];
      this.PreferredLanguage = _data["PreferredLanguage"];
      if (Array.isArray(_data["ConnectorsSettings"])) {
        this.ConnectorsSettings = [] as any;
        for (let item of _data["ConnectorsSettings"])
          this.ConnectorsSettings!.push(SingleHotelAvailabilityInputCustomData.fromJS(item));
      }
    }
  }

  static fromJS(data: any): JupiterSingleHotelAvailabilityInput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterSingleHotelAvailabilityInput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["FromDate"] = this.FromDate;
    data["ToDate"] = this.ToDate;
    if (Array.isArray(this.ConnectorsSearchOnly)) {
      data["ConnectorsSearchOnly"] = [];
      for (let item of this.ConnectorsSearchOnly)
        data["ConnectorsSearchOnly"].push(item);
    }
    if (Array.isArray(this.Rooms)) {
      data["Rooms"] = [];
      for (let item of this.Rooms)
        data["Rooms"].push(item.toJSON());
    }
    data["PreferredCurrency"] = this.PreferredCurrency;
    data["PreferredLanguage"] = this.PreferredLanguage;
    if (Array.isArray(this.ConnectorsSettings)) {
      data["ConnectorsSettings"] = [];
      for (let item of this.ConnectorsSettings)
        data["ConnectorsSettings"].push(item.toJSON());
    }
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterSingleHotelAvailabilityInput extends IBaseInput {
  /** Start Date of the search with format: "yyyy-MM-dd" */
  FromDate: string;
  /** End Date of the search with format: "yyyy-MM-dd" */
  ToDate: string;
  /** List of Connectors code to search. If null search on all Enable Connectors */
  ConnectorsSearchOnly?: EH2HConnectorCode[] | undefined;
  /** Room List that will be searched on the Connectors */
  Rooms: RoomRequest[];
  /** Preferred Currency to search. Depends on Connectors if the features is available */
  PreferredCurrency?: string | undefined;
  /** Preferred Language to search. Depends on Connectors if the features is available */
  PreferredLanguage?: string | undefined;
  ConnectorsSettings?: SingleHotelAvailabilityInputCustomData[] | undefined;
}

export class SingleHotelAvailabilityInputCustomData implements ISingleHotelAvailabilityInputCustomData {
  HotelRefId?: string | undefined;

  protected _discriminator: string;

  constructor(data?: ISingleHotelAvailabilityInputCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "SingleHotelAvailabilityInputCustomData";
  }

  init(_data?: any) {
    if (_data) {
      this.HotelRefId = _data["HotelRefId"];
    }
  }

  static fromJS(data: any): SingleHotelAvailabilityInputCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "BOOKING_DOT_COM") {
      let result = new BookingDotComSingleHotelAvailabilityInputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "SABRE_SYNXIS") {
      let result = new SabreSynXisSingleHotelAvailabilityInputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "SABRE_CSL") {
      let result = new SabreCSLSingleHotelAvailabilityInputCustomData();
      result.init(data);
      return result;
    }
    let result = new SingleHotelAvailabilityInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    data["HotelRefId"] = this.HotelRefId;
    return data;
  }
}

export interface ISingleHotelAvailabilityInputCustomData {
  HotelRefId?: string | undefined;
}

export class BookingDotComSingleHotelAvailabilityInputCustomData extends SingleHotelAvailabilityInputCustomData implements IBookingDotComSingleHotelAvailabilityInputCustomData {
  /** REQUIRED - Application affiliate id that you wish this request to be tracked against. */
  AffiliateId?: number | undefined;

  constructor(data?: IBookingDotComSingleHotelAvailabilityInputCustomData) {
    super(data);
    this._discriminator = "BOOKING_DOT_COM";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.AffiliateId = _data["AffiliateId"];
    }
  }

  static fromJS(data: any): BookingDotComSingleHotelAvailabilityInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new BookingDotComSingleHotelAvailabilityInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["AffiliateId"] = this.AffiliateId;
    super.toJSON(data);
    return data;
  }
}

export interface IBookingDotComSingleHotelAvailabilityInputCustomData extends ISingleHotelAvailabilityInputCustomData {
  /** REQUIRED - Application affiliate id that you wish this request to be tracked against. */
  AffiliateId?: number | undefined;
}

export class SabreSynXisSingleHotelAvailabilityInputCustomData extends SingleHotelAvailabilityInputCustomData implements ISabreSynXisSingleHotelAvailabilityInputCustomData {
  /** The Sub Source Code passed to Sabre in the POS
   If null or empty it'll use the default value sent by Sabre related to the Login Test/Production */
  ChannelSubSourceCode?: string | undefined;
  /** Promotional Code -&gt; Passed as PromoCode */
  PromotionCode?: string | undefined;
  /** RatePlan Code or Group Code

   Used to get availability on a specific RatePlan or a Group Code */
  RatePlanCodeOrGroupCode?: string | undefined;

  constructor(data?: ISabreSynXisSingleHotelAvailabilityInputCustomData) {
    super(data);
    this._discriminator = "SABRE_SYNXIS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ChannelSubSourceCode = _data["ChannelSubSourceCode"];
      this.PromotionCode = _data["PromotionCode"];
      this.RatePlanCodeOrGroupCode = _data["RatePlanCodeOrGroupCode"];
    }
  }

  static fromJS(data: any): SabreSynXisSingleHotelAvailabilityInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreSynXisSingleHotelAvailabilityInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ChannelSubSourceCode"] = this.ChannelSubSourceCode;
    data["PromotionCode"] = this.PromotionCode;
    data["RatePlanCodeOrGroupCode"] = this.RatePlanCodeOrGroupCode;
    super.toJSON(data);
    return data;
  }
}

export interface ISabreSynXisSingleHotelAvailabilityInputCustomData extends ISingleHotelAvailabilityInputCustomData {
  /** The Sub Source Code passed to Sabre in the POS
   If null or empty it'll use the default value sent by Sabre related to the Login Test/Production */
  ChannelSubSourceCode?: string | undefined;
  /** Promotional Code -&gt; Passed as PromoCode */
  PromotionCode?: string | undefined;
  /** RatePlan Code or Group Code

   Used to get availability on a specific RatePlan or a Group Code */
  RatePlanCodeOrGroupCode?: string | undefined;
}

export class SabreCSLSingleHotelAvailabilityInputCustomData extends SingleHotelAvailabilityInputCustomData implements ISabreCSLSingleHotelAvailabilityInputCustomData {
  /** HotelCode. */
  HotelRef?: HotelRef | undefined;
  /** Encrypted key used to fetch rates for a set of properties matching the SearchCriteria object. When used, only Offset is considered to fetch the page number - all other parameters in the request are ignored. */
  ShopKey?: string | undefined;
  PrepaidQualifier?: EPrepaidQualifier;
  RefundableOnly?: boolean;
  ConvertedRateInfoOnly?: boolean;
  /** Hotels with average nightly rates greater than this value will be returned in the response. */
  RateRangeMin?: number;
  /** Hotels with average nightly rates lower than this value will be returned in the response. */
  RateRangeMax?: number;
  /** Contains the traveler's loyality numbers, if applicable. Lists loyalty numbers by ID. */
  LoyaltyIds?: string[] | undefined;
  /** The traveler's frequent flyer number, if available. */
  FrequentFlyerNumber?: string | undefined;
  /** The traveler's corporate discount code, if available. */
  CorpDiscount?: string | undefined;
  /** example: 100,111,112,110,113 - Specifies the sources to be checked for rates. When blank, all allowed rate sources are used to fetch the rates. */
  InfoSource?: string | undefined;
  /** 0-5 Default: 0 */
  RatingMin?: number;
  /** 0-5 Default: 5 */
  RatingMax?: number;
  /** List traveler's corporate discounts / rate plan codes, if available max items 11. */
  RatePlanCodes?: string[] | undefined;

  constructor(data?: ISabreCSLSingleHotelAvailabilityInputCustomData) {
    super(data);
    this._discriminator = "SABRE_CSL";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.HotelRef = _data["HotelRef"] ? HotelRef.fromJS(_data["HotelRef"]) : <any>undefined;
      this.ShopKey = _data["ShopKey"];
      this.PrepaidQualifier = _data["PrepaidQualifier"];
      this.RefundableOnly = _data["RefundableOnly"];
      this.ConvertedRateInfoOnly = _data["ConvertedRateInfoOnly"];
      this.RateRangeMin = _data["RateRangeMin"];
      this.RateRangeMax = _data["RateRangeMax"];
      if (Array.isArray(_data["LoyaltyIds"])) {
        this.LoyaltyIds = [] as any;
        for (let item of _data["LoyaltyIds"])
          this.LoyaltyIds!.push(item);
      }
      this.FrequentFlyerNumber = _data["FrequentFlyerNumber"];
      this.CorpDiscount = _data["CorpDiscount"];
      this.InfoSource = _data["InfoSource"];
      this.RatingMin = _data["RatingMin"];
      this.RatingMax = _data["RatingMax"];
      if (Array.isArray(_data["RatePlanCodes"])) {
        this.RatePlanCodes = [] as any;
        for (let item of _data["RatePlanCodes"])
          this.RatePlanCodes!.push(item);
      }
    }
  }

  static fromJS(data: any): SabreCSLSingleHotelAvailabilityInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreCSLSingleHotelAvailabilityInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["HotelRef"] = this.HotelRef ? this.HotelRef.toJSON() : <any>undefined;
    data["ShopKey"] = this.ShopKey;
    data["PrepaidQualifier"] = this.PrepaidQualifier;
    data["RefundableOnly"] = this.RefundableOnly;
    data["ConvertedRateInfoOnly"] = this.ConvertedRateInfoOnly;
    data["RateRangeMin"] = this.RateRangeMin;
    data["RateRangeMax"] = this.RateRangeMax;
    if (Array.isArray(this.LoyaltyIds)) {
      data["LoyaltyIds"] = [];
      for (let item of this.LoyaltyIds)
        data["LoyaltyIds"].push(item);
    }
    data["FrequentFlyerNumber"] = this.FrequentFlyerNumber;
    data["CorpDiscount"] = this.CorpDiscount;
    data["InfoSource"] = this.InfoSource;
    data["RatingMin"] = this.RatingMin;
    data["RatingMax"] = this.RatingMax;
    if (Array.isArray(this.RatePlanCodes)) {
      data["RatePlanCodes"] = [];
      for (let item of this.RatePlanCodes)
        data["RatePlanCodes"].push(item);
    }
    super.toJSON(data);
    return data;
  }
}

export interface ISabreCSLSingleHotelAvailabilityInputCustomData extends ISingleHotelAvailabilityInputCustomData {
  /** HotelCode. */
  HotelRef?: HotelRef | undefined;
  /** Encrypted key used to fetch rates for a set of properties matching the SearchCriteria object. When used, only Offset is considered to fetch the page number - all other parameters in the request are ignored. */
  ShopKey?: string | undefined;
  PrepaidQualifier?: EPrepaidQualifier;
  RefundableOnly?: boolean;
  ConvertedRateInfoOnly?: boolean;
  /** Hotels with average nightly rates greater than this value will be returned in the response. */
  RateRangeMin?: number;
  /** Hotels with average nightly rates lower than this value will be returned in the response. */
  RateRangeMax?: number;
  /** Contains the traveler's loyality numbers, if applicable. Lists loyalty numbers by ID. */
  LoyaltyIds?: string[] | undefined;
  /** The traveler's frequent flyer number, if available. */
  FrequentFlyerNumber?: string | undefined;
  /** The traveler's corporate discount code, if available. */
  CorpDiscount?: string | undefined;
  /** example: 100,111,112,110,113 - Specifies the sources to be checked for rates. When blank, all allowed rate sources are used to fetch the rates. */
  InfoSource?: string | undefined;
  /** 0-5 Default: 0 */
  RatingMin?: number;
  /** 0-5 Default: 5 */
  RatingMax?: number;
  /** List traveler's corporate discounts / rate plan codes, if available max items 11. */
  RatePlanCodes?: string[] | undefined;
}

export abstract class CustomerCustomDataOfJupiterSingleHotelAvailabilityInput implements ICustomerCustomDataOfJupiterSingleHotelAvailabilityInput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterSingleHotelAvailabilityInput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterSingleHotelAvailabilityInput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterSingleHotelAvailabilityInput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterSingleHotelAvailabilityInput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterSingleHotelAvailabilityInput {
}

export class JupiterHotelCalendarAvailabilityRS extends BaseCacheableRS implements IJupiterHotelCalendarAvailabilityRS {
  /** JupiterHotelCalendarAvailabilityOutput Response */
  Response?: JupiterHotelCalendarAvailabilityOutput | undefined;

  constructor(data?: IJupiterHotelCalendarAvailabilityRS) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Response = _data["Response"] ? JupiterHotelCalendarAvailabilityOutput.fromJS(_data["Response"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterHotelCalendarAvailabilityRS {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelCalendarAvailabilityRS();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Response"] = this.Response ? this.Response.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelCalendarAvailabilityRS extends IBaseCacheableRS {
  /** JupiterHotelCalendarAvailabilityOutput Response */
  Response?: JupiterHotelCalendarAvailabilityOutput | undefined;
}

export class JupiterHotelCalendarAvailabilityOutput extends BaseOutput implements IJupiterHotelCalendarAvailabilityOutput {
  /** List of calendar availability */
  DaysAvails?: DaysAvail[] | undefined;
  /** Hotel Reference Id on Connector */
  HotelRefId?: string | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: HotelCalendarAvailabilityOutputCustomData | undefined;

  constructor(data?: IJupiterHotelCalendarAvailabilityOutput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      if (Array.isArray(_data["DaysAvails"])) {
        this.DaysAvails = [] as any;
        for (let item of _data["DaysAvails"])
          this.DaysAvails!.push(DaysAvail.fromJS(item));
      }
      this.HotelRefId = _data["HotelRefId"];
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? HotelCalendarAvailabilityOutputCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterHotelCalendarAvailabilityOutput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelCalendarAvailabilityOutput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.DaysAvails)) {
      data["DaysAvails"] = [];
      for (let item of this.DaysAvails)
        data["DaysAvails"].push(item.toJSON());
    }
    data["HotelRefId"] = this.HotelRefId;
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelCalendarAvailabilityOutput extends IBaseOutput {
  /** List of calendar availability */
  DaysAvails?: DaysAvail[] | undefined;
  /** Hotel Reference Id on Connector */
  HotelRefId?: string | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: HotelCalendarAvailabilityOutputCustomData | undefined;
}

export class DaysAvail implements IDaysAvail {
  /** From Date of the Avail */
  FromDate?: string;
  /** To Date of the Avail Included in the dates.
   For Example:
   From 2050-01-01 To 2050-01-01 -&gt; Refers to the single day 2050-01-01
   From 2050-01-01 To 2050-01-03 -&gt; Refers to the 2050-01-01 , 02 and 03 included  */
  ToDate?: string;
  /** Price of the Period */
  Price?: CurrencyAmount | undefined;
  /** Boolean that indicates if it's closed */
  Close?: boolean;
  /** Boolean that indicates if it's closed on Arrival */
  CloseOnArrival?: boolean;
  /** Min stay nights if present */
  MinStay?: number | undefined;
  /** Max stay nights if present */
  MaxStay?: number | undefined;
  /** Current RatePlanCode */
  RatePlanCode?: string | undefined;

  constructor(data?: IDaysAvail) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.FromDate = _data["FromDate"];
      this.ToDate = _data["ToDate"];
      this.Price = _data["Price"] ? CurrencyAmount.fromJS(_data["Price"]) : <any>undefined;
      this.Close = _data["Close"];
      this.CloseOnArrival = _data["CloseOnArrival"];
      this.MinStay = _data["MinStay"];
      this.MaxStay = _data["MaxStay"];
      this.RatePlanCode = _data["RatePlanCode"];
    }
  }

  static fromJS(data: any): DaysAvail {
    data = typeof data === 'object' ? data : {};
    let result = new DaysAvail();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["FromDate"] = this.FromDate;
    data["ToDate"] = this.ToDate;
    data["Price"] = this.Price ? this.Price.toJSON() : <any>undefined;
    data["Close"] = this.Close;
    data["CloseOnArrival"] = this.CloseOnArrival;
    data["MinStay"] = this.MinStay;
    data["MaxStay"] = this.MaxStay;
    data["RatePlanCode"] = this.RatePlanCode;
    return data;
  }
}

export interface IDaysAvail {
  /** From Date of the Avail */
  FromDate?: string;
  /** To Date of the Avail Included in the dates.
   For Example:
   From 2050-01-01 To 2050-01-01 -&gt; Refers to the single day 2050-01-01
   From 2050-01-01 To 2050-01-03 -&gt; Refers to the 2050-01-01 , 02 and 03 included  */
  ToDate?: string;
  /** Price of the Period */
  Price?: CurrencyAmount | undefined;
  /** Boolean that indicates if it's closed */
  Close?: boolean;
  /** Boolean that indicates if it's closed on Arrival */
  CloseOnArrival?: boolean;
  /** Min stay nights if present */
  MinStay?: number | undefined;
  /** Max stay nights if present */
  MaxStay?: number | undefined;
  /** Current RatePlanCode */
  RatePlanCode?: string | undefined;
}

export abstract class HotelCalendarAvailabilityOutputCustomData implements IHotelCalendarAvailabilityOutputCustomData {
  CustomDataConnectorCode?: string | undefined;

  constructor(data?: IHotelCalendarAvailabilityOutputCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.CustomDataConnectorCode = _data["CustomDataConnectorCode"];
    }
  }

  static fromJS(data: any): HotelCalendarAvailabilityOutputCustomData {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'HotelCalendarAvailabilityOutputCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this.CustomDataConnectorCode;
    return data;
  }
}

export interface IHotelCalendarAvailabilityOutputCustomData {
  CustomDataConnectorCode?: string | undefined;
}

export abstract class CustomerCustomDataOfJupiterHotelCalendarAvailabilityOutput implements ICustomerCustomDataOfJupiterHotelCalendarAvailabilityOutput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterHotelCalendarAvailabilityOutput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterHotelCalendarAvailabilityOutput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterHotelCalendarAvailabilityOutput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterHotelCalendarAvailabilityOutput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterHotelCalendarAvailabilityOutput {
}

export class JupiterHotelCalendarAvailabilityRQ extends BaseCacheableRQ implements IJupiterHotelCalendarAvailabilityRQ {
  /** JupiterHotelCalendarAvailabilityInput Request */
  Request?: JupiterHotelCalendarAvailabilityInput | undefined;

  constructor(data?: IJupiterHotelCalendarAvailabilityRQ) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Request = _data["Request"] ? JupiterHotelCalendarAvailabilityInput.fromJS(_data["Request"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterHotelCalendarAvailabilityRQ {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelCalendarAvailabilityRQ();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Request"] = this.Request ? this.Request.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelCalendarAvailabilityRQ extends IBaseCacheableRQ {
  /** JupiterHotelCalendarAvailabilityInput Request */
  Request?: JupiterHotelCalendarAvailabilityInput | undefined;
}

export class JupiterHotelCalendarAvailabilityInput extends BaseInput implements IJupiterHotelCalendarAvailabilityInput {
  /** Connector Code */
  ConnectorCode!: EH2HConnectorCode;
  /** Hotel Reference Id on Connector */
  HotelRefId?: string | undefined;
  /** Start Date of the search with format: "yyyy-MM-dd" */
  FromDate!: string;
  /** End Date of the search with format: "yyyy-MM-dd" */
  ToDate!: string;
  /** Duration nights of the stay */
  Duration!: number;
  /** Room List that will be searched on the Connectors */
  Rooms!: RoomRequest[];
  /** Preferred Currency to search. Depends on Connectors if the features is available */
  PreferredCurrency?: string | undefined;
  /** Preferred Language to search. Depends on Connectors if the features is available

   IHG GRS: The format of the header is language-LOCALE (e.g., en-US) */
  PreferredLanguage?: string | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: HotelCalendarAvailabilityInputCustomData | undefined;

  constructor(data?: IJupiterHotelCalendarAvailabilityInput) {
    super(data);
    if (!data) {
      this.Rooms = [];
    }
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ConnectorCode = _data["ConnectorCode"];
      this.HotelRefId = _data["HotelRefId"];
      this.FromDate = _data["FromDate"];
      this.ToDate = _data["ToDate"];
      this.Duration = _data["Duration"];
      if (Array.isArray(_data["Rooms"])) {
        this.Rooms = [] as any;
        for (let item of _data["Rooms"])
          this.Rooms!.push(RoomRequest.fromJS(item));
      }
      this.PreferredCurrency = _data["PreferredCurrency"];
      this.PreferredLanguage = _data["PreferredLanguage"];
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? HotelCalendarAvailabilityInputCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterHotelCalendarAvailabilityInput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelCalendarAvailabilityInput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCode"] = this.ConnectorCode;
    data["HotelRefId"] = this.HotelRefId;
    data["FromDate"] = this.FromDate;
    data["ToDate"] = this.ToDate;
    data["Duration"] = this.Duration;
    if (Array.isArray(this.Rooms)) {
      data["Rooms"] = [];
      for (let item of this.Rooms)
        data["Rooms"].push(item.toJSON());
    }
    data["PreferredCurrency"] = this.PreferredCurrency;
    data["PreferredLanguage"] = this.PreferredLanguage;
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelCalendarAvailabilityInput extends IBaseInput {
  /** Connector Code */
  ConnectorCode: EH2HConnectorCode;
  /** Hotel Reference Id on Connector */
  HotelRefId?: string | undefined;
  /** Start Date of the search with format: "yyyy-MM-dd" */
  FromDate: string;
  /** End Date of the search with format: "yyyy-MM-dd" */
  ToDate: string;
  /** Duration nights of the stay */
  Duration: number;
  /** Room List that will be searched on the Connectors */
  Rooms: RoomRequest[];
  /** Preferred Currency to search. Depends on Connectors if the features is available */
  PreferredCurrency?: string | undefined;
  /** Preferred Language to search. Depends on Connectors if the features is available

   IHG GRS: The format of the header is language-LOCALE (e.g., en-US) */
  PreferredLanguage?: string | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: HotelCalendarAvailabilityInputCustomData | undefined;
}

export abstract class HotelCalendarAvailabilityInputCustomData implements IHotelCalendarAvailabilityInputCustomData {

  protected _discriminator: string;

  constructor(data?: IHotelCalendarAvailabilityInputCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "HotelCalendarAvailabilityInputCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): HotelCalendarAvailabilityInputCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "SABRE_SYNXIS") {
      let result = new SabreSynXisCalendarAvailabilityInputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "IHG_GRS") {
      let result = new IHGHotelCalendarAvailabilityInputCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'HotelCalendarAvailabilityInputCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IHotelCalendarAvailabilityInputCustomData {
}

export class SabreSynXisCalendarAvailabilityInputCustomData extends HotelCalendarAvailabilityInputCustomData implements ISabreSynXisCalendarAvailabilityInputCustomData {
  /** The Sub Source Code passed to Sabre in the POS
   If null or empty it'll use the default value sent by Sabre related to the Login Test/Production */
  ChannelSubSourceCode?: string | undefined;
  /** Promotional Codes -&gt; Passed as PromoCode */
  PromotionCodes?: string[] | undefined;
  /** RatePlan Code or Group Code

   Used to get availability on a specific RatePlan or a Group Code */
  RatePlanCodeOrGroupCode?: string | undefined;
  /** If set to true it will forward an ExactMatchOnly to Sabre.

   Default functionality:
   pass to Sabre ExactMatchOnly to true if is present RatePlanCodeOrGroupCode on this or is present a RoomTypeCode on Room.ConnectorCustomData
   pass to Sabre ExactMatchOnly to false in other cases

   Set this to true/false if you want to override this functionality.
   If it's setup it will use this value always  */
  ExactMatchOnly?: boolean | undefined;

  constructor(data?: ISabreSynXisCalendarAvailabilityInputCustomData) {
    super(data);
    this._discriminator = "SABRE_SYNXIS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ChannelSubSourceCode = _data["ChannelSubSourceCode"];
      if (Array.isArray(_data["PromotionCodes"])) {
        this.PromotionCodes = [] as any;
        for (let item of _data["PromotionCodes"])
          this.PromotionCodes!.push(item);
      }
      this.RatePlanCodeOrGroupCode = _data["RatePlanCodeOrGroupCode"];
      this.ExactMatchOnly = _data["ExactMatchOnly"];
    }
  }

  static fromJS(data: any): SabreSynXisCalendarAvailabilityInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreSynXisCalendarAvailabilityInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ChannelSubSourceCode"] = this.ChannelSubSourceCode;
    if (Array.isArray(this.PromotionCodes)) {
      data["PromotionCodes"] = [];
      for (let item of this.PromotionCodes)
        data["PromotionCodes"].push(item);
    }
    data["RatePlanCodeOrGroupCode"] = this.RatePlanCodeOrGroupCode;
    data["ExactMatchOnly"] = this.ExactMatchOnly;
    super.toJSON(data);
    return data;
  }
}

export interface ISabreSynXisCalendarAvailabilityInputCustomData extends IHotelCalendarAvailabilityInputCustomData {
  /** The Sub Source Code passed to Sabre in the POS
   If null or empty it'll use the default value sent by Sabre related to the Login Test/Production */
  ChannelSubSourceCode?: string | undefined;
  /** Promotional Codes -&gt; Passed as PromoCode */
  PromotionCodes?: string[] | undefined;
  /** RatePlan Code or Group Code

   Used to get availability on a specific RatePlan or a Group Code */
  RatePlanCodeOrGroupCode?: string | undefined;
  /** If set to true it will forward an ExactMatchOnly to Sabre.

   Default functionality:
   pass to Sabre ExactMatchOnly to true if is present RatePlanCodeOrGroupCode on this or is present a RoomTypeCode on Room.ConnectorCustomData
   pass to Sabre ExactMatchOnly to false in other cases

   Set this to true/false if you want to override this functionality.
   If it's setup it will use this value always  */
  ExactMatchOnly?: boolean | undefined;
}

export class IHGHotelCalendarAvailabilityInputCustomData extends HotelCalendarAvailabilityInputCustomData implements IIHGHotelCalendarAvailabilityInputCustomData {
  /** Rate Codes */
  RateCodes?: string[] | undefined;
  /** Describes whether availability windows should be restricted to those available for the full LengthOfStay. If blank, assumes true. */
  Spanning?: boolean | undefined;
  /** The RoomCode to filter the avail window -&gt; if missing we consider the first RoomCode returned as the default */
  FilterRoomCode?: string | undefined;

  constructor(data?: IIHGHotelCalendarAvailabilityInputCustomData) {
    super(data);
    this._discriminator = "IHG_GRS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      if (Array.isArray(_data["RateCodes"])) {
        this.RateCodes = [] as any;
        for (let item of _data["RateCodes"])
          this.RateCodes!.push(item);
      }
      this.Spanning = _data["Spanning"];
      this.FilterRoomCode = _data["FilterRoomCode"];
    }
  }

  static fromJS(data: any): IHGHotelCalendarAvailabilityInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new IHGHotelCalendarAvailabilityInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.RateCodes)) {
      data["RateCodes"] = [];
      for (let item of this.RateCodes)
        data["RateCodes"].push(item);
    }
    data["Spanning"] = this.Spanning;
    data["FilterRoomCode"] = this.FilterRoomCode;
    super.toJSON(data);
    return data;
  }
}

export interface IIHGHotelCalendarAvailabilityInputCustomData extends IHotelCalendarAvailabilityInputCustomData {
  /** Rate Codes */
  RateCodes?: string[] | undefined;
  /** Describes whether availability windows should be restricted to those available for the full LengthOfStay. If blank, assumes true. */
  Spanning?: boolean | undefined;
  /** The RoomCode to filter the avail window -&gt; if missing we consider the first RoomCode returned as the default */
  FilterRoomCode?: string | undefined;
}

export abstract class CustomerCustomDataOfJupiterHotelCalendarAvailabilityInput implements ICustomerCustomDataOfJupiterHotelCalendarAvailabilityInput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterHotelCalendarAvailabilityInput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterHotelCalendarAvailabilityInput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterHotelCalendarAvailabilityInput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterHotelCalendarAvailabilityInput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterHotelCalendarAvailabilityInput {
}

export class JupiterHotelAvailabilityExtrasRS extends BaseCacheableRS implements IJupiterHotelAvailabilityExtrasRS {
  /** JupiterHotelAvailabilityExtrasOutput Request */
  Response?: JupiterHotelAvailabilityExtrasOutput | undefined;

  constructor(data?: IJupiterHotelAvailabilityExtrasRS) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Response = _data["Response"] ? JupiterHotelAvailabilityExtrasOutput.fromJS(_data["Response"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterHotelAvailabilityExtrasRS {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelAvailabilityExtrasRS();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Response"] = this.Response ? this.Response.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelAvailabilityExtrasRS extends IBaseCacheableRS {
  /** JupiterHotelAvailabilityExtrasOutput Request */
  Response?: JupiterHotelAvailabilityExtrasOutput | undefined;
}

export class JupiterHotelAvailabilityExtrasOutput extends BaseOutput implements IJupiterHotelAvailabilityExtrasOutput {
  /** List of Extras Available */
  Extras?: ExtraAvail[] | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: AvailabilityExtrasOutputCustomData | undefined;

  constructor(data?: IJupiterHotelAvailabilityExtrasOutput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      if (Array.isArray(_data["Extras"])) {
        this.Extras = [] as any;
        for (let item of _data["Extras"])
          this.Extras!.push(ExtraAvail.fromJS(item));
      }
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? AvailabilityExtrasOutputCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterHotelAvailabilityExtrasOutput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelAvailabilityExtrasOutput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.Extras)) {
      data["Extras"] = [];
      for (let item of this.Extras)
        data["Extras"].push(item.toJSON());
    }
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelAvailabilityExtrasOutput extends IBaseOutput {
  /** List of Extras Available */
  Extras?: ExtraAvail[] | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: AvailabilityExtrasOutputCustomData | undefined;
}

export class ExtraDetails implements IExtraDetails {
  /** Name of the Extra */
  Name?: string | undefined;
  /** Category */
  Category?: string | undefined;
  /** Description */
  Description?: string | undefined;
  /** Image */
  Image?: Image | undefined;
  /** Valid Hours  */
  ValidHours?: ExtraHours | undefined;
  /** Other information */
  OtherInfos?: OtherInfo[] | undefined;
  /** If the current Extra is Inclusive */
  Inclusive?: boolean;
  /** The Inventory Code */
  InventoryCode?: string | undefined;
  /** The charge mode of the current Extra */
  ExtraChargeMode?: EExtraChargeMode | undefined;
  /** The quantity of the current Extra */
  Quantity?: number;
  /** List of prices of the current Extra */
  Prices?: ExtraPrice[] | undefined;
  /** Cancel penalties of the current Extra */
  CancelPenalties?: OtherInfo[] | undefined;

  constructor(data?: IExtraDetails) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Name = _data["Name"];
      this.Category = _data["Category"];
      this.Description = _data["Description"];
      this.Image = _data["Image"] ? Image.fromJS(_data["Image"]) : <any>undefined;
      this.ValidHours = _data["ValidHours"] ? ExtraHours.fromJS(_data["ValidHours"]) : <any>undefined;
      if (Array.isArray(_data["OtherInfos"])) {
        this.OtherInfos = [] as any;
        for (let item of _data["OtherInfos"])
          this.OtherInfos!.push(OtherInfo.fromJS(item));
      }
      this.Inclusive = _data["Inclusive"];
      this.InventoryCode = _data["InventoryCode"];
      this.ExtraChargeMode = _data["ExtraChargeMode"];
      this.Quantity = _data["Quantity"];
      if (Array.isArray(_data["Prices"])) {
        this.Prices = [] as any;
        for (let item of _data["Prices"])
          this.Prices!.push(ExtraPrice.fromJS(item));
      }
      if (Array.isArray(_data["CancelPenalties"])) {
        this.CancelPenalties = [] as any;
        for (let item of _data["CancelPenalties"])
          this.CancelPenalties!.push(OtherInfo.fromJS(item));
      }
    }
  }

  static fromJS(data: any): ExtraDetails {
    data = typeof data === 'object' ? data : {};
    let result = new ExtraDetails();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Name"] = this.Name;
    data["Category"] = this.Category;
    data["Description"] = this.Description;
    data["Image"] = this.Image ? this.Image.toJSON() : <any>undefined;
    data["ValidHours"] = this.ValidHours ? this.ValidHours.toJSON() : <any>undefined;
    if (Array.isArray(this.OtherInfos)) {
      data["OtherInfos"] = [];
      for (let item of this.OtherInfos)
        data["OtherInfos"].push(item.toJSON());
    }
    data["Inclusive"] = this.Inclusive;
    data["InventoryCode"] = this.InventoryCode;
    data["ExtraChargeMode"] = this.ExtraChargeMode;
    data["Quantity"] = this.Quantity;
    if (Array.isArray(this.Prices)) {
      data["Prices"] = [];
      for (let item of this.Prices)
        data["Prices"].push(item.toJSON());
    }
    if (Array.isArray(this.CancelPenalties)) {
      data["CancelPenalties"] = [];
      for (let item of this.CancelPenalties)
        data["CancelPenalties"].push(item.toJSON());
    }
    return data;
  }
}

export interface IExtraDetails {
  /** Name of the Extra */
  Name?: string | undefined;
  /** Category */
  Category?: string | undefined;
  /** Description */
  Description?: string | undefined;
  /** Image */
  Image?: Image | undefined;
  /** Valid Hours  */
  ValidHours?: ExtraHours | undefined;
  /** Other information */
  OtherInfos?: OtherInfo[] | undefined;
  /** If the current Extra is Inclusive */
  Inclusive?: boolean;
  /** The Inventory Code */
  InventoryCode?: string | undefined;
  /** The charge mode of the current Extra */
  ExtraChargeMode?: EExtraChargeMode | undefined;
  /** The quantity of the current Extra */
  Quantity?: number;
  /** List of prices of the current Extra */
  Prices?: ExtraPrice[] | undefined;
  /** Cancel penalties of the current Extra */
  CancelPenalties?: OtherInfo[] | undefined;
}

export class ExtraAvail extends ExtraDetails implements IExtraAvail {
  /** Connector Custom Data */
  ConnectorCustomData?: ExtraAvailCustomData | undefined;

  constructor(data?: IExtraAvail) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? ExtraAvailCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): ExtraAvail {
    data = typeof data === 'object' ? data : {};
    let result = new ExtraAvail();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IExtraAvail extends IExtraDetails {
  /** Connector Custom Data */
  ConnectorCustomData?: ExtraAvailCustomData | undefined;
}

export abstract class ExtraAvailCustomData implements IExtraAvailCustomData {

  protected _discriminator: string;

  constructor(data?: IExtraAvailCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "ExtraAvailCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): ExtraAvailCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "OKKAMI") {
      let result = new OkkamiExtraAvailCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'ExtraAvailCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IExtraAvailCustomData {
}

export class OkkamiExtraAvailCustomData extends ExtraAvailCustomData implements IOkkamiExtraAvailCustomData {
  /** Options fields  */
  Options?: OkkamiOption[] | undefined;

  constructor(data?: IOkkamiExtraAvailCustomData) {
    super(data);
    this._discriminator = "OKKAMI";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      if (Array.isArray(_data["Options"])) {
        this.Options = [] as any;
        for (let item of _data["Options"])
          this.Options!.push(OkkamiOption.fromJS(item));
      }
    }
  }

  static fromJS(data: any): OkkamiExtraAvailCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new OkkamiExtraAvailCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.Options)) {
      data["Options"] = [];
      for (let item of this.Options)
        data["Options"].push(item.toJSON());
    }
    super.toJSON(data);
    return data;
  }
}

export interface IOkkamiExtraAvailCustomData extends IExtraAvailCustomData {
  /** Options fields  */
  Options?: OkkamiOption[] | undefined;
}

export class OkkamiOption implements IOkkamiOption {
  Selection_type?: string | undefined;
  Title?: string | undefined;
  Values?: OptionValue[] | undefined;
  Force_input?: boolean | undefined;
  Placeholder?: string | undefined;
  Default?: string | undefined;
  Full_width?: boolean | undefined;
  Start?: string | undefined;
  End?: string | undefined;
  Step?: number | undefined;
  Date_start?: string | undefined;
  Date_end?: string | undefined;
  Date_default?: string | undefined;
  Time_start?: string | undefined;
  Time_end?: string | undefined;
  Time_default?: string | undefined;
  Time_step?: number | undefined;
  Min?: number | undefined;
  Max?: number | undefined;

  constructor(data?: IOkkamiOption) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Selection_type = _data["selection_type"];
      this.Title = _data["title"];
      if (Array.isArray(_data["values"])) {
        this.Values = [] as any;
        for (let item of _data["values"])
          this.Values!.push(OptionValue.fromJS(item));
      }
      this.Force_input = _data["force_input"];
      this.Placeholder = _data["placeholder"];
      this.Default = _data["default"];
      this.Full_width = _data["full_width"];
      this.Start = _data["start"];
      this.End = _data["end"];
      this.Step = _data["step"];
      this.Date_start = _data["date_start"];
      this.Date_end = _data["date_end"];
      this.Date_default = _data["date_default"];
      this.Time_start = _data["time_start"];
      this.Time_end = _data["time_end"];
      this.Time_default = _data["time_default"];
      this.Time_step = _data["time_step"];
      this.Min = _data["min"];
      this.Max = _data["max"];
    }
  }

  static fromJS(data: any): OkkamiOption {
    data = typeof data === 'object' ? data : {};
    let result = new OkkamiOption();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["selection_type"] = this.Selection_type;
    data["title"] = this.Title;
    if (Array.isArray(this.Values)) {
      data["values"] = [];
      for (let item of this.Values)
        data["values"].push(item.toJSON());
    }
    data["force_input"] = this.Force_input;
    data["placeholder"] = this.Placeholder;
    data["default"] = this.Default;
    data["full_width"] = this.Full_width;
    data["start"] = this.Start;
    data["end"] = this.End;
    data["step"] = this.Step;
    data["date_start"] = this.Date_start;
    data["date_end"] = this.Date_end;
    data["date_default"] = this.Date_default;
    data["time_start"] = this.Time_start;
    data["time_end"] = this.Time_end;
    data["time_default"] = this.Time_default;
    data["time_step"] = this.Time_step;
    data["min"] = this.Min;
    data["max"] = this.Max;
    return data;
  }
}

export interface IOkkamiOption {
  Selection_type?: string | undefined;
  Title?: string | undefined;
  Values?: OptionValue[] | undefined;
  Force_input?: boolean | undefined;
  Placeholder?: string | undefined;
  Default?: string | undefined;
  Full_width?: boolean | undefined;
  Start?: string | undefined;
  End?: string | undefined;
  Step?: number | undefined;
  Date_start?: string | undefined;
  Date_end?: string | undefined;
  Date_default?: string | undefined;
  Time_start?: string | undefined;
  Time_end?: string | undefined;
  Time_default?: string | undefined;
  Time_step?: number | undefined;
  Min?: number | undefined;
  Max?: number | undefined;
}

export class OptionValue implements IOptionValue {
  Name?: string | undefined;
  Default?: boolean | undefined;
  Price?: number | undefined;

  constructor(data?: IOptionValue) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Name = _data["name"];
      this.Default = _data["default"];
      this.Price = _data["price"];
    }
  }

  static fromJS(data: any): OptionValue {
    data = typeof data === 'object' ? data : {};
    let result = new OptionValue();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["name"] = this.Name;
    data["default"] = this.Default;
    data["price"] = this.Price;
    return data;
  }
}

export interface IOptionValue {
  Name?: string | undefined;
  Default?: boolean | undefined;
  Price?: number | undefined;
}

export abstract class CustomerCustomDataOfExtraAvail implements ICustomerCustomDataOfExtraAvail {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfExtraAvail) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfExtraAvail";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfExtraAvail {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfExtraAvail' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfExtraAvail {
}

export class ExtraHours implements IExtraHours {
  /** Form DateTime */
  FromDateTime?: string | undefined;
  /** To DateTime */
  ToDateTime?: string | undefined;
  /** Other Information */
  OtherInfos?: OtherInfo[] | undefined;

  constructor(data?: IExtraHours) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.FromDateTime = _data["FromDateTime"];
      this.ToDateTime = _data["ToDateTime"];
      if (Array.isArray(_data["OtherInfos"])) {
        this.OtherInfos = [] as any;
        for (let item of _data["OtherInfos"])
          this.OtherInfos!.push(OtherInfo.fromJS(item));
      }
    }
  }

  static fromJS(data: any): ExtraHours {
    data = typeof data === 'object' ? data : {};
    let result = new ExtraHours();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["FromDateTime"] = this.FromDateTime;
    data["ToDateTime"] = this.ToDateTime;
    if (Array.isArray(this.OtherInfos)) {
      data["OtherInfos"] = [];
      for (let item of this.OtherInfos)
        data["OtherInfos"].push(item.toJSON());
    }
    return data;
  }
}

export interface IExtraHours {
  /** Form DateTime */
  FromDateTime?: string | undefined;
  /** To DateTime */
  ToDateTime?: string | undefined;
  /** Other Information */
  OtherInfos?: OtherInfo[] | undefined;
}

export class OtherInfo implements IOtherInfo {
  /** Other Info Title */
  Title?: string | undefined;
  /** Other Info Code */
  Code?: string | undefined;
  /** Other Info Text */
  Text?: string | undefined;

  constructor(data?: IOtherInfo) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Title = _data["Title"];
      this.Code = _data["Code"];
      this.Text = _data["Text"];
    }
  }

  static fromJS(data: any): OtherInfo {
    data = typeof data === 'object' ? data : {};
    let result = new OtherInfo();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Title"] = this.Title;
    data["Code"] = this.Code;
    data["Text"] = this.Text;
    return data;
  }
}

export interface IOtherInfo {
  /** Other Info Title */
  Title?: string | undefined;
  /** Other Info Code */
  Code?: string | undefined;
  /** Other Info Text */
  Text?: string | undefined;
}

export class ExtraPrice extends CurrencyAmount implements IExtraPrice {
  /** Effective Date */
  EffectiveDate?: string | undefined;
  /** Expire Date */
  ExpireDate?: string | undefined;
  /** Pax Type */
  PaxType?: EPaxType | undefined;
  /** Pax Count of the price */
  PaxCount?: number | undefined;

  constructor(data?: IExtraPrice) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.EffectiveDate = _data["EffectiveDate"];
      this.ExpireDate = _data["ExpireDate"];
      this.PaxType = _data["PaxType"];
      this.PaxCount = _data["PaxCount"];
    }
  }

  static fromJS(data: any): ExtraPrice {
    data = typeof data === 'object' ? data : {};
    let result = new ExtraPrice();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["EffectiveDate"] = this.EffectiveDate;
    data["ExpireDate"] = this.ExpireDate;
    data["PaxType"] = this.PaxType;
    data["PaxCount"] = this.PaxCount;
    super.toJSON(data);
    return data;
  }
}

export interface IExtraPrice extends ICurrencyAmount {
  /** Effective Date */
  EffectiveDate?: string | undefined;
  /** Expire Date */
  ExpireDate?: string | undefined;
  /** Pax Type */
  PaxType?: EPaxType | undefined;
  /** Pax Count of the price */
  PaxCount?: number | undefined;
}

export abstract class AvailabilityExtrasOutputCustomData implements IAvailabilityExtrasOutputCustomData {
  CustomDataConnectorCode?: string | undefined;

  constructor(data?: IAvailabilityExtrasOutputCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.CustomDataConnectorCode = _data["CustomDataConnectorCode"];
    }
  }

  static fromJS(data: any): AvailabilityExtrasOutputCustomData {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'AvailabilityExtrasOutputCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this.CustomDataConnectorCode;
    return data;
  }
}

export interface IAvailabilityExtrasOutputCustomData {
  CustomDataConnectorCode?: string | undefined;
}

export class JupiterHotelAvailabilityExtrasRQ extends BaseCacheableRQ implements IJupiterHotelAvailabilityExtrasRQ {
  /** JupiterHotelAvailabilityExtrasInput Request */
  Request?: JupiterHotelAvailabilityExtrasInput | undefined;

  constructor(data?: IJupiterHotelAvailabilityExtrasRQ) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Request = _data["Request"] ? JupiterHotelAvailabilityExtrasInput.fromJS(_data["Request"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterHotelAvailabilityExtrasRQ {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelAvailabilityExtrasRQ();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Request"] = this.Request ? this.Request.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelAvailabilityExtrasRQ extends IBaseCacheableRQ {
  /** JupiterHotelAvailabilityExtrasInput Request */
  Request?: JupiterHotelAvailabilityExtrasInput | undefined;
}

export class JupiterHotelAvailabilityExtrasInput extends BaseInput implements IJupiterHotelAvailabilityExtrasInput {
  /** Connector Code */
  ConnectorCode?: EH2HConnectorCode;
  /** Hotel Reference Id on Connector */
  HotelRefId?: string | undefined;
  /** Start Date of the search with format: "yyyy-MM-dd" */
  FromDate!: string;
  /** End Date of the search with format: "yyyy-MM-dd" */
  ToDate!: string;
  /** Room List that will be searched on the Connectors */
  Rooms!: RoomRequest[];
  /** Preferred Currency to search. Depends on Connectors if the features is available */
  PreferredCurrency?: string | undefined;
  /** Preferred Language to search. Depends on Connectors if the features is available */
  PreferredLanguage?: string | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: AvailabilityExtrasInputCustomData | undefined;

  constructor(data?: IJupiterHotelAvailabilityExtrasInput) {
    super(data);
    if (!data) {
      this.Rooms = [];
    }
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ConnectorCode = _data["ConnectorCode"];
      this.HotelRefId = _data["HotelRefId"];
      this.FromDate = _data["FromDate"];
      this.ToDate = _data["ToDate"];
      if (Array.isArray(_data["Rooms"])) {
        this.Rooms = [] as any;
        for (let item of _data["Rooms"])
          this.Rooms!.push(RoomRequest.fromJS(item));
      }
      this.PreferredCurrency = _data["PreferredCurrency"];
      this.PreferredLanguage = _data["PreferredLanguage"];
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? AvailabilityExtrasInputCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterHotelAvailabilityExtrasInput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelAvailabilityExtrasInput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCode"] = this.ConnectorCode;
    data["HotelRefId"] = this.HotelRefId;
    data["FromDate"] = this.FromDate;
    data["ToDate"] = this.ToDate;
    if (Array.isArray(this.Rooms)) {
      data["Rooms"] = [];
      for (let item of this.Rooms)
        data["Rooms"].push(item.toJSON());
    }
    data["PreferredCurrency"] = this.PreferredCurrency;
    data["PreferredLanguage"] = this.PreferredLanguage;
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelAvailabilityExtrasInput extends IBaseInput {
  /** Connector Code */
  ConnectorCode?: EH2HConnectorCode;
  /** Hotel Reference Id on Connector */
  HotelRefId?: string | undefined;
  /** Start Date of the search with format: "yyyy-MM-dd" */
  FromDate: string;
  /** End Date of the search with format: "yyyy-MM-dd" */
  ToDate: string;
  /** Room List that will be searched on the Connectors */
  Rooms: RoomRequest[];
  /** Preferred Currency to search. Depends on Connectors if the features is available */
  PreferredCurrency?: string | undefined;
  /** Preferred Language to search. Depends on Connectors if the features is available */
  PreferredLanguage?: string | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: AvailabilityExtrasInputCustomData | undefined;
}

export abstract class AvailabilityExtrasInputCustomData implements IAvailabilityExtrasInputCustomData {

  protected _discriminator: string;

  constructor(data?: IAvailabilityExtrasInputCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "AvailabilityExtrasInputCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): AvailabilityExtrasInputCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "SABRE_SYNXIS") {
      let result = new SabreSynXisAvailabilityExtrasInputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "HOTELBEDS") {
      let result = new HotelbedsAvailabilityExtrasInputCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'AvailabilityExtrasInputCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IAvailabilityExtrasInputCustomData {
}

export class SabreSynXisAvailabilityExtrasInputCustomData extends AvailabilityExtrasInputCustomData implements ISabreSynXisAvailabilityExtrasInputCustomData {
  /** The Sub Source Code passed to Sabre in the POS
   If null or empty it'll use the default value sent by Sabre related to the Login Test/Production */
  ChannelSubSourceCode?: string | undefined;
  /** The specific RatePlan Code */
  RatePlanCode?: string | undefined;

  constructor(data?: ISabreSynXisAvailabilityExtrasInputCustomData) {
    super(data);
    this._discriminator = "SABRE_SYNXIS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ChannelSubSourceCode = _data["ChannelSubSourceCode"];
      this.RatePlanCode = _data["RatePlanCode"];
    }
  }

  static fromJS(data: any): SabreSynXisAvailabilityExtrasInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreSynXisAvailabilityExtrasInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ChannelSubSourceCode"] = this.ChannelSubSourceCode;
    data["RatePlanCode"] = this.RatePlanCode;
    super.toJSON(data);
    return data;
  }
}

export interface ISabreSynXisAvailabilityExtrasInputCustomData extends IAvailabilityExtrasInputCustomData {
  /** The Sub Source Code passed to Sabre in the POS
   If null or empty it'll use the default value sent by Sabre related to the Login Test/Production */
  ChannelSubSourceCode?: string | undefined;
  /** The specific RatePlan Code */
  RatePlanCode?: string | undefined;
}

export class HotelbedsAvailabilityExtrasInputCustomData extends AvailabilityExtrasInputCustomData implements IHotelbedsAvailabilityExtrasInputCustomData {
  /** The number of items for each page */
  ItemsPerPage?: number;
  /** The number of pages */
  Page?: number;
  /** The order to show the results, DEFAULT as standard */
  Order?: string | undefined;

  constructor(data?: IHotelbedsAvailabilityExtrasInputCustomData) {
    super(data);
    this._discriminator = "HOTELBEDS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ItemsPerPage = _data["ItemsPerPage"];
      this.Page = _data["Page"];
      this.Order = _data["Order"];
    }
  }

  static fromJS(data: any): HotelbedsAvailabilityExtrasInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new HotelbedsAvailabilityExtrasInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ItemsPerPage"] = this.ItemsPerPage;
    data["Page"] = this.Page;
    data["Order"] = this.Order;
    super.toJSON(data);
    return data;
  }
}

export interface IHotelbedsAvailabilityExtrasInputCustomData extends IAvailabilityExtrasInputCustomData {
  /** The number of items for each page */
  ItemsPerPage?: number;
  /** The number of pages */
  Page?: number;
  /** The order to show the results, DEFAULT as standard */
  Order?: string | undefined;
}

export abstract class CustomerCustomDataOfJupiterHotelAvailabilityExtrasInput implements ICustomerCustomDataOfJupiterHotelAvailabilityExtrasInput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterHotelAvailabilityExtrasInput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterHotelAvailabilityExtrasInput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterHotelAvailabilityExtrasInput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterHotelAvailabilityExtrasInput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterHotelAvailabilityExtrasInput {
}

export class JupiterHotelDetailRS extends BaseCacheableRS implements IJupiterHotelDetailRS {
  /** JupiterHotelDetailOutput Response */
  Response?: JupiterHotelDetailOutput | undefined;

  constructor(data?: IJupiterHotelDetailRS) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Response = _data["Response"] ? JupiterHotelDetailOutput.fromJS(_data["Response"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterHotelDetailRS {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelDetailRS();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Response"] = this.Response ? this.Response.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelDetailRS extends IBaseCacheableRS {
  /** JupiterHotelDetailOutput Response */
  Response?: JupiterHotelDetailOutput | undefined;
}

export class JupiterHotelDetailOutput extends BaseOutput implements IJupiterHotelDetailOutput {
  /** List of Hotels Details */
  Hotels?: SingleHotelDetailResult[] | undefined;
  ConnectorCustomData?: HotelDetailOutputCustomData[] | undefined;

  constructor(data?: IJupiterHotelDetailOutput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      if (Array.isArray(_data["Hotels"])) {
        this.Hotels = [] as any;
        for (let item of _data["Hotels"])
          this.Hotels!.push(SingleHotelDetailResult.fromJS(item));
      }
      if (Array.isArray(_data["ConnectorCustomData"])) {
        this.ConnectorCustomData = [] as any;
        for (let item of _data["ConnectorCustomData"])
          this.ConnectorCustomData!.push(HotelDetailOutputCustomData.fromJS(item));
      }
    }
  }

  static fromJS(data: any): JupiterHotelDetailOutput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelDetailOutput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.Hotels)) {
      data["Hotels"] = [];
      for (let item of this.Hotels)
        data["Hotels"].push(item.toJSON());
    }
    if (Array.isArray(this.ConnectorCustomData)) {
      data["ConnectorCustomData"] = [];
      for (let item of this.ConnectorCustomData)
        data["ConnectorCustomData"].push(item.toJSON());
    }
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelDetailOutput extends IBaseOutput {
  /** List of Hotels Details */
  Hotels?: SingleHotelDetailResult[] | undefined;
  ConnectorCustomData?: HotelDetailOutputCustomData[] | undefined;
}

export class SingleHotelDetailResult extends HotelDetails implements ISingleHotelDetailResult {
  /** List of Rooms */
  Rooms?: SingleRoomDetailsResult[] | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: SingleHotelDetailResultCustomData | undefined;

  constructor(data?: ISingleHotelDetailResult) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      if (Array.isArray(_data["Rooms"])) {
        this.Rooms = [] as any;
        for (let item of _data["Rooms"])
          this.Rooms!.push(SingleRoomDetailsResult.fromJS(item));
      }
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? SingleHotelDetailResultCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): SingleHotelDetailResult {
    data = typeof data === 'object' ? data : {};
    let result = new SingleHotelDetailResult();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.Rooms)) {
      data["Rooms"] = [];
      for (let item of this.Rooms)
        data["Rooms"].push(item.toJSON());
    }
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface ISingleHotelDetailResult extends IHotelDetails {
  /** List of Rooms */
  Rooms?: SingleRoomDetailsResult[] | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: SingleHotelDetailResultCustomData | undefined;
}

export class SingleRoomDetailsResult extends RoomDetails implements ISingleRoomDetailsResult {
  /** Connector Custom Data */
  ConnectorCustomData?: SingleRoomDetailsResultCustomData | undefined;

  constructor(data?: ISingleRoomDetailsResult) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? SingleRoomDetailsResultCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): SingleRoomDetailsResult {
    data = typeof data === 'object' ? data : {};
    let result = new SingleRoomDetailsResult();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface ISingleRoomDetailsResult extends IRoomDetails {
  /** Connector Custom Data */
  ConnectorCustomData?: SingleRoomDetailsResultCustomData | undefined;
}

export abstract class SingleRoomDetailsResultCustomData implements ISingleRoomDetailsResultCustomData {

  protected _discriminator: string;

  constructor(data?: ISingleRoomDetailsResultCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "SingleRoomDetailsResultCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): SingleRoomDetailsResultCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "SABRE_SYNXIS") {
      let result = new SabreSynXisSingleRoomDetailsResultCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "CREOLE") {
      let result = new CreoleSingleRoomDetailsResultCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'SingleRoomDetailsResultCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface ISingleRoomDetailsResultCustomData {
}

export class SabreSynXisSingleRoomDetailsResultCustomData extends SingleRoomDetailsResultCustomData implements ISabreSynXisSingleRoomDetailsResultCustomData {
  /** Room Description List */
  Descriptions?: SabreDescription[] | undefined;

  constructor(data?: ISabreSynXisSingleRoomDetailsResultCustomData) {
    super(data);
    this._discriminator = "SABRE_SYNXIS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      if (Array.isArray(_data["Descriptions"])) {
        this.Descriptions = [] as any;
        for (let item of _data["Descriptions"])
          this.Descriptions!.push(SabreDescription.fromJS(item));
      }
    }
  }

  static fromJS(data: any): SabreSynXisSingleRoomDetailsResultCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreSynXisSingleRoomDetailsResultCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.Descriptions)) {
      data["Descriptions"] = [];
      for (let item of this.Descriptions)
        data["Descriptions"].push(item.toJSON());
    }
    super.toJSON(data);
    return data;
  }
}

export interface ISabreSynXisSingleRoomDetailsResultCustomData extends ISingleRoomDetailsResultCustomData {
  /** Room Description List */
  Descriptions?: SabreDescription[] | undefined;
}

/** Sabre Single Description Item */
export class SabreDescription implements ISabreDescription {
  /** Description Title */
  Title?: string | undefined;
  /** Description */
  Description?: string | undefined;

  constructor(data?: ISabreDescription) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Title = _data["Title"];
      this.Description = _data["Description"];
    }
  }

  static fromJS(data: any): SabreDescription {
    data = typeof data === 'object' ? data : {};
    let result = new SabreDescription();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Title"] = this.Title;
    data["Description"] = this.Description;
    return data;
  }
}

/** Sabre Single Description Item */
export interface ISabreDescription {
  /** Description Title */
  Title?: string | undefined;
  /** Description */
  Description?: string | undefined;
}

export class CreoleSingleRoomDetailsResultCustomData extends SingleRoomDetailsResultCustomData implements ICreoleSingleRoomDetailsResultCustomData {
  /** Room Size */
  Size?: number;
  /** Room Size Unit */
  SizeUnit?: string | undefined;

  constructor(data?: ICreoleSingleRoomDetailsResultCustomData) {
    super(data);
    this._discriminator = "CREOLE";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Size = _data["Size"];
      this.SizeUnit = _data["SizeUnit"];
    }
  }

  static fromJS(data: any): CreoleSingleRoomDetailsResultCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new CreoleSingleRoomDetailsResultCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Size"] = this.Size;
    data["SizeUnit"] = this.SizeUnit;
    super.toJSON(data);
    return data;
  }
}

export interface ICreoleSingleRoomDetailsResultCustomData extends ISingleRoomDetailsResultCustomData {
  /** Room Size */
  Size?: number;
  /** Room Size Unit */
  SizeUnit?: string | undefined;
}

export abstract class CustomerCustomDataOfSingleRoomDetailsResult implements ICustomerCustomDataOfSingleRoomDetailsResult {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfSingleRoomDetailsResult) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfSingleRoomDetailsResult";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfSingleRoomDetailsResult {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfSingleRoomDetailsResult' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfSingleRoomDetailsResult {
}

export abstract class SingleHotelDetailResultCustomData implements ISingleHotelDetailResultCustomData {

  protected _discriminator: string;

  constructor(data?: ISingleHotelDetailResultCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "SingleHotelDetailResultCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): SingleHotelDetailResultCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "SABRE_SYNXIS") {
      let result = new SabreSynxisSingleHotelDetailResultCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "CREOLE") {
      let result = new CreoleSingleHotelDetailResultCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'SingleHotelDetailResultCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface ISingleHotelDetailResultCustomData {
}

/** SabreSynXis Custom Data for SingleHotelDetailResult */
export class SabreSynxisSingleHotelDetailResultCustomData extends SingleHotelDetailResultCustomData implements ISabreSynxisSingleHotelDetailResultCustomData {
  /** Hotel Description List */
  Descriptions?: SabreDescription[] | undefined;

  constructor(data?: ISabreSynxisSingleHotelDetailResultCustomData) {
    super(data);
    this._discriminator = "SABRE_SYNXIS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      if (Array.isArray(_data["Descriptions"])) {
        this.Descriptions = [] as any;
        for (let item of _data["Descriptions"])
          this.Descriptions!.push(SabreDescription.fromJS(item));
      }
    }
  }

  static fromJS(data: any): SabreSynxisSingleHotelDetailResultCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreSynxisSingleHotelDetailResultCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.Descriptions)) {
      data["Descriptions"] = [];
      for (let item of this.Descriptions)
        data["Descriptions"].push(item.toJSON());
    }
    super.toJSON(data);
    return data;
  }
}

/** SabreSynXis Custom Data for SingleHotelDetailResult */
export interface ISabreSynxisSingleHotelDetailResultCustomData extends ISingleHotelDetailResultCustomData {
  /** Hotel Description List */
  Descriptions?: SabreDescription[] | undefined;
}

/** SabreSynXis Custom Data for SingleHotelDetailResult */
export class CreoleSingleHotelDetailResultCustomData extends SingleHotelDetailResultCustomData implements ICreoleSingleHotelDetailResultCustomData {
  /** Hotel Description List */
  Descriptions?: string[] | undefined;

  constructor(data?: ICreoleSingleHotelDetailResultCustomData) {
    super(data);
    this._discriminator = "CREOLE";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      if (Array.isArray(_data["Descriptions"])) {
        this.Descriptions = [] as any;
        for (let item of _data["Descriptions"])
          this.Descriptions!.push(item);
      }
    }
  }

  static fromJS(data: any): CreoleSingleHotelDetailResultCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new CreoleSingleHotelDetailResultCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.Descriptions)) {
      data["Descriptions"] = [];
      for (let item of this.Descriptions)
        data["Descriptions"].push(item);
    }
    super.toJSON(data);
    return data;
  }
}

/** SabreSynXis Custom Data for SingleHotelDetailResult */
export interface ICreoleSingleHotelDetailResultCustomData extends ISingleHotelDetailResultCustomData {
  /** Hotel Description List */
  Descriptions?: string[] | undefined;
}

export abstract class CustomerCustomDataOfSingleHotelDetailResult implements ICustomerCustomDataOfSingleHotelDetailResult {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfSingleHotelDetailResult) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfSingleHotelDetailResult";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfSingleHotelDetailResult {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfSingleHotelDetailResult' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfSingleHotelDetailResult {
}

export abstract class HotelDetailOutputCustomData implements IHotelDetailOutputCustomData {

  protected _discriminator: string;

  constructor(data?: IHotelDetailOutputCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "HotelDetailOutputCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): HotelDetailOutputCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "BOOKING_DOT_COM") {
      let result = new BookingDotComHotelDetailOutputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "SABRE_SYNXIS") {
      let result = new SabreSynXisHotelDetailOutputCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'HotelDetailOutputCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IHotelDetailOutputCustomData {
}

export class BookingDotComHotelDetailOutputCustomData extends HotelDetailOutputCustomData implements IBookingDotComHotelDetailOutputCustomData {
  HotelRefId?: string | undefined;
  KeyCollectionInfo?: KeyCollectInfo | undefined;
  CheckInCheckOutHours?: CheckInCheckOutHours | undefined;
  ImportantInfo?: string | undefined;

  constructor(data?: IBookingDotComHotelDetailOutputCustomData) {
    super(data);
    this._discriminator = "BOOKING_DOT_COM";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.HotelRefId = _data["HotelRefId"];
      this.KeyCollectionInfo = _data["KeyCollectionInfo"] ? KeyCollectInfo.fromJS(_data["KeyCollectionInfo"]) : <any>undefined;
      this.CheckInCheckOutHours = _data["CheckInCheckOutHours"] ? CheckInCheckOutHours.fromJS(_data["CheckInCheckOutHours"]) : <any>undefined;
      this.ImportantInfo = _data["ImportantInfo"];
    }
  }

  static fromJS(data: any): BookingDotComHotelDetailOutputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new BookingDotComHotelDetailOutputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["HotelRefId"] = this.HotelRefId;
    data["KeyCollectionInfo"] = this.KeyCollectionInfo ? this.KeyCollectionInfo.toJSON() : <any>undefined;
    data["CheckInCheckOutHours"] = this.CheckInCheckOutHours ? this.CheckInCheckOutHours.toJSON() : <any>undefined;
    data["ImportantInfo"] = this.ImportantInfo;
    super.toJSON(data);
    return data;
  }
}

export interface IBookingDotComHotelDetailOutputCustomData extends IHotelDetailOutputCustomData {
  HotelRefId?: string | undefined;
  KeyCollectionInfo?: KeyCollectInfo | undefined;
  CheckInCheckOutHours?: CheckInCheckOutHours | undefined;
  ImportantInfo?: string | undefined;
}

export class KeyCollectInfo implements IKeyCollectInfo {
  HowToCollect?: string | undefined;
  OtherText?: string | undefined;
  KeyLocation?: string | undefined;
  AlternativeKeyLocation?: AltKeyLocation | undefined;

  constructor(data?: IKeyCollectInfo) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.HowToCollect = _data["HowToCollect"];
      this.OtherText = _data["OtherText"];
      this.KeyLocation = _data["KeyLocation"];
      this.AlternativeKeyLocation = _data["AlternativeKeyLocation"] ? AltKeyLocation.fromJS(_data["AlternativeKeyLocation"]) : <any>undefined;
    }
  }

  static fromJS(data: any): KeyCollectInfo {
    data = typeof data === 'object' ? data : {};
    let result = new KeyCollectInfo();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["HowToCollect"] = this.HowToCollect;
    data["OtherText"] = this.OtherText;
    data["KeyLocation"] = this.KeyLocation;
    data["AlternativeKeyLocation"] = this.AlternativeKeyLocation ? this.AlternativeKeyLocation.toJSON() : <any>undefined;
    return data;
  }
}

export interface IKeyCollectInfo {
  HowToCollect?: string | undefined;
  OtherText?: string | undefined;
  KeyLocation?: string | undefined;
  AlternativeKeyLocation?: AltKeyLocation | undefined;
}

export class AltKeyLocation implements IAltKeyLocation {
  Zip?: string | undefined;
  Address?: string | undefined;
  City?: string | undefined;

  constructor(data?: IAltKeyLocation) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Zip = _data["Zip"];
      this.Address = _data["Address"];
      this.City = _data["City"];
    }
  }

  static fromJS(data: any): AltKeyLocation {
    data = typeof data === 'object' ? data : {};
    let result = new AltKeyLocation();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Zip"] = this.Zip;
    data["Address"] = this.Address;
    data["City"] = this.City;
    return data;
  }
}

export interface IAltKeyLocation {
  Zip?: string | undefined;
  Address?: string | undefined;
  City?: string | undefined;
}

export class CheckInCheckOutHours implements ICheckInCheckOutHours {
  CheckInFrom?: string | undefined;
  CheckInTo?: string | undefined;
  CheckOutFrom?: string | undefined;
  CheckOutTo?: string | undefined;

  constructor(data?: ICheckInCheckOutHours) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.CheckInFrom = _data["CheckInFrom"];
      this.CheckInTo = _data["CheckInTo"];
      this.CheckOutFrom = _data["CheckOutFrom"];
      this.CheckOutTo = _data["CheckOutTo"];
    }
  }

  static fromJS(data: any): CheckInCheckOutHours {
    data = typeof data === 'object' ? data : {};
    let result = new CheckInCheckOutHours();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CheckInFrom"] = this.CheckInFrom;
    data["CheckInTo"] = this.CheckInTo;
    data["CheckOutFrom"] = this.CheckOutFrom;
    data["CheckOutTo"] = this.CheckOutTo;
    return data;
  }
}

export interface ICheckInCheckOutHours {
  CheckInFrom?: string | undefined;
  CheckInTo?: string | undefined;
  CheckOutFrom?: string | undefined;
  CheckOutTo?: string | undefined;
}

export class SabreSynXisHotelDetailOutputCustomData extends HotelDetailOutputCustomData implements ISabreSynXisHotelDetailOutputCustomData {
  /** Hotel Reference Id on Connector */
  HotelRefId?: string | undefined;

  constructor(data?: ISabreSynXisHotelDetailOutputCustomData) {
    super(data);
    this._discriminator = "SABRE_SYNXIS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.HotelRefId = _data["HotelRefId"];
    }
  }

  static fromJS(data: any): SabreSynXisHotelDetailOutputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreSynXisHotelDetailOutputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["HotelRefId"] = this.HotelRefId;
    super.toJSON(data);
    return data;
  }
}

export interface ISabreSynXisHotelDetailOutputCustomData extends IHotelDetailOutputCustomData {
  /** Hotel Reference Id on Connector */
  HotelRefId?: string | undefined;
}

export abstract class CustomerCustomDataOfJupiterHotelDetailOutput implements ICustomerCustomDataOfJupiterHotelDetailOutput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterHotelDetailOutput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterHotelDetailOutput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterHotelDetailOutput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterHotelDetailOutput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterHotelDetailOutput {
}

export class JupiterHotelDetailRQ extends BaseCacheableRQ implements IJupiterHotelDetailRQ {
  /** JupiterHotelDetailInput Request */
  Request?: JupiterHotelDetailInput | undefined;

  constructor(data?: IJupiterHotelDetailRQ) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Request = _data["Request"] ? JupiterHotelDetailInput.fromJS(_data["Request"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterHotelDetailRQ {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelDetailRQ();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Request"] = this.Request ? this.Request.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelDetailRQ extends IBaseCacheableRQ {
  /** JupiterHotelDetailInput Request */
  Request?: JupiterHotelDetailInput | undefined;
}

export class JupiterHotelDetailInput extends BaseInput implements IJupiterHotelDetailInput {
  /** Connector Code */
  ConnectorCode!: EH2HConnectorCode;
  /** List of Hotel Reference Id on Connector */
  HotelRefIds?: string[] | undefined;
  /** List of Destination Reference Id on Connector */
  DestinationRefIds?: string[] | undefined;
  /** Preferred Currency to search. Depends on Connectors if the features is available */
  PreferredCurrency?: string | undefined;
  /** Preferred Language to search. Depends on Connectors if the features is available */
  PreferredLanguage?: string | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: HotelDetailInputCustomData | undefined;

  constructor(data?: IJupiterHotelDetailInput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ConnectorCode = _data["ConnectorCode"];
      if (Array.isArray(_data["HotelRefIds"])) {
        this.HotelRefIds = [] as any;
        for (let item of _data["HotelRefIds"])
          this.HotelRefIds!.push(item);
      }
      if (Array.isArray(_data["DestinationRefIds"])) {
        this.DestinationRefIds = [] as any;
        for (let item of _data["DestinationRefIds"])
          this.DestinationRefIds!.push(item);
      }
      this.PreferredCurrency = _data["PreferredCurrency"];
      this.PreferredLanguage = _data["PreferredLanguage"];
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? HotelDetailInputCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterHotelDetailInput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelDetailInput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCode"] = this.ConnectorCode;
    if (Array.isArray(this.HotelRefIds)) {
      data["HotelRefIds"] = [];
      for (let item of this.HotelRefIds)
        data["HotelRefIds"].push(item);
    }
    if (Array.isArray(this.DestinationRefIds)) {
      data["DestinationRefIds"] = [];
      for (let item of this.DestinationRefIds)
        data["DestinationRefIds"].push(item);
    }
    data["PreferredCurrency"] = this.PreferredCurrency;
    data["PreferredLanguage"] = this.PreferredLanguage;
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelDetailInput extends IBaseInput {
  /** Connector Code */
  ConnectorCode: EH2HConnectorCode;
  /** List of Hotel Reference Id on Connector */
  HotelRefIds?: string[] | undefined;
  /** List of Destination Reference Id on Connector */
  DestinationRefIds?: string[] | undefined;
  /** Preferred Currency to search. Depends on Connectors if the features is available */
  PreferredCurrency?: string | undefined;
  /** Preferred Language to search. Depends on Connectors if the features is available */
  PreferredLanguage?: string | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: HotelDetailInputCustomData | undefined;
}

export abstract class HotelDetailInputCustomData implements IHotelDetailInputCustomData {

  protected _discriminator: string;

  constructor(data?: IHotelDetailInputCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "HotelDetailInputCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): HotelDetailInputCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "BOOKING_DOT_COM") {
      let result = new BookingDotComHotelDetailInputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "SABRE_CSL") {
      let result = new SabreCSLHotelDetailInputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "HOTELBEDS") {
      let result = new HotelbedsHotelDetailInputCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'HotelDetailInputCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IHotelDetailInputCustomData {
}

export class BookingDotComHotelDetailInputCustomData extends HotelDetailInputCustomData implements IBookingDotComHotelDetailInputCustomData {
  Rows?: number;
  Offset?: number;
  /** If true return hotel accepted credit cards */
  ReturnAcceptedCreditCards?: boolean;
  ReturnRoomInfo?: boolean;
  ReturnRoomPhotos?: boolean;
  ReturnHotelPhotos?: boolean;
  ReturnHotelPolicies?: boolean;
  ReturnPaymentDetails?: boolean;
  ReturnRoomFacilities?: boolean;
  ReturnHotelFacilities?: boolean;
  ReturnRoomDescription?: boolean;
  ReturnHotelDescription?: boolean;
  ReturnKeyCollectionInfo?: boolean;

  constructor(data?: IBookingDotComHotelDetailInputCustomData) {
    super(data);
    this._discriminator = "BOOKING_DOT_COM";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Rows = _data["Rows"];
      this.Offset = _data["Offset"];
      this.ReturnAcceptedCreditCards = _data["ReturnAcceptedCreditCards"];
      this.ReturnRoomInfo = _data["ReturnRoomInfo"];
      this.ReturnRoomPhotos = _data["ReturnRoomPhotos"];
      this.ReturnHotelPhotos = _data["ReturnHotelPhotos"];
      this.ReturnHotelPolicies = _data["ReturnHotelPolicies"];
      this.ReturnPaymentDetails = _data["ReturnPaymentDetails"];
      this.ReturnRoomFacilities = _data["ReturnRoomFacilities"];
      this.ReturnHotelFacilities = _data["ReturnHotelFacilities"];
      this.ReturnRoomDescription = _data["ReturnRoomDescription"];
      this.ReturnHotelDescription = _data["ReturnHotelDescription"];
      this.ReturnKeyCollectionInfo = _data["ReturnKeyCollectionInfo"];
    }
  }

  static fromJS(data: any): BookingDotComHotelDetailInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new BookingDotComHotelDetailInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Rows"] = this.Rows;
    data["Offset"] = this.Offset;
    data["ReturnAcceptedCreditCards"] = this.ReturnAcceptedCreditCards;
    data["ReturnRoomInfo"] = this.ReturnRoomInfo;
    data["ReturnRoomPhotos"] = this.ReturnRoomPhotos;
    data["ReturnHotelPhotos"] = this.ReturnHotelPhotos;
    data["ReturnHotelPolicies"] = this.ReturnHotelPolicies;
    data["ReturnPaymentDetails"] = this.ReturnPaymentDetails;
    data["ReturnRoomFacilities"] = this.ReturnRoomFacilities;
    data["ReturnHotelFacilities"] = this.ReturnHotelFacilities;
    data["ReturnRoomDescription"] = this.ReturnRoomDescription;
    data["ReturnHotelDescription"] = this.ReturnHotelDescription;
    data["ReturnKeyCollectionInfo"] = this.ReturnKeyCollectionInfo;
    super.toJSON(data);
    return data;
  }
}

export interface IBookingDotComHotelDetailInputCustomData extends IHotelDetailInputCustomData {
  Rows?: number;
  Offset?: number;
  /** If true return hotel accepted credit cards */
  ReturnAcceptedCreditCards?: boolean;
  ReturnRoomInfo?: boolean;
  ReturnRoomPhotos?: boolean;
  ReturnHotelPhotos?: boolean;
  ReturnHotelPolicies?: boolean;
  ReturnPaymentDetails?: boolean;
  ReturnRoomFacilities?: boolean;
  ReturnHotelFacilities?: boolean;
  ReturnRoomDescription?: boolean;
  ReturnHotelDescription?: boolean;
  ReturnKeyCollectionInfo?: boolean;
}

export class SabreCSLHotelDetailInputCustomData extends HotelDetailInputCustomData implements ISabreCSLHotelDetailInputCustomData {
  /** maxItems: 50 - Lists hotels by code. */
  HotelRef?: HotelRef | undefined;

  constructor(data?: ISabreCSLHotelDetailInputCustomData) {
    super(data);
    this._discriminator = "SABRE_CSL";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.HotelRef = _data["HotelRef"] ? HotelRef.fromJS(_data["HotelRef"]) : <any>undefined;
    }
  }

  static fromJS(data: any): SabreCSLHotelDetailInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreCSLHotelDetailInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["HotelRef"] = this.HotelRef ? this.HotelRef.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface ISabreCSLHotelDetailInputCustomData extends IHotelDetailInputCustomData {
  /** maxItems: 50 - Lists hotels by code. */
  HotelRef?: HotelRef | undefined;
}

export class HotelbedsHotelDetailInputCustomData extends HotelDetailInputCustomData implements IHotelbedsHotelDetailInputCustomData {
  UseSecondaryLanguage?: boolean;

  constructor(data?: IHotelbedsHotelDetailInputCustomData) {
    super(data);
    this._discriminator = "HOTELBEDS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.UseSecondaryLanguage = _data["UseSecondaryLanguage"];
    }
  }

  static fromJS(data: any): HotelbedsHotelDetailInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new HotelbedsHotelDetailInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["UseSecondaryLanguage"] = this.UseSecondaryLanguage;
    super.toJSON(data);
    return data;
  }
}

export interface IHotelbedsHotelDetailInputCustomData extends IHotelDetailInputCustomData {
  UseSecondaryLanguage?: boolean;
}

export abstract class CustomerCustomDataOfJupiterHotelDetailInput implements ICustomerCustomDataOfJupiterHotelDetailInput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterHotelDetailInput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterHotelDetailInput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterHotelDetailInput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterHotelDetailInput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterHotelDetailInput {
}

export class JupiterHotelBookRS extends BaseRS implements IJupiterHotelBookRS {
  /** JupiterHotelBookOutput Response */
  Response?: JupiterHotelBookOutput | undefined;

  constructor(data?: IJupiterHotelBookRS) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Response = _data["Response"] ? JupiterHotelBookOutput.fromJS(_data["Response"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterHotelBookRS {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelBookRS();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Response"] = this.Response ? this.Response.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelBookRS extends IBaseRS {
  /** JupiterHotelBookOutput Response */
  Response?: JupiterHotelBookOutput | undefined;
}

export class JupiterHotelBookOutput extends BaseOutput implements IJupiterHotelBookOutput {
  /** Connector Code of the Booking */
  ConnectorCode?: EH2HConnectorCode;
  /** Booking Status */
  BookingStatus?: EBookingStatus;
  /** Booking Reference on the Connector */
  ConnectorBookingReference?: string | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: HotelBookOutputCustomData | undefined;

  constructor(data?: IJupiterHotelBookOutput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ConnectorCode = _data["ConnectorCode"];
      this.BookingStatus = _data["BookingStatus"];
      this.ConnectorBookingReference = _data["ConnectorBookingReference"];
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? HotelBookOutputCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterHotelBookOutput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelBookOutput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCode"] = this.ConnectorCode;
    data["BookingStatus"] = this.BookingStatus;
    data["ConnectorBookingReference"] = this.ConnectorBookingReference;
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelBookOutput extends IBaseOutput {
  /** Connector Code of the Booking */
  ConnectorCode?: EH2HConnectorCode;
  /** Booking Status */
  BookingStatus?: EBookingStatus;
  /** Booking Reference on the Connector */
  ConnectorBookingReference?: string | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: HotelBookOutputCustomData | undefined;
}

export enum EBookingStatus {
  PENDING = "PENDING",
  BOOKED = "BOOKED",
  DELETED = "DELETED",
  ERROR = "ERROR",
  MODIFIED = "MODIFIED",
}

export abstract class HotelBookOutputCustomData implements IHotelBookOutputCustomData {

  protected _discriminator: string;

  constructor(data?: IHotelBookOutputCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "HotelBookOutputCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): HotelBookOutputCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "BOOKING_DOT_COM") {
      let result = new BookingDotComHotelBookOutputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "SABRE_SYNXIS") {
      let result = new SabreSynXisHotelBookOutputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "SABRE") {
      let result = new SabreHotelBookOutputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "IHG_GRS") {
      let result = new IHGHotelBookOutputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "CREOLE") {
      let result = new CreoleHotelBookOutputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "HOTELBEDS") {
      let result = new HotelbedsHotelBookOutputCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'HotelBookOutputCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IHotelBookOutputCustomData {
}

export class BookingDotComHotelBookOutputCustomData extends HotelBookOutputCustomData implements IBookingDotComHotelBookOutputCustomData {
  PinCode?: string | undefined;
  ReservationId?: string | undefined;

  constructor(data?: IBookingDotComHotelBookOutputCustomData) {
    super(data);
    this._discriminator = "BOOKING_DOT_COM";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.PinCode = _data["PinCode"];
      this.ReservationId = _data["ReservationId"];
    }
  }

  static fromJS(data: any): BookingDotComHotelBookOutputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new BookingDotComHotelBookOutputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["PinCode"] = this.PinCode;
    data["ReservationId"] = this.ReservationId;
    super.toJSON(data);
    return data;
  }
}

export interface IBookingDotComHotelBookOutputCustomData extends IHotelBookOutputCustomData {
  PinCode?: string | undefined;
  ReservationId?: string | undefined;
}

export class SabreSynXisHotelBookOutputCustomData extends HotelBookOutputCustomData implements ISabreSynXisHotelBookOutputCustomData {
  /** Define if the Book is an Itinerary */
  IsItinerary?: boolean;
  /** List of SabreBookingReference

   If itinerary it'll have all the related bookings */
  SabreReservationReferences?: SabreBookingReference[] | undefined;
  /** Define if the booking can be cancelled */
  IsCancellable?: boolean | undefined;
  /** The Hotel Code, used for verification on SabreSynXis */
  HotelCode?: string | undefined;
  /** The Chain Code if present, used for verification on SabreSynXis */
  ChainCode?: string | undefined;

  constructor(data?: ISabreSynXisHotelBookOutputCustomData) {
    super(data);
    this._discriminator = "SABRE_SYNXIS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.IsItinerary = _data["IsItinerary"];
      if (Array.isArray(_data["SabreReservationReferences"])) {
        this.SabreReservationReferences = [] as any;
        for (let item of _data["SabreReservationReferences"])
          this.SabreReservationReferences!.push(SabreBookingReference.fromJS(item));
      }
      this.IsCancellable = _data["IsCancellable"];
      this.HotelCode = _data["HotelCode"];
      this.ChainCode = _data["ChainCode"];
    }
  }

  static fromJS(data: any): SabreSynXisHotelBookOutputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreSynXisHotelBookOutputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["IsItinerary"] = this.IsItinerary;
    if (Array.isArray(this.SabreReservationReferences)) {
      data["SabreReservationReferences"] = [];
      for (let item of this.SabreReservationReferences)
        data["SabreReservationReferences"].push(item.toJSON());
    }
    data["IsCancellable"] = this.IsCancellable;
    data["HotelCode"] = this.HotelCode;
    data["ChainCode"] = this.ChainCode;
    super.toJSON(data);
    return data;
  }
}

export interface ISabreSynXisHotelBookOutputCustomData extends IHotelBookOutputCustomData {
  /** Define if the Book is an Itinerary */
  IsItinerary?: boolean;
  /** List of SabreBookingReference

   If itinerary it'll have all the related bookings */
  SabreReservationReferences?: SabreBookingReference[] | undefined;
  /** Define if the booking can be cancelled */
  IsCancellable?: boolean | undefined;
  /** The Hotel Code, used for verification on SabreSynXis */
  HotelCode?: string | undefined;
  /** The Chain Code if present, used for verification on SabreSynXis */
  ChainCode?: string | undefined;
}

export class SabreBookingReference implements ISabreBookingReference {
  /** Sabre Booking Reference Id */
  Id!: string;
  /** Sabre BookingReference Type */
  Type!: string;
  /** Sabre BookingReference Info on the Type */
  InfoType?: string | undefined;

  constructor(data?: ISabreBookingReference) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Id = _data["Id"];
      this.Type = _data["Type"];
      this.InfoType = _data["InfoType"];
    }
  }

  static fromJS(data: any): SabreBookingReference {
    data = typeof data === 'object' ? data : {};
    let result = new SabreBookingReference();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Id"] = this.Id;
    data["Type"] = this.Type;
    data["InfoType"] = this.InfoType;
    return data;
  }
}

export interface ISabreBookingReference {
  /** Sabre Booking Reference Id */
  Id: string;
  /** Sabre BookingReference Type */
  Type: string;
  /** Sabre BookingReference Info on the Type */
  InfoType?: string | undefined;
}

export class SabreHotelBookOutputCustomData extends HotelBookOutputCustomData implements ISabreHotelBookOutputCustomData {
  Pnr?: string | undefined;
  /** "ConfirmationNumber" is used to return the confirmation number associated with the particular hotel segment */
  ConfirmationNumbers?: string[] | undefined;

  constructor(data?: ISabreHotelBookOutputCustomData) {
    super(data);
    this._discriminator = "SABRE";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Pnr = _data["Pnr"];
      if (Array.isArray(_data["ConfirmationNumbers"])) {
        this.ConfirmationNumbers = [] as any;
        for (let item of _data["ConfirmationNumbers"])
          this.ConfirmationNumbers!.push(item);
      }
    }
  }

  static fromJS(data: any): SabreHotelBookOutputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreHotelBookOutputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Pnr"] = this.Pnr;
    if (Array.isArray(this.ConfirmationNumbers)) {
      data["ConfirmationNumbers"] = [];
      for (let item of this.ConfirmationNumbers)
        data["ConfirmationNumbers"].push(item);
    }
    super.toJSON(data);
    return data;
  }
}

export interface ISabreHotelBookOutputCustomData extends IHotelBookOutputCustomData {
  Pnr?: string | undefined;
  /** "ConfirmationNumber" is used to return the confirmation number associated with the particular hotel segment */
  ConfirmationNumbers?: string[] | undefined;
}

export class IHGHotelBookOutputCustomData extends HotelBookOutputCustomData implements IIHGHotelBookOutputCustomData {
  /** IHG Booking Reference list */
  IhgBookingReferences?: IHGBookingReference[] | undefined;
  /** IHG Cancellation Number */
  IhgCancellationNumber?: string | undefined;

  constructor(data?: IIHGHotelBookOutputCustomData) {
    super(data);
    this._discriminator = "IHG_GRS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      if (Array.isArray(_data["IhgBookingReferences"])) {
        this.IhgBookingReferences = [] as any;
        for (let item of _data["IhgBookingReferences"])
          this.IhgBookingReferences!.push(IHGBookingReference.fromJS(item));
      }
      this.IhgCancellationNumber = _data["IhgCancellationNumber"];
    }
  }

  static fromJS(data: any): IHGHotelBookOutputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new IHGHotelBookOutputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.IhgBookingReferences)) {
      data["IhgBookingReferences"] = [];
      for (let item of this.IhgBookingReferences)
        data["IhgBookingReferences"].push(item.toJSON());
    }
    data["IhgCancellationNumber"] = this.IhgCancellationNumber;
    super.toJSON(data);
    return data;
  }
}

export interface IIHGHotelBookOutputCustomData extends IHotelBookOutputCustomData {
  /** IHG Booking Reference list */
  IhgBookingReferences?: IHGBookingReference[] | undefined;
  /** IHG Cancellation Number */
  IhgCancellationNumber?: string | undefined;
}

export class IHGBookingReference implements IIHGBookingReference {
  /** IHG Booking Reference Id */
  Id?: string | undefined;
  /** IHG BookingReference Type */
  Type?: string | undefined;

  constructor(data?: IIHGBookingReference) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Id = _data["Id"];
      this.Type = _data["Type"];
    }
  }

  static fromJS(data: any): IHGBookingReference {
    data = typeof data === 'object' ? data : {};
    let result = new IHGBookingReference();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Id"] = this.Id;
    data["Type"] = this.Type;
    return data;
  }
}

export interface IIHGBookingReference {
  /** IHG Booking Reference Id */
  Id?: string | undefined;
  /** IHG BookingReference Type */
  Type?: string | undefined;
}

export class CreoleHotelBookOutputCustomData extends HotelBookOutputCustomData implements ICreoleHotelBookOutputCustomData {

  constructor(data?: ICreoleHotelBookOutputCustomData) {
    super(data);
    this._discriminator = "CREOLE";
  }

  init(_data?: any) {
    super.init(_data);
  }

  static fromJS(data: any): CreoleHotelBookOutputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new CreoleHotelBookOutputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    super.toJSON(data);
    return data;
  }
}

export interface ICreoleHotelBookOutputCustomData extends IHotelBookOutputCustomData {
}

export class HotelbedsHotelBookOutputCustomData extends HotelBookOutputCustomData implements IHotelbedsHotelBookOutputCustomData {
  /** Da modellare una volta ottenuta la response con tutte le info sugli extra */
  ActivitiesInfo?: string | undefined;

  constructor(data?: IHotelbedsHotelBookOutputCustomData) {
    super(data);
    this._discriminator = "HOTELBEDS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ActivitiesInfo = _data["ActivitiesInfo"];
    }
  }

  static fromJS(data: any): HotelbedsHotelBookOutputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new HotelbedsHotelBookOutputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ActivitiesInfo"] = this.ActivitiesInfo;
    super.toJSON(data);
    return data;
  }
}

export interface IHotelbedsHotelBookOutputCustomData extends IHotelBookOutputCustomData {
  /** Da modellare una volta ottenuta la response con tutte le info sugli extra */
  ActivitiesInfo?: string | undefined;
}

export abstract class CustomerCustomDataOfJupiterHotelBookOutput implements ICustomerCustomDataOfJupiterHotelBookOutput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterHotelBookOutput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterHotelBookOutput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterHotelBookOutput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterHotelBookOutput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterHotelBookOutput {
}

export class JupiterHotelBookRQ extends BaseRQ implements IJupiterHotelBookRQ {
  /** JupiterHotelBookInput Request */
  Request?: JupiterHotelBookInput | undefined;

  constructor(data?: IJupiterHotelBookRQ) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Request = _data["Request"] ? JupiterHotelBookInput.fromJS(_data["Request"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterHotelBookRQ {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelBookRQ();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Request"] = this.Request ? this.Request.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelBookRQ extends IBaseRQ {
  /** JupiterHotelBookInput Request */
  Request?: JupiterHotelBookInput | undefined;
}

export class JupiterHotelBookInput extends BaseInput implements IJupiterHotelBookInput {
  /** Customer Booking Reference

   If possible it'll be passed to the Connector in order to have a Customer Reference in the Connector Booking */
  CustomerBookReference?: string | undefined;
  /** Connector Code */
  ConnectorCode!: EH2HConnectorCode;
  /** HotelId to be booked */
  HotelId!: string;
  /** Date Start of the booking */
  FromDate!: string;
  /** Date End of the booking */
  ToDate!: string;
  /** Booking Notes

   If possible it'll be passed to the Connector */
  Notes?: string | undefined;
  /** Room List that need to be booked */
  RoomsToBook!: RoomToBook[];
  /** Extra List that need to be booked

   This is the general Extras and it'll be added only to the first booking also if the Connector needs 1 Booking per Room

   If the Connector needs 1 Booking per Room you can specify the Extras also to the RoomsToBook in order to split the extras on the Rooms */
  ExtrasToBook?: ExtraToBook[] | undefined;
  /** Credit Card infos to process the Booking */
  CreditCardPayment?: CreditCardInfo | undefined;
  /** Travel Company Data (who sell) */
  TravelCompany?: TravelCompany | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: HotelBookInputCustomData | undefined;

  constructor(data?: IJupiterHotelBookInput) {
    super(data);
    if (!data) {
      this.RoomsToBook = [];
    }
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.CustomerBookReference = _data["CustomerBookReference"];
      this.ConnectorCode = _data["ConnectorCode"];
      this.HotelId = _data["HotelId"];
      this.FromDate = _data["FromDate"];
      this.ToDate = _data["ToDate"];
      this.Notes = _data["Notes"];
      if (Array.isArray(_data["RoomsToBook"])) {
        this.RoomsToBook = [] as any;
        for (let item of _data["RoomsToBook"])
          this.RoomsToBook!.push(RoomToBook.fromJS(item));
      }
      if (Array.isArray(_data["ExtrasToBook"])) {
        this.ExtrasToBook = [] as any;
        for (let item of _data["ExtrasToBook"])
          this.ExtrasToBook!.push(ExtraToBook.fromJS(item));
      }
      this.CreditCardPayment = _data["CreditCardPayment"] ? CreditCardInfo.fromJS(_data["CreditCardPayment"]) : <any>undefined;
      this.TravelCompany = _data["TravelCompany"] ? TravelCompany.fromJS(_data["TravelCompany"]) : <any>undefined;
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? HotelBookInputCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterHotelBookInput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelBookInput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomerBookReference"] = this.CustomerBookReference;
    data["ConnectorCode"] = this.ConnectorCode;
    data["HotelId"] = this.HotelId;
    data["FromDate"] = this.FromDate;
    data["ToDate"] = this.ToDate;
    data["Notes"] = this.Notes;
    if (Array.isArray(this.RoomsToBook)) {
      data["RoomsToBook"] = [];
      for (let item of this.RoomsToBook)
        data["RoomsToBook"].push(item.toJSON());
    }
    if (Array.isArray(this.ExtrasToBook)) {
      data["ExtrasToBook"] = [];
      for (let item of this.ExtrasToBook)
        data["ExtrasToBook"].push(item.toJSON());
    }
    data["CreditCardPayment"] = this.CreditCardPayment ? this.CreditCardPayment.toJSON() : <any>undefined;
    data["TravelCompany"] = this.TravelCompany ? this.TravelCompany.toJSON() : <any>undefined;
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelBookInput extends IBaseInput {
  /** Customer Booking Reference

   If possible it'll be passed to the Connector in order to have a Customer Reference in the Connector Booking */
  CustomerBookReference?: string | undefined;
  /** Connector Code */
  ConnectorCode: EH2HConnectorCode;
  /** HotelId to be booked */
  HotelId: string;
  /** Date Start of the booking */
  FromDate: string;
  /** Date End of the booking */
  ToDate: string;
  /** Booking Notes

   If possible it'll be passed to the Connector */
  Notes?: string | undefined;
  /** Room List that need to be booked */
  RoomsToBook: RoomToBook[];
  /** Extra List that need to be booked

   This is the general Extras and it'll be added only to the first booking also if the Connector needs 1 Booking per Room

   If the Connector needs 1 Booking per Room you can specify the Extras also to the RoomsToBook in order to split the extras on the Rooms */
  ExtrasToBook?: ExtraToBook[] | undefined;
  /** Credit Card infos to process the Booking */
  CreditCardPayment?: CreditCardInfo | undefined;
  /** Travel Company Data (who sell) */
  TravelCompany?: TravelCompany | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: HotelBookInputCustomData | undefined;
}

export class RoomToBook implements IRoomToBook {
  /** Room Id to be booked */
  RoomId?: string | undefined;
  /** Extra List that need to be booked
   If the Connector needs 1 Booking per Room the extra will be attached to the correct Booking
   If the Connector don't provide a functionality to split the extras on the Room all the Extras will be passed in the mail list */
  ExtrasToBook?: ExtraToBook[] | undefined;
  /** Pax List of the Room */
  Paxes?: PaxBook[] | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: RoomToBookCustomData | undefined;

  constructor(data?: IRoomToBook) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.RoomId = _data["RoomId"];
      if (Array.isArray(_data["ExtrasToBook"])) {
        this.ExtrasToBook = [] as any;
        for (let item of _data["ExtrasToBook"])
          this.ExtrasToBook!.push(ExtraToBook.fromJS(item));
      }
      if (Array.isArray(_data["Paxes"])) {
        this.Paxes = [] as any;
        for (let item of _data["Paxes"])
          this.Paxes!.push(PaxBook.fromJS(item));
      }
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? RoomToBookCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): RoomToBook {
    data = typeof data === 'object' ? data : {};
    let result = new RoomToBook();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["RoomId"] = this.RoomId;
    if (Array.isArray(this.ExtrasToBook)) {
      data["ExtrasToBook"] = [];
      for (let item of this.ExtrasToBook)
        data["ExtrasToBook"].push(item.toJSON());
    }
    if (Array.isArray(this.Paxes)) {
      data["Paxes"] = [];
      for (let item of this.Paxes)
        data["Paxes"].push(item.toJSON());
    }
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    return data;
  }
}

export interface IRoomToBook {
  /** Room Id to be booked */
  RoomId?: string | undefined;
  /** Extra List that need to be booked
   If the Connector needs 1 Booking per Room the extra will be attached to the correct Booking
   If the Connector don't provide a functionality to split the extras on the Room all the Extras will be passed in the mail list */
  ExtrasToBook?: ExtraToBook[] | undefined;
  /** Pax List of the Room */
  Paxes?: PaxBook[] | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: RoomToBookCustomData | undefined;
}

export class ExtraToBook extends PaxListRequest implements IExtraToBook {
  /** Name of the Extra */
  Name?: string | undefined;
  /** The Inventory Code - Id */
  InventoryCode?: string | undefined;
  /** Quantity of the Extra */
  Quantity?: number;
  /** Extra Date Book Start */
  DateToBookStart?: string | undefined;
  /** Extra Date Book End */
  DateToBookEnd?: string | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: ExtraToBookCustomData | undefined;

  constructor(data?: IExtraToBook) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Name = _data["Name"];
      this.InventoryCode = _data["InventoryCode"];
      this.Quantity = _data["Quantity"];
      this.DateToBookStart = _data["DateToBookStart"];
      this.DateToBookEnd = _data["DateToBookEnd"];
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? ExtraToBookCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): ExtraToBook {
    data = typeof data === 'object' ? data : {};
    let result = new ExtraToBook();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Name"] = this.Name;
    data["InventoryCode"] = this.InventoryCode;
    data["Quantity"] = this.Quantity;
    data["DateToBookStart"] = this.DateToBookStart;
    data["DateToBookEnd"] = this.DateToBookEnd;
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IExtraToBook extends IPaxListRequest {
  /** Name of the Extra */
  Name?: string | undefined;
  /** The Inventory Code - Id */
  InventoryCode?: string | undefined;
  /** Quantity of the Extra */
  Quantity?: number;
  /** Extra Date Book Start */
  DateToBookStart?: string | undefined;
  /** Extra Date Book End */
  DateToBookEnd?: string | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: ExtraToBookCustomData | undefined;
}

export abstract class ExtraToBookCustomData implements IExtraToBookCustomData {

  protected _discriminator: string;

  constructor(data?: IExtraToBookCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "ExtraToBookCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): ExtraToBookCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "OKKAMI") {
      let result = new OkkamiExtraToBookCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "HOTELBEDS") {
      let result = new HotelbedsExtraToBookCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'ExtraToBookCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IExtraToBookCustomData {
}

export class OkkamiExtraToBookCustomData extends ExtraToBookCustomData implements IOkkamiExtraToBookCustomData {
  /** Selected Options in string
   ES. "How many Children? 1 (+THB800)" */
  Options?: string | undefined;
  /** Total Amount for the current Extra */
  Total?: number | undefined;

  constructor(data?: IOkkamiExtraToBookCustomData) {
    super(data);
    this._discriminator = "OKKAMI";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Options = _data["Options"];
      this.Total = _data["Total"];
    }
  }

  static fromJS(data: any): OkkamiExtraToBookCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new OkkamiExtraToBookCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Options"] = this.Options;
    data["Total"] = this.Total;
    super.toJSON(data);
    return data;
  }
}

export interface IOkkamiExtraToBookCustomData extends IExtraToBookCustomData {
  /** Selected Options in string
   ES. "How many Children? 1 (+THB800)" */
  Options?: string | undefined;
  /** Total Amount for the current Extra */
  Total?: number | undefined;
}

export class HotelbedsExtraToBookCustomData extends ExtraToBookCustomData implements IHotelbedsExtraToBookCustomData {
  /** The Rate Key - From Avail */
  RateKey?: string | undefined;

  constructor(data?: IHotelbedsExtraToBookCustomData) {
    super(data);
    this._discriminator = "HOTELBEDS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.RateKey = _data["RateKey"];
    }
  }

  static fromJS(data: any): HotelbedsExtraToBookCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new HotelbedsExtraToBookCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["RateKey"] = this.RateKey;
    super.toJSON(data);
    return data;
  }
}

export interface IHotelbedsExtraToBookCustomData extends IExtraToBookCustomData {
  /** The Rate Key - From Avail */
  RateKey?: string | undefined;
}

export abstract class CustomerCustomDataOfExtraToBook implements ICustomerCustomDataOfExtraToBook {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfExtraToBook) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfExtraToBook";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfExtraToBook {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfExtraToBook' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfExtraToBook {
}

export class PaxDetails implements IPaxDetails {
  /** Pax Title - Sig. or other */
  PaxTitle?: string | undefined;
  /** Pax Gender */
  Gender?: EPaxGender;
  /** Pax First Name */
  FirstName?: string | undefined;
  /** Pax Middle Name - if any */
  MiddleName?: string | undefined;
  /** Pax Last Name */
  LastName?: string | undefined;
  /** Pax Emails */
  Emails?: Email[] | undefined;
  /** Pax Phone Numbers */
  PhoneNumbers?: Phone[] | undefined;
  /** Pax Documents */
  Documents?: PaxDocument[] | undefined;
  /** Pax Loyalty Cards */
  LoyaltyCards?: PaxLoyaltyCard[] | undefined;
  /** Pax Company */
  Company?: BusinessCompany | undefined;
  /** Pax Address */
  Address?: Address | undefined;
  /** Pax Birth Date */
  BirthDate!: string;

  constructor(data?: IPaxDetails) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.PaxTitle = _data["PaxTitle"];
      this.Gender = _data["Gender"];
      this.FirstName = _data["FirstName"];
      this.MiddleName = _data["MiddleName"];
      this.LastName = _data["LastName"];
      if (Array.isArray(_data["Emails"])) {
        this.Emails = [] as any;
        for (let item of _data["Emails"])
          this.Emails!.push(Email.fromJS(item));
      }
      if (Array.isArray(_data["PhoneNumbers"])) {
        this.PhoneNumbers = [] as any;
        for (let item of _data["PhoneNumbers"])
          this.PhoneNumbers!.push(Phone.fromJS(item));
      }
      if (Array.isArray(_data["Documents"])) {
        this.Documents = [] as any;
        for (let item of _data["Documents"])
          this.Documents!.push(PaxDocument.fromJS(item));
      }
      if (Array.isArray(_data["LoyaltyCards"])) {
        this.LoyaltyCards = [] as any;
        for (let item of _data["LoyaltyCards"])
          this.LoyaltyCards!.push(PaxLoyaltyCard.fromJS(item));
      }
      this.Company = _data["Company"] ? BusinessCompany.fromJS(_data["Company"]) : <any>undefined;
      this.Address = _data["Address"] ? Address.fromJS(_data["Address"]) : <any>undefined;
      this.BirthDate = _data["BirthDate"];
    }
  }

  static fromJS(data: any): PaxDetails {
    data = typeof data === 'object' ? data : {};
    let result = new PaxDetails();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["PaxTitle"] = this.PaxTitle;
    data["Gender"] = this.Gender;
    data["FirstName"] = this.FirstName;
    data["MiddleName"] = this.MiddleName;
    data["LastName"] = this.LastName;
    if (Array.isArray(this.Emails)) {
      data["Emails"] = [];
      for (let item of this.Emails)
        data["Emails"].push(item.toJSON());
    }
    if (Array.isArray(this.PhoneNumbers)) {
      data["PhoneNumbers"] = [];
      for (let item of this.PhoneNumbers)
        data["PhoneNumbers"].push(item.toJSON());
    }
    if (Array.isArray(this.Documents)) {
      data["Documents"] = [];
      for (let item of this.Documents)
        data["Documents"].push(item.toJSON());
    }
    if (Array.isArray(this.LoyaltyCards)) {
      data["LoyaltyCards"] = [];
      for (let item of this.LoyaltyCards)
        data["LoyaltyCards"].push(item.toJSON());
    }
    data["Company"] = this.Company ? this.Company.toJSON() : <any>undefined;
    data["Address"] = this.Address ? this.Address.toJSON() : <any>undefined;
    data["BirthDate"] = this.BirthDate;
    return data;
  }
}

export interface IPaxDetails {
  /** Pax Title - Sig. or other */
  PaxTitle?: string | undefined;
  /** Pax Gender */
  Gender?: EPaxGender;
  /** Pax First Name */
  FirstName?: string | undefined;
  /** Pax Middle Name - if any */
  MiddleName?: string | undefined;
  /** Pax Last Name */
  LastName?: string | undefined;
  /** Pax Emails */
  Emails?: Email[] | undefined;
  /** Pax Phone Numbers */
  PhoneNumbers?: Phone[] | undefined;
  /** Pax Documents */
  Documents?: PaxDocument[] | undefined;
  /** Pax Loyalty Cards */
  LoyaltyCards?: PaxLoyaltyCard[] | undefined;
  /** Pax Company */
  Company?: BusinessCompany | undefined;
  /** Pax Address */
  Address?: Address | undefined;
  /** Pax Birth Date */
  BirthDate: string;
}

export class PaxBook extends PaxDetails implements IPaxBook {
  /** Define if the Pax is the leader of the Book reservation

   If the Connector needs 1 Booking per Room - The First Room Leader Pax will be passed to all the Book reservations as Leader */
  IsLeader!: boolean;
  /** Customer Profile Id

   If connector support (Sabre SynXis for example) it'll be passed to manage CRM insert/update over the Connector Systems */
  ProfileId?: string | undefined;

  constructor(data?: IPaxBook) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.IsLeader = _data["IsLeader"];
      this.ProfileId = _data["ProfileId"];
    }
  }

  static fromJS(data: any): PaxBook {
    data = typeof data === 'object' ? data : {};
    let result = new PaxBook();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["IsLeader"] = this.IsLeader;
    data["ProfileId"] = this.ProfileId;
    super.toJSON(data);
    return data;
  }
}

export interface IPaxBook extends IPaxDetails {
  /** Define if the Pax is the leader of the Book reservation

   If the Connector needs 1 Booking per Room - The First Room Leader Pax will be passed to all the Book reservations as Leader */
  IsLeader: boolean;
  /** Customer Profile Id

   If connector support (Sabre SynXis for example) it'll be passed to manage CRM insert/update over the Connector Systems */
  ProfileId?: string | undefined;
}

export abstract class CustomerCustomDataOfPaxBook implements ICustomerCustomDataOfPaxBook {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfPaxBook) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfPaxBook";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfPaxBook {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfPaxBook' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfPaxBook {
}

export enum EPaxGender {
  MALE = "MALE",
  FEMALE = "FEMALE",
}

export class PaxDocument implements IPaxDocument {
  /** Pax Gender */
  Type?: EDocumentType;
  /** Document First Name */
  FirstName?: string | undefined;
  /** Document Last Name */
  LastName?: string | undefined;
  /** Document Number */
  Number?: string | undefined;
  /** Document Issue ISO Code */
  IssueIsoCode?: string | undefined;
  /** Document Nationality Country ISO Code */
  NationalityIsoCode?: string | undefined;
  /** Document Expiration */
  ExpirationDate?: string | undefined;

  constructor(data?: IPaxDocument) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Type = _data["Type"];
      this.FirstName = _data["FirstName"];
      this.LastName = _data["LastName"];
      this.Number = _data["Number"];
      this.IssueIsoCode = _data["IssueIsoCode"];
      this.NationalityIsoCode = _data["NationalityIsoCode"];
      this.ExpirationDate = _data["ExpirationDate"];
    }
  }

  static fromJS(data: any): PaxDocument {
    data = typeof data === 'object' ? data : {};
    let result = new PaxDocument();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Type"] = this.Type;
    data["FirstName"] = this.FirstName;
    data["LastName"] = this.LastName;
    data["Number"] = this.Number;
    data["IssueIsoCode"] = this.IssueIsoCode;
    data["NationalityIsoCode"] = this.NationalityIsoCode;
    data["ExpirationDate"] = this.ExpirationDate;
    return data;
  }
}

export interface IPaxDocument {
  /** Pax Gender */
  Type?: EDocumentType;
  /** Document First Name */
  FirstName?: string | undefined;
  /** Document Last Name */
  LastName?: string | undefined;
  /** Document Number */
  Number?: string | undefined;
  /** Document Issue ISO Code */
  IssueIsoCode?: string | undefined;
  /** Document Nationality Country ISO Code */
  NationalityIsoCode?: string | undefined;
  /** Document Expiration */
  ExpirationDate?: string | undefined;
}

export enum EDocumentType {
  ID = "ID",
  PASSPORT = "PASSPORT",
  FISCAL_CODE = "FISCAL_CODE",
}

export class PaxLoyaltyCard implements IPaxLoyaltyCard {
  /** Card Membership Id */
  MembershipId?: string | undefined;
  /** Card Program Code - If not Iata and need a Card loyalty program code */
  ProgramId?: string | undefined;
  /** Iata Code of Carrier/Airport/City or whatever if is a Iata related Card */
  IataCode?: string | undefined;
  /** Card Expiration Date */
  CardExpirationDate?: string | undefined;

  constructor(data?: IPaxLoyaltyCard) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.MembershipId = _data["MembershipId"];
      this.ProgramId = _data["ProgramId"];
      this.IataCode = _data["IataCode"];
      this.CardExpirationDate = _data["CardExpirationDate"];
    }
  }

  static fromJS(data: any): PaxLoyaltyCard {
    data = typeof data === 'object' ? data : {};
    let result = new PaxLoyaltyCard();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["MembershipId"] = this.MembershipId;
    data["ProgramId"] = this.ProgramId;
    data["IataCode"] = this.IataCode;
    data["CardExpirationDate"] = this.CardExpirationDate;
    return data;
  }
}

export interface IPaxLoyaltyCard {
  /** Card Membership Id */
  MembershipId?: string | undefined;
  /** Card Program Code - If not Iata and need a Card loyalty program code */
  ProgramId?: string | undefined;
  /** Iata Code of Carrier/Airport/City or whatever if is a Iata related Card */
  IataCode?: string | undefined;
  /** Card Expiration Date */
  CardExpirationDate?: string | undefined;
}

export class BaseCompany implements IBaseCompany {
  /** Company Name */
  Name?: string | undefined;
  /** Address Lines */
  Addresses?: Address[] | undefined;
  /** Vat Number */
  VatNumber?: string | undefined;
  /** Company Phone Numbers */
  PhoneNumbers?: Phone[] | undefined;
  /** Company Emails */
  Emails?: Email[] | undefined;

  constructor(data?: IBaseCompany) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Name = _data["Name"];
      if (Array.isArray(_data["Addresses"])) {
        this.Addresses = [] as any;
        for (let item of _data["Addresses"])
          this.Addresses!.push(Address.fromJS(item));
      }
      this.VatNumber = _data["VatNumber"];
      if (Array.isArray(_data["PhoneNumbers"])) {
        this.PhoneNumbers = [] as any;
        for (let item of _data["PhoneNumbers"])
          this.PhoneNumbers!.push(Phone.fromJS(item));
      }
      if (Array.isArray(_data["Emails"])) {
        this.Emails = [] as any;
        for (let item of _data["Emails"])
          this.Emails!.push(Email.fromJS(item));
      }
    }
  }

  static fromJS(data: any): BaseCompany {
    data = typeof data === 'object' ? data : {};
    let result = new BaseCompany();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Name"] = this.Name;
    if (Array.isArray(this.Addresses)) {
      data["Addresses"] = [];
      for (let item of this.Addresses)
        data["Addresses"].push(item.toJSON());
    }
    data["VatNumber"] = this.VatNumber;
    if (Array.isArray(this.PhoneNumbers)) {
      data["PhoneNumbers"] = [];
      for (let item of this.PhoneNumbers)
        data["PhoneNumbers"].push(item.toJSON());
    }
    if (Array.isArray(this.Emails)) {
      data["Emails"] = [];
      for (let item of this.Emails)
        data["Emails"].push(item.toJSON());
    }
    return data;
  }
}

export interface IBaseCompany {
  /** Company Name */
  Name?: string | undefined;
  /** Address Lines */
  Addresses?: Address[] | undefined;
  /** Vat Number */
  VatNumber?: string | undefined;
  /** Company Phone Numbers */
  PhoneNumbers?: Phone[] | undefined;
  /** Company Emails */
  Emails?: Email[] | undefined;
}

export class BusinessCompany extends BaseCompany implements IBusinessCompany {

  constructor(data?: IBusinessCompany) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
  }

  static fromJS(data: any): BusinessCompany {
    data = typeof data === 'object' ? data : {};
    let result = new BusinessCompany();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    super.toJSON(data);
    return data;
  }
}

export interface IBusinessCompany extends IBaseCompany {
}

export abstract class RoomToBookCustomData implements IRoomToBookCustomData {

  protected _discriminator: string;

  constructor(data?: IRoomToBookCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "RoomToBookCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): RoomToBookCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "BOOKING_DOT_COM") {
      let result = new BookingDotComHotelBookRoomCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "SABRE_SYNXIS") {
      let result = new SabreSynXisRoomToBookCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "SANDALS") {
      let result = new SandalsRoomToBookCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "IHG_GRS") {
      let result = new IHGRoomToBookCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "CREOLE") {
      let result = new CreoleRoomToBookCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "HOTELBEDS") {
      let result = new HotelbedsRoomToBookCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'RoomToBookCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IRoomToBookCustomData {
}

export class BookingDotComHotelBookRoomCustomData extends RoomToBookCustomData implements IBookingDotComHotelBookRoomCustomData {
  /** REQUIRED - One or multiple block ids. One should use {block_quantities} to specify the quantity of blocks per block_ids that are passed. - example value 5555555_55555555_5_5_5 - depends on incremental_prices */
  Block_id?: string | undefined;
  /** A comma-separated list of add ons, given in same order as guest_quantities. Multiple add ons per item are semicolon-separated (%3B). The format of one add on is ADDON_{block_id}_{addon_id}:{price}.
   example value ADDON_55555555_55555555_5_5_5_170357653:4.00 */
  Addon_price?: string | undefined;
  /** A comma-separated list of bed preferences, given in same order as room_ids or block_ids, taking into account their quantities. Use 0 for no preference, 1 for default or 2 for alternative. Please note that it can not be guaranteed that the selected preference will be available.
   possible values 0, 1, 2 */
  Bed_preference?: number;
  /** An comma-separated list of preferred bed types, given in same order as room_ids or block_ids, taking into account their quantities. If only one bed type is supplied, it will apply to all rooms/blocks. Use 0 for no preference, 1 for single/twin beds, 2 for double beds. Please note that it can not be guaranteed that the selected preference will be available.
   possible values 0, 1, 2 */
  Bedtype_preference?: number;
  Block_quantity?: number;
  /** Comma-separated list of total prices for each supplied block_id, given in the same order as block_ids and block_quantities. */
  Incremental_price?: string | undefined;
  /** A comma-separated list of smoking preferences, given in same order as room_ids or block_ids, taking into account their quantities. If only one smoking preference is supplied, it applies to all rooms/blocks. Use 0 for no preference, 1 for non-smoking preferred, 2 for smoking preferred. Please note that it can not be guaranteed that the selected preference will be available.
   possible values -&gt; 0, 1, 2 */
  Smoking_preference?: number;

  constructor(data?: IBookingDotComHotelBookRoomCustomData) {
    super(data);
    this._discriminator = "BOOKING_DOT_COM";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Block_id = _data["block_id"];
      this.Addon_price = _data["addon_price"];
      this.Bed_preference = _data["bed_preference"];
      this.Bedtype_preference = _data["bedtype_preference"];
      this.Block_quantity = _data["block_quantity"];
      this.Incremental_price = _data["incremental_price"];
      this.Smoking_preference = _data["smoking_preference"];
    }
  }

  static fromJS(data: any): BookingDotComHotelBookRoomCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new BookingDotComHotelBookRoomCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["block_id"] = this.Block_id;
    data["addon_price"] = this.Addon_price;
    data["bed_preference"] = this.Bed_preference;
    data["bedtype_preference"] = this.Bedtype_preference;
    data["block_quantity"] = this.Block_quantity;
    data["incremental_price"] = this.Incremental_price;
    data["smoking_preference"] = this.Smoking_preference;
    super.toJSON(data);
    return data;
  }
}

export interface IBookingDotComHotelBookRoomCustomData extends IRoomToBookCustomData {
  /** REQUIRED - One or multiple block ids. One should use {block_quantities} to specify the quantity of blocks per block_ids that are passed. - example value 5555555_55555555_5_5_5 - depends on incremental_prices */
  Block_id?: string | undefined;
  /** A comma-separated list of add ons, given in same order as guest_quantities. Multiple add ons per item are semicolon-separated (%3B). The format of one add on is ADDON_{block_id}_{addon_id}:{price}.
   example value ADDON_55555555_55555555_5_5_5_170357653:4.00 */
  Addon_price?: string | undefined;
  /** A comma-separated list of bed preferences, given in same order as room_ids or block_ids, taking into account their quantities. Use 0 for no preference, 1 for default or 2 for alternative. Please note that it can not be guaranteed that the selected preference will be available.
   possible values 0, 1, 2 */
  Bed_preference?: number;
  /** An comma-separated list of preferred bed types, given in same order as room_ids or block_ids, taking into account their quantities. If only one bed type is supplied, it will apply to all rooms/blocks. Use 0 for no preference, 1 for single/twin beds, 2 for double beds. Please note that it can not be guaranteed that the selected preference will be available.
   possible values 0, 1, 2 */
  Bedtype_preference?: number;
  Block_quantity?: number;
  /** Comma-separated list of total prices for each supplied block_id, given in the same order as block_ids and block_quantities. */
  Incremental_price?: string | undefined;
  /** A comma-separated list of smoking preferences, given in same order as room_ids or block_ids, taking into account their quantities. If only one smoking preference is supplied, it applies to all rooms/blocks. Use 0 for no preference, 1 for non-smoking preferred, 2 for smoking preferred. Please note that it can not be guaranteed that the selected preference will be available.
   possible values -&gt; 0, 1, 2 */
  Smoking_preference?: number;
}

export class SabreSynXisRoomToBookCustomData extends RoomToBookCustomData implements ISabreSynXisRoomToBookCustomData {
  /** The RoomType Code - From Avail */
  RoomTypeCode?: string | undefined;
  /** The RatePlan Code - From Avail */
  RatePlanCode?: string | undefined;
  /** The RatePlan Id - From Avail
   Pass this value for Send a Reservation with a Corporate/Promo Access Code */
  RatePlanId?: string | undefined;
  /** The Hotel Code - From Avail */
  HotelCode?: string | undefined;
  /** The Chain Code - From Avail */
  ChainCode?: string | undefined;
  /** List of Special Request */
  SpecialRequests?: SpecialRequest[] | undefined;
  /** Coupon Code if any */
  CouponCode?: string | undefined;
  /** Group Code if any - same of the Avail */
  GroupCode?: string | undefined;

  constructor(data?: ISabreSynXisRoomToBookCustomData) {
    super(data);
    this._discriminator = "SABRE_SYNXIS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.RoomTypeCode = _data["RoomTypeCode"];
      this.RatePlanCode = _data["RatePlanCode"];
      this.RatePlanId = _data["RatePlanId"];
      this.HotelCode = _data["HotelCode"];
      this.ChainCode = _data["ChainCode"];
      if (Array.isArray(_data["SpecialRequests"])) {
        this.SpecialRequests = [] as any;
        for (let item of _data["SpecialRequests"])
          this.SpecialRequests!.push(SpecialRequest.fromJS(item));
      }
      this.CouponCode = _data["CouponCode"];
      this.GroupCode = _data["GroupCode"];
    }
  }

  static fromJS(data: any): SabreSynXisRoomToBookCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreSynXisRoomToBookCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["RoomTypeCode"] = this.RoomTypeCode;
    data["RatePlanCode"] = this.RatePlanCode;
    data["RatePlanId"] = this.RatePlanId;
    data["HotelCode"] = this.HotelCode;
    data["ChainCode"] = this.ChainCode;
    if (Array.isArray(this.SpecialRequests)) {
      data["SpecialRequests"] = [];
      for (let item of this.SpecialRequests)
        data["SpecialRequests"].push(item.toJSON());
    }
    data["CouponCode"] = this.CouponCode;
    data["GroupCode"] = this.GroupCode;
    super.toJSON(data);
    return data;
  }
}

export interface ISabreSynXisRoomToBookCustomData extends IRoomToBookCustomData {
  /** The RoomType Code - From Avail */
  RoomTypeCode?: string | undefined;
  /** The RatePlan Code - From Avail */
  RatePlanCode?: string | undefined;
  /** The RatePlan Id - From Avail
   Pass this value for Send a Reservation with a Corporate/Promo Access Code */
  RatePlanId?: string | undefined;
  /** The Hotel Code - From Avail */
  HotelCode?: string | undefined;
  /** The Chain Code - From Avail */
  ChainCode?: string | undefined;
  /** List of Special Request */
  SpecialRequests?: SpecialRequest[] | undefined;
  /** Coupon Code if any */
  CouponCode?: string | undefined;
  /** Group Code if any - same of the Avail */
  GroupCode?: string | undefined;
}

export class SpecialRequest implements ISpecialRequest {
  /** The SpecialRequest Code - Additional Information  */
  Code?: string | undefined;
  /** The SpecialRequest Description - Additional Information  */
  Description?: string | undefined;

  constructor(data?: ISpecialRequest) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Code = _data["Code"];
      this.Description = _data["Description"];
    }
  }

  static fromJS(data: any): SpecialRequest {
    data = typeof data === 'object' ? data : {};
    let result = new SpecialRequest();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Code"] = this.Code;
    data["Description"] = this.Description;
    return data;
  }
}

export interface ISpecialRequest {
  /** The SpecialRequest Code - Additional Information  */
  Code?: string | undefined;
  /** The SpecialRequest Description - Additional Information  */
  Description?: string | undefined;
}

export class SandalsRoomToBookCustomData extends RoomToBookCustomData implements ISandalsRoomToBookCustomData {
  /** Total Price - From Avail */
  QuotePrice?: string | undefined;

  constructor(data?: ISandalsRoomToBookCustomData) {
    super(data);
    this._discriminator = "SANDALS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.QuotePrice = _data["QuotePrice"];
    }
  }

  static fromJS(data: any): SandalsRoomToBookCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SandalsRoomToBookCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["QuotePrice"] = this.QuotePrice;
    super.toJSON(data);
    return data;
  }
}

export interface ISandalsRoomToBookCustomData extends IRoomToBookCustomData {
  /** Total Price - From Avail */
  QuotePrice?: string | undefined;
}

export class IHGRoomToBookCustomData extends RoomToBookCustomData implements IIHGRoomToBookCustomData {
  /** RatePlanCode to be booked */
  RatePlanCode?: string | undefined;
  /** IHG Product Code -&gt; returned from Avail in the ConnectorCustomData of the room */
  ProductCode?: string | undefined;
  /** Point and cash Options */
  PointAndCashOption?: BookPointAndCashOption | undefined;
  /** Quantity to be booked
   We use the Adults and child counts based on the first room */
  Quantity?: number;
  /** Guarantee Type returned on the RatePlanCustomData if is required and need to be passed during booking */
  GuaranteeType?: string | undefined;

  constructor(data?: IIHGRoomToBookCustomData) {
    super(data);
    this._discriminator = "IHG_GRS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.RatePlanCode = _data["RatePlanCode"];
      this.ProductCode = _data["ProductCode"];
      this.PointAndCashOption = _data["PointAndCashOption"] ? BookPointAndCashOption.fromJS(_data["PointAndCashOption"]) : <any>undefined;
      this.Quantity = _data["Quantity"];
      this.GuaranteeType = _data["GuaranteeType"];
    }
  }

  static fromJS(data: any): IHGRoomToBookCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new IHGRoomToBookCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["RatePlanCode"] = this.RatePlanCode;
    data["ProductCode"] = this.ProductCode;
    data["PointAndCashOption"] = this.PointAndCashOption ? this.PointAndCashOption.toJSON() : <any>undefined;
    data["Quantity"] = this.Quantity;
    data["GuaranteeType"] = this.GuaranteeType;
    super.toJSON(data);
    return data;
  }
}

export interface IIHGRoomToBookCustomData extends IRoomToBookCustomData {
  /** RatePlanCode to be booked */
  RatePlanCode?: string | undefined;
  /** IHG Product Code -&gt; returned from Avail in the ConnectorCustomData of the room */
  ProductCode?: string | undefined;
  /** Point and cash Options */
  PointAndCashOption?: BookPointAndCashOption | undefined;
  /** Quantity to be booked
   We use the Adults and child counts based on the first room */
  Quantity?: number;
  /** Guarantee Type returned on the RatePlanCustomData if is required and need to be passed during booking */
  GuaranteeType?: string | undefined;
}

/** Point and Cash IHG Booking Oprion */
export class BookPointAndCashOption implements IBookPointAndCashOption {
  /** IHG Offer Code -&gt; returned from Avail in the ConnectorCustomData PointsAndCashOptions of the room */
  OfferCode?: string | undefined;
  /** PaymentCash Amount if it's a book of PointsAndCashOptions with Loyalty Id -&gt; pass the value of CheckinCashCost */
  PaymentCash?: number | undefined;
  /** PaymentPoints Amount if it's a book of PointsAndCashOptions with Loyalty Id -&gt; pass the value of CheckinPointsCost */
  PaymentPoints?: number | undefined;

  constructor(data?: IBookPointAndCashOption) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.OfferCode = _data["OfferCode"];
      this.PaymentCash = _data["PaymentCash"];
      this.PaymentPoints = _data["PaymentPoints"];
    }
  }

  static fromJS(data: any): BookPointAndCashOption {
    data = typeof data === 'object' ? data : {};
    let result = new BookPointAndCashOption();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["OfferCode"] = this.OfferCode;
    data["PaymentCash"] = this.PaymentCash;
    data["PaymentPoints"] = this.PaymentPoints;
    return data;
  }
}

/** Point and Cash IHG Booking Oprion */
export interface IBookPointAndCashOption {
  /** IHG Offer Code -&gt; returned from Avail in the ConnectorCustomData PointsAndCashOptions of the room */
  OfferCode?: string | undefined;
  /** PaymentCash Amount if it's a book of PointsAndCashOptions with Loyalty Id -&gt; pass the value of CheckinCashCost */
  PaymentCash?: number | undefined;
  /** PaymentPoints Amount if it's a book of PointsAndCashOptions with Loyalty Id -&gt; pass the value of CheckinPointsCost */
  PaymentPoints?: number | undefined;
}

export class CreoleRoomToBookCustomData extends RoomToBookCustomData implements ICreoleRoomToBookCustomData {
  /** The RatePlan Code - From Avail */
  RatePlanCode?: string | undefined;

  constructor(data?: ICreoleRoomToBookCustomData) {
    super(data);
    this._discriminator = "CREOLE";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.RatePlanCode = _data["RatePlanCode"];
    }
  }

  static fromJS(data: any): CreoleRoomToBookCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new CreoleRoomToBookCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["RatePlanCode"] = this.RatePlanCode;
    super.toJSON(data);
    return data;
  }
}

export interface ICreoleRoomToBookCustomData extends IRoomToBookCustomData {
  /** The RatePlan Code - From Avail */
  RatePlanCode?: string | undefined;
}

export class HotelbedsRoomToBookCustomData extends RoomToBookCustomData implements IHotelbedsRoomToBookCustomData {
  /** The Rate Key - From Avail */
  RateKey?: string | undefined;

  constructor(data?: IHotelbedsRoomToBookCustomData) {
    super(data);
    this._discriminator = "HOTELBEDS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.RateKey = _data["RateKey"];
    }
  }

  static fromJS(data: any): HotelbedsRoomToBookCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new HotelbedsRoomToBookCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["RateKey"] = this.RateKey;
    super.toJSON(data);
    return data;
  }
}

export interface IHotelbedsRoomToBookCustomData extends IRoomToBookCustomData {
  /** The Rate Key - From Avail */
  RateKey?: string | undefined;
}

export abstract class CustomerCustomDataOfRoomToBook implements ICustomerCustomDataOfRoomToBook {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfRoomToBook) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfRoomToBook";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfRoomToBook {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfRoomToBook' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfRoomToBook {
}

export class CreditCardInfo implements ICreditCardInfo {
  /** Credit Card Holder Name

   If it's not set up it will be calculated with CardHolderLastName + CardHolderFirstName */
  CardHolderName?: string | undefined;
  /** Credit Card Holder FirstName

   Used by (SABRE) that needs First and Last name divided
   Other connectors use the full CardHolderName that will be calculated from CardHolderLastName + CardHolderFirstName if it's not set up */
  CardHolderFirstName?: string | undefined;
  /** Card Holder LastName

   Used by (SABRE) that needs First and Last name divided
   Other connectors use the full CardHolderName that will be calculated from CardHolderLastName + CardHolderFirstName if it's not set up */
  CardHolderLastName?: string | undefined;
  /** Credit Card Type */
  CreditCardType?: ECreditCardType;
  /** Credit Card Number */
  CreditCardNumber?: string | undefined;
  /** Credit Card CVV */
  CreditCardCvv?: string | undefined;
  /** Credit Card Expiration Date */
  ExpireDate?: string;
  /** Credit Card Start Date

   Used for Credit Card as AIR_PLUS or UATP */
  StartDate?: string | undefined;
  /** Credit Card Issue Number

   Used for Credit Card as AIR_PLUS or UATP */
  IssueNumber?: string | undefined;

  constructor(data?: ICreditCardInfo) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.CardHolderName = _data["CardHolderName"];
      this.CardHolderFirstName = _data["CardHolderFirstName"];
      this.CardHolderLastName = _data["CardHolderLastName"];
      this.CreditCardType = _data["CreditCardType"];
      this.CreditCardNumber = _data["CreditCardNumber"];
      this.CreditCardCvv = _data["CreditCardCvv"];
      this.ExpireDate = _data["ExpireDate"];
      this.StartDate = _data["StartDate"];
      this.IssueNumber = _data["IssueNumber"];
    }
  }

  static fromJS(data: any): CreditCardInfo {
    data = typeof data === 'object' ? data : {};
    let result = new CreditCardInfo();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CardHolderName"] = this.CardHolderName;
    data["CardHolderFirstName"] = this.CardHolderFirstName;
    data["CardHolderLastName"] = this.CardHolderLastName;
    data["CreditCardType"] = this.CreditCardType;
    data["CreditCardNumber"] = this.CreditCardNumber;
    data["CreditCardCvv"] = this.CreditCardCvv;
    data["ExpireDate"] = this.ExpireDate;
    data["StartDate"] = this.StartDate;
    data["IssueNumber"] = this.IssueNumber;
    return data;
  }
}

export interface ICreditCardInfo {
  /** Credit Card Holder Name

   If it's not set up it will be calculated with CardHolderLastName + CardHolderFirstName */
  CardHolderName?: string | undefined;
  /** Credit Card Holder FirstName

   Used by (SABRE) that needs First and Last name divided
   Other connectors use the full CardHolderName that will be calculated from CardHolderLastName + CardHolderFirstName if it's not set up */
  CardHolderFirstName?: string | undefined;
  /** Card Holder LastName

   Used by (SABRE) that needs First and Last name divided
   Other connectors use the full CardHolderName that will be calculated from CardHolderLastName + CardHolderFirstName if it's not set up */
  CardHolderLastName?: string | undefined;
  /** Credit Card Type */
  CreditCardType?: ECreditCardType;
  /** Credit Card Number */
  CreditCardNumber?: string | undefined;
  /** Credit Card CVV */
  CreditCardCvv?: string | undefined;
  /** Credit Card Expiration Date */
  ExpireDate?: string;
  /** Credit Card Start Date

   Used for Credit Card as AIR_PLUS or UATP */
  StartDate?: string | undefined;
  /** Credit Card Issue Number

   Used for Credit Card as AIR_PLUS or UATP */
  IssueNumber?: string | undefined;
}

export class TravelCompany extends BaseCompany implements ITravelCompany {

  constructor(data?: ITravelCompany) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
  }

  static fromJS(data: any): TravelCompany {
    data = typeof data === 'object' ? data : {};
    let result = new TravelCompany();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    super.toJSON(data);
    return data;
  }
}

export interface ITravelCompany extends IBaseCompany {
}

export abstract class HotelBookInputCustomData implements IHotelBookInputCustomData {

  protected _discriminator: string;

  constructor(data?: IHotelBookInputCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "HotelBookInputCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): HotelBookInputCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "BOOKING_DOT_COM") {
      let result = new BookingDotComHotelBookInputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "SABRE_SYNXIS") {
      let result = new SabreSynXisHotelBookInputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "CREOLE") {
      let result = new CreoleHotelBookInputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "SABRE_CSL") {
      let result = new SabreCSLHotelBookInputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "SABRE") {
      let result = new SabreHotelBookInputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "IHG_GRS") {
      let result = new IHGHotelBookInputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "OKKAMI") {
      let result = new OkkamiHotelBookInputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "HOTELBEDS") {
      let result = new HotelbedsHotelBookInputCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'HotelBookInputCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IHotelBookInputCustomData {
}

export class BookingDotComHotelBookInputCustomData extends HotelBookInputCustomData implements IBookingDotComHotelBookInputCustomData {
  /** REQUIRED - Telephone number of the booker. (Array) - example value +00000000000 */
  Booker_telephone?: string | undefined;
  /** REQUIRED - Email address of the booker. - example value john.smith@booking.com */
  Booker_email?: string | undefined;
  /** REQUIRED - The affiliate id for which this booking should be processed. It may be overridden by {partner_affiliate_id}. */
  Affiliate_id?: number;
  /** REQUIRED - example value it */
  Booker_country?: string | undefined;
  /** REQUIRED - Id of the hotel where the booked blocks are. Only one id may be specified per /processBooking endpoint.
   */
  Hotel_id?: number;
  /** The affiliate label information, that may be added to the booking during processing. One can then read it back in /bookingDetails. */
  Affiliate_label?: string | undefined;
  /** Street address of the booker. To determine if the address is required, use {extras=address_required} in /blockAvailability */
  Booker_address?: string | undefined;
  /** City of the booker. */
  Booker_city?: string | undefined;
  /** Company of the booker. */
  Booker_company?: string | undefined;
  /** First name of the booker (up to 255 characters). */
  Booker_firstname?: string | undefined;
  /** IP address of the booker. It is used to determine guest country. It may be overridden by {i_am_from}. It supports the IPv4 format. */
  Booker_ip?: string | undefined;
  /** Language used by the booker to make the booking. (en) */
  Booker_language?: string | undefined;
  /** Last name of the booker (up to 255 characters). */
  Booker_lastname?: string | undefined;
  /** Zip code of the booker. */
  Booker_zip?: string | undefined;
  /** Name of the credit card holder. */
  Cc_cardholder?: string | undefined;
  /** Three digit validation code of the credit card. */
  Cc_cvc?: string | undefined;
  /** Expiry date of the credit card. Please note that only the year and month will be used and the day number will be ignored. example value 0000-00-00 */
  Cc_expiration_date?: string | undefined;
  /** Number of the credit card. */
  Cc_number?: string | undefined;
  /** Type of the credit card. It may be one of 1, 2, 3 or one of the credit card types accepted by the booked hotel. Also see the /paymentTypes endpoint. */
  Cc_type?: number;
  /** Optional remarks from the guest. */
  Comments?: string | undefined;
  /** Currency used for direct payments may be specified here. */
  Currency?: string | undefined;
  /** Specify here what extra items of the result should be included. See the endpoint description for more detailed information about each extra. */
  Extras?: string | undefined;
  /** Allows partners to forward the booker's user agent. This information is stored into the transaction for the record. */
  Forwarded_user_agent?: string | undefined;
  /** Guests' approximate hour of arrival to the hotel on the {checkin} date. Allowed values are from 0 (00:00 - 01:00) to 25 (01:00 - 02:00 (the next day)). This time should be within the hotel reception hours, or will be ignored otherwise with a warning appended to guestd comments.
   possible values 0, ... , 25 */
  Hour_of_arrival?: string | undefined;
  /** Use this to see predictions of booker's next destinations. The supplied number tells how many destinations should be showed at most. */
  Next_trips?: number;
  /** Specify here the options for this request. See the endpoint description for more detailed information about each option.
   possible values -&gt; use_guest_quantities_for_charges, allow_past, front_desk_24h, use_booker_country, booker_mailinglist_signup */
  Options?: string | undefined;
  /** Unique id that identifies the request from client point of view */
  Request_id?: string | undefined;
  /** Enable bookings on test hotels (useful for debugging). Note: don't use this setting for making test bookings on live hotels!
   possible values -&gt; 0, 1 */
  Show_test?: number;
  /** Check all input parameters and availability without making a real reservation. This is useful for debugging, all the booking steps prior to making the reservation will take place The inventory won't be modified and no transaction_id will be returned.
   possible values -&gt; 0, 1 */
  Test_mode?: number;
  /** Booker's choice of travel purpose. It may be 'business' or 'leisure'.
   possible values -&gt; business, leisure */
  Travel_purpose?: string | undefined;

  constructor(data?: IBookingDotComHotelBookInputCustomData) {
    super(data);
    this._discriminator = "BOOKING_DOT_COM";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Booker_telephone = _data["booker_telephone"];
      this.Booker_email = _data["booker_email"];
      this.Affiliate_id = _data["affiliate_id"];
      this.Booker_country = _data["booker_country"];
      this.Hotel_id = _data["hotel_id"];
      this.Affiliate_label = _data["affiliate_label"];
      this.Booker_address = _data["booker_address"];
      this.Booker_city = _data["booker_city"];
      this.Booker_company = _data["booker_company"];
      this.Booker_firstname = _data["booker_firstname"];
      this.Booker_ip = _data["booker_ip"];
      this.Booker_language = _data["booker_language"];
      this.Booker_lastname = _data["booker_lastname"];
      this.Booker_zip = _data["booker_zip"];
      this.Cc_cardholder = _data["cc_cardholder"];
      this.Cc_cvc = _data["cc_cvc"];
      this.Cc_expiration_date = _data["cc_expiration_date"];
      this.Cc_number = _data["cc_number"];
      this.Cc_type = _data["cc_type"];
      this.Comments = _data["comments"];
      this.Currency = _data["currency"];
      this.Extras = _data["extras"];
      this.Forwarded_user_agent = _data["forwarded_user_agent"];
      this.Hour_of_arrival = _data["hour_of_arrival"];
      this.Next_trips = _data["next_trips"];
      this.Options = _data["options"];
      this.Request_id = _data["request_id"];
      this.Show_test = _data["show_test"];
      this.Test_mode = _data["test_mode"];
      this.Travel_purpose = _data["travel_purpose"];
    }
  }

  static fromJS(data: any): BookingDotComHotelBookInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new BookingDotComHotelBookInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["booker_telephone"] = this.Booker_telephone;
    data["booker_email"] = this.Booker_email;
    data["affiliate_id"] = this.Affiliate_id;
    data["booker_country"] = this.Booker_country;
    data["hotel_id"] = this.Hotel_id;
    data["affiliate_label"] = this.Affiliate_label;
    data["booker_address"] = this.Booker_address;
    data["booker_city"] = this.Booker_city;
    data["booker_company"] = this.Booker_company;
    data["booker_firstname"] = this.Booker_firstname;
    data["booker_ip"] = this.Booker_ip;
    data["booker_language"] = this.Booker_language;
    data["booker_lastname"] = this.Booker_lastname;
    data["booker_zip"] = this.Booker_zip;
    data["cc_cardholder"] = this.Cc_cardholder;
    data["cc_cvc"] = this.Cc_cvc;
    data["cc_expiration_date"] = this.Cc_expiration_date;
    data["cc_number"] = this.Cc_number;
    data["cc_type"] = this.Cc_type;
    data["comments"] = this.Comments;
    data["currency"] = this.Currency;
    data["extras"] = this.Extras;
    data["forwarded_user_agent"] = this.Forwarded_user_agent;
    data["hour_of_arrival"] = this.Hour_of_arrival;
    data["next_trips"] = this.Next_trips;
    data["options"] = this.Options;
    data["request_id"] = this.Request_id;
    data["show_test"] = this.Show_test;
    data["test_mode"] = this.Test_mode;
    data["travel_purpose"] = this.Travel_purpose;
    super.toJSON(data);
    return data;
  }
}

export interface IBookingDotComHotelBookInputCustomData extends IHotelBookInputCustomData {
  /** REQUIRED - Telephone number of the booker. (Array) - example value +00000000000 */
  Booker_telephone?: string | undefined;
  /** REQUIRED - Email address of the booker. - example value john.smith@booking.com */
  Booker_email?: string | undefined;
  /** REQUIRED - The affiliate id for which this booking should be processed. It may be overridden by {partner_affiliate_id}. */
  Affiliate_id?: number;
  /** REQUIRED - example value it */
  Booker_country?: string | undefined;
  /** REQUIRED - Id of the hotel where the booked blocks are. Only one id may be specified per /processBooking endpoint.
   */
  Hotel_id?: number;
  /** The affiliate label information, that may be added to the booking during processing. One can then read it back in /bookingDetails. */
  Affiliate_label?: string | undefined;
  /** Street address of the booker. To determine if the address is required, use {extras=address_required} in /blockAvailability */
  Booker_address?: string | undefined;
  /** City of the booker. */
  Booker_city?: string | undefined;
  /** Company of the booker. */
  Booker_company?: string | undefined;
  /** First name of the booker (up to 255 characters). */
  Booker_firstname?: string | undefined;
  /** IP address of the booker. It is used to determine guest country. It may be overridden by {i_am_from}. It supports the IPv4 format. */
  Booker_ip?: string | undefined;
  /** Language used by the booker to make the booking. (en) */
  Booker_language?: string | undefined;
  /** Last name of the booker (up to 255 characters). */
  Booker_lastname?: string | undefined;
  /** Zip code of the booker. */
  Booker_zip?: string | undefined;
  /** Name of the credit card holder. */
  Cc_cardholder?: string | undefined;
  /** Three digit validation code of the credit card. */
  Cc_cvc?: string | undefined;
  /** Expiry date of the credit card. Please note that only the year and month will be used and the day number will be ignored. example value 0000-00-00 */
  Cc_expiration_date?: string | undefined;
  /** Number of the credit card. */
  Cc_number?: string | undefined;
  /** Type of the credit card. It may be one of 1, 2, 3 or one of the credit card types accepted by the booked hotel. Also see the /paymentTypes endpoint. */
  Cc_type?: number;
  /** Optional remarks from the guest. */
  Comments?: string | undefined;
  /** Currency used for direct payments may be specified here. */
  Currency?: string | undefined;
  /** Specify here what extra items of the result should be included. See the endpoint description for more detailed information about each extra. */
  Extras?: string | undefined;
  /** Allows partners to forward the booker's user agent. This information is stored into the transaction for the record. */
  Forwarded_user_agent?: string | undefined;
  /** Guests' approximate hour of arrival to the hotel on the {checkin} date. Allowed values are from 0 (00:00 - 01:00) to 25 (01:00 - 02:00 (the next day)). This time should be within the hotel reception hours, or will be ignored otherwise with a warning appended to guestd comments.
   possible values 0, ... , 25 */
  Hour_of_arrival?: string | undefined;
  /** Use this to see predictions of booker's next destinations. The supplied number tells how many destinations should be showed at most. */
  Next_trips?: number;
  /** Specify here the options for this request. See the endpoint description for more detailed information about each option.
   possible values -&gt; use_guest_quantities_for_charges, allow_past, front_desk_24h, use_booker_country, booker_mailinglist_signup */
  Options?: string | undefined;
  /** Unique id that identifies the request from client point of view */
  Request_id?: string | undefined;
  /** Enable bookings on test hotels (useful for debugging). Note: don't use this setting for making test bookings on live hotels!
   possible values -&gt; 0, 1 */
  Show_test?: number;
  /** Check all input parameters and availability without making a real reservation. This is useful for debugging, all the booking steps prior to making the reservation will take place The inventory won't be modified and no transaction_id will be returned.
   possible values -&gt; 0, 1 */
  Test_mode?: number;
  /** Booker's choice of travel purpose. It may be 'business' or 'leisure'.
   possible values -&gt; business, leisure */
  Travel_purpose?: string | undefined;
}

export class SabreSynXisHotelBookInputCustomData extends HotelBookInputCustomData implements ISabreSynXisHotelBookInputCustomData {
  /** The Sub Source Code passed to Sabre in the POS
   If null or empty it'll use the default value sent by Sabre related to the Login Test/Production */
  ChannelSubSourceCode?: string | undefined;
  /** The Booking Status

   1Phase book -&gt; Just use COMMIT

   2Phase book -&gt; INITIATE and then CONFIRM or IGNORE */
  SabreBookStatus?: ESabreBookStatus | undefined;
  /** The Sabre Booking Reference */
  SabreBookingReference?: SabreBookingReference | undefined;
  /** Transportation Infos - Arrival By */
  ArrivalBy?: TransportInfo | undefined;
  /** Transportation Infos - Departure By */
  DepartureBy?: TransportInfo | undefined;
  /** Send the Confirmation Email to the customer from SynXis with the TemplateName specified
   if it's not set up we'll not set the node on the Sabre SynXis message so no mail will be sent */
  SendConfirmationEmailTemplate?: string | undefined;
  /** Send a New or Modified Reservation with Travel Agency ID Numbers */
  AgencyIata?: string | undefined;

  constructor(data?: ISabreSynXisHotelBookInputCustomData) {
    super(data);
    if (!data) {
      this.SabreBookStatus = ESabreBookStatus.COMMIT;
    }
    this._discriminator = "SABRE_SYNXIS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ChannelSubSourceCode = _data["ChannelSubSourceCode"];
      this.SabreBookStatus = _data["SabreBookStatus"] !== undefined ? _data["SabreBookStatus"] : ESabreBookStatus.COMMIT;
      this.SabreBookingReference = _data["SabreBookingReference"] ? SabreBookingReference.fromJS(_data["SabreBookingReference"]) : <any>undefined;
      this.ArrivalBy = _data["ArrivalBy"] ? TransportInfo.fromJS(_data["ArrivalBy"]) : <any>undefined;
      this.DepartureBy = _data["DepartureBy"] ? TransportInfo.fromJS(_data["DepartureBy"]) : <any>undefined;
      this.SendConfirmationEmailTemplate = _data["SendConfirmationEmailTemplate"];
      this.AgencyIata = _data["AgencyIata"];
    }
  }

  static fromJS(data: any): SabreSynXisHotelBookInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreSynXisHotelBookInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ChannelSubSourceCode"] = this.ChannelSubSourceCode;
    data["SabreBookStatus"] = this.SabreBookStatus;
    data["SabreBookingReference"] = this.SabreBookingReference ? this.SabreBookingReference.toJSON() : <any>undefined;
    data["ArrivalBy"] = this.ArrivalBy ? this.ArrivalBy.toJSON() : <any>undefined;
    data["DepartureBy"] = this.DepartureBy ? this.DepartureBy.toJSON() : <any>undefined;
    data["SendConfirmationEmailTemplate"] = this.SendConfirmationEmailTemplate;
    data["AgencyIata"] = this.AgencyIata;
    super.toJSON(data);
    return data;
  }
}

export interface ISabreSynXisHotelBookInputCustomData extends IHotelBookInputCustomData {
  /** The Sub Source Code passed to Sabre in the POS
   If null or empty it'll use the default value sent by Sabre related to the Login Test/Production */
  ChannelSubSourceCode?: string | undefined;
  /** The Booking Status

   1Phase book -&gt; Just use COMMIT

   2Phase book -&gt; INITIATE and then CONFIRM or IGNORE */
  SabreBookStatus?: ESabreBookStatus | undefined;
  /** The Sabre Booking Reference */
  SabreBookingReference?: SabreBookingReference | undefined;
  /** Transportation Infos - Arrival By */
  ArrivalBy?: TransportInfo | undefined;
  /** Transportation Infos - Departure By */
  DepartureBy?: TransportInfo | undefined;
  /** Send the Confirmation Email to the customer from SynXis with the TemplateName specified
   if it's not set up we'll not set the node on the Sabre SynXis message so no mail will be sent */
  SendConfirmationEmailTemplate?: string | undefined;
  /** Send a New or Modified Reservation with Travel Agency ID Numbers */
  AgencyIata?: string | undefined;
}

export enum ESabreBookStatus {
  INITIATE = "INITIATE",
  CONFIRM = "CONFIRM",
  COMMIT = "COMMIT",
  IGNORE = "IGNORE",
}

export class TransportInfo implements ITransportInfo {
  /** The Transportation Id

   You can use any value */
  TransportId?: string | undefined;
  /** If the transportation is a Flight */
  IsFlight?: boolean;
  /** Location code, for example the IATA of the Airport in case of Flight */
  LocationCode?: string | undefined;
  /** DateTime of the transportation */
  Time?: string;

  constructor(data?: ITransportInfo) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.TransportId = _data["TransportId"];
      this.IsFlight = _data["IsFlight"];
      this.LocationCode = _data["LocationCode"];
      this.Time = _data["Time"];
    }
  }

  static fromJS(data: any): TransportInfo {
    data = typeof data === 'object' ? data : {};
    let result = new TransportInfo();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["TransportId"] = this.TransportId;
    data["IsFlight"] = this.IsFlight;
    data["LocationCode"] = this.LocationCode;
    data["Time"] = this.Time;
    return data;
  }
}

export interface ITransportInfo {
  /** The Transportation Id

   You can use any value */
  TransportId?: string | undefined;
  /** If the transportation is a Flight */
  IsFlight?: boolean;
  /** Location code, for example the IATA of the Airport in case of Flight */
  LocationCode?: string | undefined;
  /** DateTime of the transportation */
  Time?: string;
}

export class CreoleHotelBookInputCustomData extends HotelBookInputCustomData implements ICreoleHotelBookInputCustomData {
  AmountAfterTax?: number;
  CurrencyCode?: string | undefined;
  BookingCode?: string | undefined;
  /** Nationality of the holder of the booking.
   Please note that the nationality of the holder will have to be consistent between all of the steps of the booking flow and that, consequently, you will have to set the nationality of the holder along the same value on the HotelAvailability request.
   This code follows the ISO-3166-1 standard, you may refer to the FAQ section for further information. */
  Nationality?: string | undefined;

  constructor(data?: ICreoleHotelBookInputCustomData) {
    super(data);
    this._discriminator = "CREOLE";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.AmountAfterTax = _data["AmountAfterTax"];
      this.CurrencyCode = _data["CurrencyCode"];
      this.BookingCode = _data["BookingCode"];
      this.Nationality = _data["Nationality"];
    }
  }

  static fromJS(data: any): CreoleHotelBookInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new CreoleHotelBookInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["AmountAfterTax"] = this.AmountAfterTax;
    data["CurrencyCode"] = this.CurrencyCode;
    data["BookingCode"] = this.BookingCode;
    data["Nationality"] = this.Nationality;
    super.toJSON(data);
    return data;
  }
}

export interface ICreoleHotelBookInputCustomData extends IHotelBookInputCustomData {
  AmountAfterTax?: number;
  CurrencyCode?: string | undefined;
  BookingCode?: string | undefined;
  /** Nationality of the holder of the booking.
   Please note that the nationality of the holder will have to be consistent between all of the steps of the booking flow and that, consequently, you will have to set the nationality of the holder along the same value on the HotelAvailability request.
   This code follows the ISO-3166-1 standard, you may refer to the FAQ section for further information. */
  Nationality?: string | undefined;
}

export class SabreCSLHotelBookInputCustomData extends HotelBookInputCustomData implements ISabreCSLHotelBookInputCustomData {
  /** The Booking Key is returned in the HotelPriceCheck API response and is a mandatory value to perform hotel booking. */
  BookingKey?: string | undefined;
  /** TicketType equivalent Sabre host command: 7TAW */
  TicketType?: string | undefined;
  /** Pseudo City Code */
  PCC?: string | undefined;
  /** OperatorSign equivalent Sabre host command: 7TAW/TEST */
  OperatorSign?: string | undefined;
  /** Ticket Time Limit */
  TicketTimeLimit?: string | undefined;
  /** The value of identifier can be 6,7, or 10 alphanumeric
   <!-- Equivalent Sabre host command: DK1111111 --> */
  CustomerNumber?: string | undefined;
  PreBookCrypticCommands?: string[] | undefined;
  PostBookCrypticCommands?: string[] | undefined;
  GuaranteeType?: string | undefined;

  constructor(data?: ISabreCSLHotelBookInputCustomData) {
    super(data);
    this._discriminator = "SABRE_CSL";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.BookingKey = _data["BookingKey"];
      this.TicketType = _data["TicketType"];
      this.PCC = _data["PCC"];
      this.OperatorSign = _data["OperatorSign"];
      this.TicketTimeLimit = _data["TicketTimeLimit"];
      this.CustomerNumber = _data["CustomerNumber"];
      if (Array.isArray(_data["PreBookCrypticCommands"])) {
        this.PreBookCrypticCommands = [] as any;
        for (let item of _data["PreBookCrypticCommands"])
          this.PreBookCrypticCommands!.push(item);
      }
      if (Array.isArray(_data["PostBookCrypticCommands"])) {
        this.PostBookCrypticCommands = [] as any;
        for (let item of _data["PostBookCrypticCommands"])
          this.PostBookCrypticCommands!.push(item);
      }
      this.GuaranteeType = _data["GuaranteeType"];
    }
  }

  static fromJS(data: any): SabreCSLHotelBookInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreCSLHotelBookInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["BookingKey"] = this.BookingKey;
    data["TicketType"] = this.TicketType;
    data["PCC"] = this.PCC;
    data["OperatorSign"] = this.OperatorSign;
    data["TicketTimeLimit"] = this.TicketTimeLimit;
    data["CustomerNumber"] = this.CustomerNumber;
    if (Array.isArray(this.PreBookCrypticCommands)) {
      data["PreBookCrypticCommands"] = [];
      for (let item of this.PreBookCrypticCommands)
        data["PreBookCrypticCommands"].push(item);
    }
    if (Array.isArray(this.PostBookCrypticCommands)) {
      data["PostBookCrypticCommands"] = [];
      for (let item of this.PostBookCrypticCommands)
        data["PostBookCrypticCommands"].push(item);
    }
    data["GuaranteeType"] = this.GuaranteeType;
    super.toJSON(data);
    return data;
  }
}

export interface ISabreCSLHotelBookInputCustomData extends IHotelBookInputCustomData {
  /** The Booking Key is returned in the HotelPriceCheck API response and is a mandatory value to perform hotel booking. */
  BookingKey?: string | undefined;
  /** TicketType equivalent Sabre host command: 7TAW */
  TicketType?: string | undefined;
  /** Pseudo City Code */
  PCC?: string | undefined;
  /** OperatorSign equivalent Sabre host command: 7TAW/TEST */
  OperatorSign?: string | undefined;
  /** Ticket Time Limit */
  TicketTimeLimit?: string | undefined;
  /** The value of identifier can be 6,7, or 10 alphanumeric
   <!-- Equivalent Sabre host command: DK1111111 --> */
  CustomerNumber?: string | undefined;
  PreBookCrypticCommands?: string[] | undefined;
  PostBookCrypticCommands?: string[] | undefined;
  GuaranteeType?: string | undefined;
}

export class SabreHotelBookInputCustomData extends HotelBookInputCustomData implements ISabreHotelBookInputCustomData {
  /** The Booking Key is returned in the HotelPriceCheck API response and is a mandatory value to perform hotel booking. */
  BookingKey?: string | undefined;
  /** TicketType equivalent Sabre host command: 7TAW */
  TicketType?: string | undefined;
  /** Pseudo City Code */
  PCC?: string | undefined;
  /** OperatorSign equivalent Sabre host command: 7TAW/TEST */
  OperatorSign?: string | undefined;
  /** Ticket Time Limit */
  TicketTimeLimit?: string | undefined;
  /** The value of identifier can be 6,7, or 10 alphanumeric
   <!-- Equivalent Sabre host command: DK1111111 --> */
  CustomerNumber?: string | undefined;
  MiscellaneousSegment?: MiscellaneousSegment | undefined;
  PreBookCrypticCommands?: string[] | undefined;
  PostBookCrypticCommands?: string[] | undefined;
  GuaranteeType?: string | undefined;

  constructor(data?: ISabreHotelBookInputCustomData) {
    super(data);
    this._discriminator = "SABRE";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.BookingKey = _data["BookingKey"];
      this.TicketType = _data["TicketType"];
      this.PCC = _data["PCC"];
      this.OperatorSign = _data["OperatorSign"];
      this.TicketTimeLimit = _data["TicketTimeLimit"];
      this.CustomerNumber = _data["CustomerNumber"];
      this.MiscellaneousSegment = _data["MiscellaneousSegment"] ? MiscellaneousSegment.fromJS(_data["MiscellaneousSegment"]) : <any>undefined;
      if (Array.isArray(_data["PreBookCrypticCommands"])) {
        this.PreBookCrypticCommands = [] as any;
        for (let item of _data["PreBookCrypticCommands"])
          this.PreBookCrypticCommands!.push(item);
      }
      if (Array.isArray(_data["PostBookCrypticCommands"])) {
        this.PostBookCrypticCommands = [] as any;
        for (let item of _data["PostBookCrypticCommands"])
          this.PostBookCrypticCommands!.push(item);
      }
      this.GuaranteeType = _data["GuaranteeType"];
    }
  }

  static fromJS(data: any): SabreHotelBookInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreHotelBookInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["BookingKey"] = this.BookingKey;
    data["TicketType"] = this.TicketType;
    data["PCC"] = this.PCC;
    data["OperatorSign"] = this.OperatorSign;
    data["TicketTimeLimit"] = this.TicketTimeLimit;
    data["CustomerNumber"] = this.CustomerNumber;
    data["MiscellaneousSegment"] = this.MiscellaneousSegment ? this.MiscellaneousSegment.toJSON() : <any>undefined;
    if (Array.isArray(this.PreBookCrypticCommands)) {
      data["PreBookCrypticCommands"] = [];
      for (let item of this.PreBookCrypticCommands)
        data["PreBookCrypticCommands"].push(item);
    }
    if (Array.isArray(this.PostBookCrypticCommands)) {
      data["PostBookCrypticCommands"] = [];
      for (let item of this.PostBookCrypticCommands)
        data["PostBookCrypticCommands"].push(item);
    }
    data["GuaranteeType"] = this.GuaranteeType;
    super.toJSON(data);
    return data;
  }
}

export interface ISabreHotelBookInputCustomData extends IHotelBookInputCustomData {
  /** The Booking Key is returned in the HotelPriceCheck API response and is a mandatory value to perform hotel booking. */
  BookingKey?: string | undefined;
  /** TicketType equivalent Sabre host command: 7TAW */
  TicketType?: string | undefined;
  /** Pseudo City Code */
  PCC?: string | undefined;
  /** OperatorSign equivalent Sabre host command: 7TAW/TEST */
  OperatorSign?: string | undefined;
  /** Ticket Time Limit */
  TicketTimeLimit?: string | undefined;
  /** The value of identifier can be 6,7, or 10 alphanumeric
   <!-- Equivalent Sabre host command: DK1111111 --> */
  CustomerNumber?: string | undefined;
  MiscellaneousSegment?: MiscellaneousSegment | undefined;
  PreBookCrypticCommands?: string[] | undefined;
  PostBookCrypticCommands?: string[] | undefined;
  GuaranteeType?: string | undefined;
}

/** Equivalent Sabre host command: 0OTHXXGK1FSG21DEC-TEST */
export class MiscellaneousSegment implements IMiscellaneousSegment {
  /** "DepartureDateTime" is used to specify the date associated with the miscellaneous segment. */
  DepartureDateTime?: string;
  /** "InsertAfter" is used to specify the number of parties associated with the miscellaneous segment. */
  InsertAfter?: number;
  /** "NumberInParty" is used to specify the number of parties associated with the miscellaneous segment. */
  NumberInParty?: number;
  /** "Status" is used to specify the action code to be used to sell the segment. */
  Status?: string | undefined;
  /** "Type" is used to specify the type of miscellaneous segment, i.e. OTH, MCO, PTA, or INS. */
  Type?: EMiscellaneousSegmentType;
  /** "LocationCode" is used to specify the location to be associated with the miscellaneous segment. */
  LocationCode?: string | undefined;
  /** "Text" is used to specify free text information to be associated with the miscellaneous segment. */
  Text?: string | undefined;
  /** "AirlineCode" is used to specify a particular vendor code. */
  AirlineCode?: string | undefined;

  constructor(data?: IMiscellaneousSegment) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.DepartureDateTime = _data["DepartureDateTime"];
      this.InsertAfter = _data["InsertAfter"];
      this.NumberInParty = _data["NumberInParty"];
      this.Status = _data["Status"];
      this.Type = _data["Type"];
      this.LocationCode = _data["LocationCode"];
      this.Text = _data["Text"];
      this.AirlineCode = _data["AirlineCode"];
    }
  }

  static fromJS(data: any): MiscellaneousSegment {
    data = typeof data === 'object' ? data : {};
    let result = new MiscellaneousSegment();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["DepartureDateTime"] = this.DepartureDateTime;
    data["InsertAfter"] = this.InsertAfter;
    data["NumberInParty"] = this.NumberInParty;
    data["Status"] = this.Status;
    data["Type"] = this.Type;
    data["LocationCode"] = this.LocationCode;
    data["Text"] = this.Text;
    data["AirlineCode"] = this.AirlineCode;
    return data;
  }
}

/** Equivalent Sabre host command: 0OTHXXGK1FSG21DEC-TEST */
export interface IMiscellaneousSegment {
  /** "DepartureDateTime" is used to specify the date associated with the miscellaneous segment. */
  DepartureDateTime?: string;
  /** "InsertAfter" is used to specify the number of parties associated with the miscellaneous segment. */
  InsertAfter?: number;
  /** "NumberInParty" is used to specify the number of parties associated with the miscellaneous segment. */
  NumberInParty?: number;
  /** "Status" is used to specify the action code to be used to sell the segment. */
  Status?: string | undefined;
  /** "Type" is used to specify the type of miscellaneous segment, i.e. OTH, MCO, PTA, or INS. */
  Type?: EMiscellaneousSegmentType;
  /** "LocationCode" is used to specify the location to be associated with the miscellaneous segment. */
  LocationCode?: string | undefined;
  /** "Text" is used to specify free text information to be associated with the miscellaneous segment. */
  Text?: string | undefined;
  /** "AirlineCode" is used to specify a particular vendor code. */
  AirlineCode?: string | undefined;
}

export enum EMiscellaneousSegmentType {
  INS = "INS",
  MCO = "MCO",
  OTH = "OTH",
  PTA = "PTA",
}

export class IHGHotelBookInputCustomData extends HotelBookInputCustomData implements IIHGHotelBookInputCustomData {
  /** Passed to IHG as Header X-IHG-SSO-TOKEN
   Authentication token to verify the user's identity. If provided this will allow additional rates / discounts. */
  IhgSsoToken?: string | undefined;
  /** Passed to IHG as Header IHG-SESSION-ID
   Session Id used for analytics to tie shop and book requests. */
  IhgSessionId?: string | undefined;
  /** Passed to IHG as Header IHG-POS
   Point of Sale header to capture the agency information, agent information etc. This object has to match ihgRequestPos object defined in this contract. */
  IhgPos?: string | undefined;
  /** Passed to IHG as Header X-IHG-AGENT-TOKEN
   Authentication token to verify the cro agent. */
  IhgAgentToken?: string | undefined;
  /** Passed to IHG as Header IHG-IMPERSONATOR-ID
   This header enables the end user ( Supervisor ) to impersonate a sub-ordinate user. */
  IhgImpersonatorId?: string | undefined;
  /** Passed to IHG as Header IHG-LANGUAGE
   This header indicates the end user's language preference as determined by the API consumer. Text fields may be translated into the given language in the response. The format of the header is language-LOCALE (e.g., en-US) with both language and locale values being case sensitive.
   Default value : en-US */
  IhgLanguage?: string | undefined;
  /** Passed to IHG as Header X-Accept-Currency
   ISO 4217 alphabetic currency code to be used in the response, as applicable, for prices and charges.
   Default value : USD */
  AcceptCurrency?: string | undefined;
  /** Loyalty Id
   Override the default Loyalty Card on the pax Details
   If present on the LoyaltyCards of the LeaderPax we use the MembershipId
   Passed in the UserProfiles-&gt;LoyaltyProgram-&gt;loyaltyId */
  LoyaltyId?: string | undefined;
  /** If present any email will pass it to the segments-&gt;communicationPreferences-&gt;emailAddresses */
  CommunicationEmails?: string[] | undefined;
  /** If present any email will pass it to the segments-&gt;communicationPreferences-&gt;smsNumbers */
  CommunicationSmsNumbers?: string[] | undefined;
  /** Transportation Infos - Arrival Transport */
  ArrivalTransport?: Transportation | undefined;
  /** Transportation Infos - Departure Transport */
  DepartureTransport?: Transportation | undefined;
  /** Travel Agency Number Used on IHG as IATA */
  TravelAgencyNumber?: string | undefined;
  /** corporate account for the book
   Passed in the corporateNumber
   corporateDiscountNumber string
   Corporate discount Number entered for reservation */
  CorporateAccount?: string | undefined;
  /** The Okkami Property UID
   Used for NRI Extras over Okkami API */
  OkkamiPropertyUid?: string | undefined;
  /** The Okkami RoomType Name passed to Book */
  OkkamiRoomTypeName?: string | undefined;
  /** The Okkami Rate Name passed to Book */
  OkkamiRateName?: string | undefined;
  /** NRI Extra Notes
   Extra notes passed to IHG
   The format should be
   "SS: NRI-SPA-23567",
   "SS: child-9, child-11" */
  NriExtraNotes?: string[] | undefined;

  constructor(data?: IIHGHotelBookInputCustomData) {
    super(data);
    this._discriminator = "IHG_GRS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.IhgSsoToken = _data["IhgSsoToken"];
      this.IhgSessionId = _data["IhgSessionId"];
      this.IhgPos = _data["IhgPos"];
      this.IhgAgentToken = _data["IhgAgentToken"];
      this.IhgImpersonatorId = _data["IhgImpersonatorId"];
      this.IhgLanguage = _data["IhgLanguage"];
      this.AcceptCurrency = _data["AcceptCurrency"];
      this.LoyaltyId = _data["LoyaltyId"];
      if (Array.isArray(_data["CommunicationEmails"])) {
        this.CommunicationEmails = [] as any;
        for (let item of _data["CommunicationEmails"])
          this.CommunicationEmails!.push(item);
      }
      if (Array.isArray(_data["CommunicationSmsNumbers"])) {
        this.CommunicationSmsNumbers = [] as any;
        for (let item of _data["CommunicationSmsNumbers"])
          this.CommunicationSmsNumbers!.push(item);
      }
      this.ArrivalTransport = _data["ArrivalTransport"] ? Transportation.fromJS(_data["ArrivalTransport"]) : <any>undefined;
      this.DepartureTransport = _data["DepartureTransport"] ? Transportation.fromJS(_data["DepartureTransport"]) : <any>undefined;
      this.TravelAgencyNumber = _data["TravelAgencyNumber"];
      this.CorporateAccount = _data["CorporateAccount"];
      this.OkkamiPropertyUid = _data["OkkamiPropertyUid"];
      this.OkkamiRoomTypeName = _data["OkkamiRoomTypeName"];
      this.OkkamiRateName = _data["OkkamiRateName"];
      if (Array.isArray(_data["NriExtraNotes"])) {
        this.NriExtraNotes = [] as any;
        for (let item of _data["NriExtraNotes"])
          this.NriExtraNotes!.push(item);
      }
    }
  }

  static fromJS(data: any): IHGHotelBookInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new IHGHotelBookInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["IhgSsoToken"] = this.IhgSsoToken;
    data["IhgSessionId"] = this.IhgSessionId;
    data["IhgPos"] = this.IhgPos;
    data["IhgAgentToken"] = this.IhgAgentToken;
    data["IhgImpersonatorId"] = this.IhgImpersonatorId;
    data["IhgLanguage"] = this.IhgLanguage;
    data["AcceptCurrency"] = this.AcceptCurrency;
    data["LoyaltyId"] = this.LoyaltyId;
    if (Array.isArray(this.CommunicationEmails)) {
      data["CommunicationEmails"] = [];
      for (let item of this.CommunicationEmails)
        data["CommunicationEmails"].push(item);
    }
    if (Array.isArray(this.CommunicationSmsNumbers)) {
      data["CommunicationSmsNumbers"] = [];
      for (let item of this.CommunicationSmsNumbers)
        data["CommunicationSmsNumbers"].push(item);
    }
    data["ArrivalTransport"] = this.ArrivalTransport ? this.ArrivalTransport.toJSON() : <any>undefined;
    data["DepartureTransport"] = this.DepartureTransport ? this.DepartureTransport.toJSON() : <any>undefined;
    data["TravelAgencyNumber"] = this.TravelAgencyNumber;
    data["CorporateAccount"] = this.CorporateAccount;
    data["OkkamiPropertyUid"] = this.OkkamiPropertyUid;
    data["OkkamiRoomTypeName"] = this.OkkamiRoomTypeName;
    data["OkkamiRateName"] = this.OkkamiRateName;
    if (Array.isArray(this.NriExtraNotes)) {
      data["NriExtraNotes"] = [];
      for (let item of this.NriExtraNotes)
        data["NriExtraNotes"].push(item);
    }
    super.toJSON(data);
    return data;
  }
}

export interface IIHGHotelBookInputCustomData extends IHotelBookInputCustomData {
  /** Passed to IHG as Header X-IHG-SSO-TOKEN
   Authentication token to verify the user's identity. If provided this will allow additional rates / discounts. */
  IhgSsoToken?: string | undefined;
  /** Passed to IHG as Header IHG-SESSION-ID
   Session Id used for analytics to tie shop and book requests. */
  IhgSessionId?: string | undefined;
  /** Passed to IHG as Header IHG-POS
   Point of Sale header to capture the agency information, agent information etc. This object has to match ihgRequestPos object defined in this contract. */
  IhgPos?: string | undefined;
  /** Passed to IHG as Header X-IHG-AGENT-TOKEN
   Authentication token to verify the cro agent. */
  IhgAgentToken?: string | undefined;
  /** Passed to IHG as Header IHG-IMPERSONATOR-ID
   This header enables the end user ( Supervisor ) to impersonate a sub-ordinate user. */
  IhgImpersonatorId?: string | undefined;
  /** Passed to IHG as Header IHG-LANGUAGE
   This header indicates the end user's language preference as determined by the API consumer. Text fields may be translated into the given language in the response. The format of the header is language-LOCALE (e.g., en-US) with both language and locale values being case sensitive.
   Default value : en-US */
  IhgLanguage?: string | undefined;
  /** Passed to IHG as Header X-Accept-Currency
   ISO 4217 alphabetic currency code to be used in the response, as applicable, for prices and charges.
   Default value : USD */
  AcceptCurrency?: string | undefined;
  /** Loyalty Id
   Override the default Loyalty Card on the pax Details
   If present on the LoyaltyCards of the LeaderPax we use the MembershipId
   Passed in the UserProfiles-&gt;LoyaltyProgram-&gt;loyaltyId */
  LoyaltyId?: string | undefined;
  /** If present any email will pass it to the segments-&gt;communicationPreferences-&gt;emailAddresses */
  CommunicationEmails?: string[] | undefined;
  /** If present any email will pass it to the segments-&gt;communicationPreferences-&gt;smsNumbers */
  CommunicationSmsNumbers?: string[] | undefined;
  /** Transportation Infos - Arrival Transport */
  ArrivalTransport?: Transportation | undefined;
  /** Transportation Infos - Departure Transport */
  DepartureTransport?: Transportation | undefined;
  /** Travel Agency Number Used on IHG as IATA */
  TravelAgencyNumber?: string | undefined;
  /** corporate account for the book
   Passed in the corporateNumber
   corporateDiscountNumber string
   Corporate discount Number entered for reservation */
  CorporateAccount?: string | undefined;
  /** The Okkami Property UID
   Used for NRI Extras over Okkami API */
  OkkamiPropertyUid?: string | undefined;
  /** The Okkami RoomType Name passed to Book */
  OkkamiRoomTypeName?: string | undefined;
  /** The Okkami Rate Name passed to Book */
  OkkamiRateName?: string | undefined;
  /** NRI Extra Notes
   Extra notes passed to IHG
   The format should be
   "SS: NRI-SPA-23567",
   "SS: child-9, child-11" */
  NriExtraNotes?: string[] | undefined;
}

export class Transportation implements ITransportation {
  /** Type of transportation, based on OTA Code Type TRP (2-Boat, 3-Bus, 5-Car, 8-Helicopter, 9-Limousine, 14-Plane, 17-Shuttle, 18-Subway, 20-Taxi, 21-Train, 26-Other or Alternate) */
  Type?: number;
  /** Identifier of the transportation method (i.e flight Number for air, train Number for rail, …). If carrier code exists, this field is the concatenation Carrier Code and '-' Flight NumberID ('AF-1234') */
  Id?: string | undefined;
  /** IATA code of the destination */
  LocationCode?: string | undefined;
  /** Arrival time at destination or time of departure (concatenation of date and time) */
  Time?: string | undefined;
  /** Textual identifier of the transportation departure/arrival (i.e train station, bus station, airport terminal) */
  LocationDescription?: string | undefined;
  /** Terminal of the departure/arrival transportation */
  Terminal?: string | undefined;
  /** IATA code of departure (ONLY used for arrival transport - as locationCode conerns arrival) (used only for ARR option in GDS) */
  RemoteLocation?: string | undefined;

  constructor(data?: ITransportation) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Type = _data["Type"];
      this.Id = _data["Id"];
      this.LocationCode = _data["LocationCode"];
      this.Time = _data["Time"];
      this.LocationDescription = _data["LocationDescription"];
      this.Terminal = _data["Terminal"];
      this.RemoteLocation = _data["RemoteLocation"];
    }
  }

  static fromJS(data: any): Transportation {
    data = typeof data === 'object' ? data : {};
    let result = new Transportation();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Type"] = this.Type;
    data["Id"] = this.Id;
    data["LocationCode"] = this.LocationCode;
    data["Time"] = this.Time;
    data["LocationDescription"] = this.LocationDescription;
    data["Terminal"] = this.Terminal;
    data["RemoteLocation"] = this.RemoteLocation;
    return data;
  }
}

export interface ITransportation {
  /** Type of transportation, based on OTA Code Type TRP (2-Boat, 3-Bus, 5-Car, 8-Helicopter, 9-Limousine, 14-Plane, 17-Shuttle, 18-Subway, 20-Taxi, 21-Train, 26-Other or Alternate) */
  Type?: number;
  /** Identifier of the transportation method (i.e flight Number for air, train Number for rail, …). If carrier code exists, this field is the concatenation Carrier Code and '-' Flight NumberID ('AF-1234') */
  Id?: string | undefined;
  /** IATA code of the destination */
  LocationCode?: string | undefined;
  /** Arrival time at destination or time of departure (concatenation of date and time) */
  Time?: string | undefined;
  /** Textual identifier of the transportation departure/arrival (i.e train station, bus station, airport terminal) */
  LocationDescription?: string | undefined;
  /** Terminal of the departure/arrival transportation */
  Terminal?: string | undefined;
  /** IATA code of departure (ONLY used for arrival transport - as locationCode conerns arrival) (used only for ARR option in GDS) */
  RemoteLocation?: string | undefined;
}

export class OkkamiHotelBookInputCustomData extends HotelBookInputCustomData implements IOkkamiHotelBookInputCustomData {
  /** The Okkami Property UID */
  PropertyUid?: string | undefined;
  /** Reservation Number */
  ReservationNumber?: string | undefined;
  /** RoomType Name */
  RoomTypeName?: string | undefined;
  /** Rate Name */
  RateName?: string | undefined;

  constructor(data?: IOkkamiHotelBookInputCustomData) {
    super(data);
    this._discriminator = "OKKAMI";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.PropertyUid = _data["PropertyUid"];
      this.ReservationNumber = _data["ReservationNumber"];
      this.RoomTypeName = _data["RoomTypeName"];
      this.RateName = _data["RateName"];
    }
  }

  static fromJS(data: any): OkkamiHotelBookInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new OkkamiHotelBookInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["PropertyUid"] = this.PropertyUid;
    data["ReservationNumber"] = this.ReservationNumber;
    data["RoomTypeName"] = this.RoomTypeName;
    data["RateName"] = this.RateName;
    super.toJSON(data);
    return data;
  }
}

export interface IOkkamiHotelBookInputCustomData extends IHotelBookInputCustomData {
  /** The Okkami Property UID */
  PropertyUid?: string | undefined;
  /** Reservation Number */
  ReservationNumber?: string | undefined;
  /** RoomType Name */
  RoomTypeName?: string | undefined;
  /** Rate Name */
  RateName?: string | undefined;
}

export class HotelbedsHotelBookInputCustomData extends HotelBookInputCustomData implements IHotelbedsHotelBookInputCustomData {

  constructor(data?: IHotelbedsHotelBookInputCustomData) {
    super(data);
    this._discriminator = "HOTELBEDS";
  }

  init(_data?: any) {
    super.init(_data);
  }

  static fromJS(data: any): HotelbedsHotelBookInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new HotelbedsHotelBookInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    super.toJSON(data);
    return data;
  }
}

export interface IHotelbedsHotelBookInputCustomData extends IHotelBookInputCustomData {
}

export abstract class CustomerCustomDataOfJupiterHotelBookInput implements ICustomerCustomDataOfJupiterHotelBookInput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterHotelBookInput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterHotelBookInput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterHotelBookInput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterHotelBookInput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterHotelBookInput {
}

export class JupiterHotelBookModifyRS extends BaseRS implements IJupiterHotelBookModifyRS {
  /** JupiterHotelBookModifyOutput Response */
  Response?: JupiterHotelBookModifyOutput | undefined;

  constructor(data?: IJupiterHotelBookModifyRS) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Response = _data["Response"] ? JupiterHotelBookModifyOutput.fromJS(_data["Response"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterHotelBookModifyRS {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelBookModifyRS();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Response"] = this.Response ? this.Response.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelBookModifyRS extends IBaseRS {
  /** JupiterHotelBookModifyOutput Response */
  Response?: JupiterHotelBookModifyOutput | undefined;
}

export class JupiterHotelBookModifyOutput extends JupiterHotelBookOutput implements IJupiterHotelBookModifyOutput {

  constructor(data?: IJupiterHotelBookModifyOutput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
  }

  static fromJS(data: any): JupiterHotelBookModifyOutput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelBookModifyOutput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelBookModifyOutput extends IJupiterHotelBookOutput {
}

export class JupiterHotelBookModifyRQ extends BaseRQ implements IJupiterHotelBookModifyRQ {
  /** JupiterHotelBookModifyInput Request */
  Request?: JupiterHotelBookModifyInput | undefined;

  constructor(data?: IJupiterHotelBookModifyRQ) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Request = _data["Request"] ? JupiterHotelBookModifyInput.fromJS(_data["Request"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterHotelBookModifyRQ {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelBookModifyRQ();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Request"] = this.Request ? this.Request.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelBookModifyRQ extends IBaseRQ {
  /** JupiterHotelBookModifyInput Request */
  Request?: JupiterHotelBookModifyInput | undefined;
}

export class JupiterHotelBookModifyInput extends JupiterHotelBookInput implements IJupiterHotelBookModifyInput {
  /** Booking Reference on the Connector */
  ConnectorBookingReference?: string | undefined;

  constructor(data?: IJupiterHotelBookModifyInput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ConnectorBookingReference = _data["ConnectorBookingReference"];
    }
  }

  static fromJS(data: any): JupiterHotelBookModifyInput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelBookModifyInput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorBookingReference"] = this.ConnectorBookingReference;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelBookModifyInput extends IJupiterHotelBookInput {
  /** Booking Reference on the Connector */
  ConnectorBookingReference?: string | undefined;
}

export class JupiterHotelBookCancelRS extends BaseRS implements IJupiterHotelBookCancelRS {
  /** JupiterHotelBookCancelOutput Response */
  Response?: JupiterHotelBookCancelOutput | undefined;

  constructor(data?: IJupiterHotelBookCancelRS) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Response = _data["Response"] ? JupiterHotelBookCancelOutput.fromJS(_data["Response"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterHotelBookCancelRS {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelBookCancelRS();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Response"] = this.Response ? this.Response.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelBookCancelRS extends IBaseRS {
  /** JupiterHotelBookCancelOutput Response */
  Response?: JupiterHotelBookCancelOutput | undefined;
}

export class JupiterHotelBookCancelOutput extends BaseOutput implements IJupiterHotelBookCancelOutput {
  /** Connector Code */
  ConnectorCode?: EH2HConnectorCode;
  /** Booking Status */
  BookingStatus?: EBookingStatus;
  /** Booking Reference on the Connector */
  ConnectorBookingReference?: string | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: HotelBookCancelOutputCustomData | undefined;

  constructor(data?: IJupiterHotelBookCancelOutput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ConnectorCode = _data["ConnectorCode"];
      this.BookingStatus = _data["BookingStatus"];
      this.ConnectorBookingReference = _data["ConnectorBookingReference"];
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? HotelBookCancelOutputCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterHotelBookCancelOutput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelBookCancelOutput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCode"] = this.ConnectorCode;
    data["BookingStatus"] = this.BookingStatus;
    data["ConnectorBookingReference"] = this.ConnectorBookingReference;
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelBookCancelOutput extends IBaseOutput {
  /** Connector Code */
  ConnectorCode?: EH2HConnectorCode;
  /** Booking Status */
  BookingStatus?: EBookingStatus;
  /** Booking Reference on the Connector */
  ConnectorBookingReference?: string | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: HotelBookCancelOutputCustomData | undefined;
}

export abstract class HotelBookCancelOutputCustomData implements IHotelBookCancelOutputCustomData {

  protected _discriminator: string;

  constructor(data?: IHotelBookCancelOutputCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "HotelBookCancelOutputCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): HotelBookCancelOutputCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "SABRE_SYNXIS") {
      let result = new SabreSynXisHotelBookCancelOutputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "IHG_GRS") {
      let result = new IHGHotelBookCancelOutputCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'HotelBookCancelOutputCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IHotelBookCancelOutputCustomData {
}

export class SabreSynXisHotelBookCancelOutputCustomData extends HotelBookCancelOutputCustomData implements ISabreSynXisHotelBookCancelOutputCustomData {
  /** Booking reference of the cancelled Book */
  CancelBookingReference?: string | undefined;

  constructor(data?: ISabreSynXisHotelBookCancelOutputCustomData) {
    super(data);
    this._discriminator = "SABRE_SYNXIS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.CancelBookingReference = _data["CancelBookingReference"];
    }
  }

  static fromJS(data: any): SabreSynXisHotelBookCancelOutputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreSynXisHotelBookCancelOutputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CancelBookingReference"] = this.CancelBookingReference;
    super.toJSON(data);
    return data;
  }
}

export interface ISabreSynXisHotelBookCancelOutputCustomData extends IHotelBookCancelOutputCustomData {
  /** Booking reference of the cancelled Book */
  CancelBookingReference?: string | undefined;
}

export class IHGHotelBookCancelOutputCustomData extends HotelBookCancelOutputCustomData implements IIHGHotelBookCancelOutputCustomData {
  /** IHG Cancel Booking Reference */
  CancelBookingReference?: string | undefined;

  constructor(data?: IIHGHotelBookCancelOutputCustomData) {
    super(data);
    this._discriminator = "IHG_GRS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.CancelBookingReference = _data["CancelBookingReference"];
    }
  }

  static fromJS(data: any): IHGHotelBookCancelOutputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new IHGHotelBookCancelOutputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CancelBookingReference"] = this.CancelBookingReference;
    super.toJSON(data);
    return data;
  }
}

export interface IIHGHotelBookCancelOutputCustomData extends IHotelBookCancelOutputCustomData {
  /** IHG Cancel Booking Reference */
  CancelBookingReference?: string | undefined;
}

export abstract class CustomerCustomDataOfJupiterHotelBookCancelOutput implements ICustomerCustomDataOfJupiterHotelBookCancelOutput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterHotelBookCancelOutput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterHotelBookCancelOutput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterHotelBookCancelOutput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterHotelBookCancelOutput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterHotelBookCancelOutput {
}

export class JupiterHotelBookCancelRQ extends BaseRQ implements IJupiterHotelBookCancelRQ {
  /** JupiterHotelBookCancelInput Request */
  Request?: JupiterHotelBookCancelInput | undefined;

  constructor(data?: IJupiterHotelBookCancelRQ) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Request = _data["Request"] ? JupiterHotelBookCancelInput.fromJS(_data["Request"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterHotelBookCancelRQ {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelBookCancelRQ();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Request"] = this.Request ? this.Request.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelBookCancelRQ extends IBaseRQ {
  /** JupiterHotelBookCancelInput Request */
  Request?: JupiterHotelBookCancelInput | undefined;
}

export class JupiterHotelBookCancelInput extends BaseInput implements IJupiterHotelBookCancelInput {
  /** Connector Code */
  ConnectorCode?: EH2HConnectorCode;
  /** Booking Reference on the Connector */
  ConnectorBookingReference?: string | undefined;
  /** Notes related to the cancel request */
  Notes?: string | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: HotelBookCancelInputCustomData | undefined;

  constructor(data?: IJupiterHotelBookCancelInput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ConnectorCode = _data["ConnectorCode"];
      this.ConnectorBookingReference = _data["ConnectorBookingReference"];
      this.Notes = _data["Notes"];
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? HotelBookCancelInputCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterHotelBookCancelInput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelBookCancelInput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCode"] = this.ConnectorCode;
    data["ConnectorBookingReference"] = this.ConnectorBookingReference;
    data["Notes"] = this.Notes;
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelBookCancelInput extends IBaseInput {
  /** Connector Code */
  ConnectorCode?: EH2HConnectorCode;
  /** Booking Reference on the Connector */
  ConnectorBookingReference?: string | undefined;
  /** Notes related to the cancel request */
  Notes?: string | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: HotelBookCancelInputCustomData | undefined;
}

export abstract class HotelBookCancelInputCustomData implements IHotelBookCancelInputCustomData {

  protected _discriminator: string;

  constructor(data?: IHotelBookCancelInputCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "HotelBookCancelInputCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): HotelBookCancelInputCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "SABRE_SYNXIS") {
      let result = new SabreSynXisHotelBookCancelInputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "IHG_GRS") {
      let result = new IHGHotelBookCancelInputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "OKKAMI") {
      let result = new OkkamiHotelBookCancelInputCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'HotelBookCancelInputCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IHotelBookCancelInputCustomData {
}

export class SabreSynXisHotelBookCancelInputCustomData extends HotelBookCancelInputCustomData implements ISabreSynXisHotelBookCancelInputCustomData {
  /** The Sub Source Code passed to Sabre in the POS
   If null or empty it'll use the default value sent by Sabre related to the Login Test/Production */
  ChannelSubSourceCode?: string | undefined;
  /** The SabreBookingReference returned during booking */
  SabreBookingReference?: SabreBookingReference | undefined;
  /** The Hotel Code, used for verification on SabreSynXis */
  HotelCode?: string | undefined;
  /** The Chain Code if present, used for verification on SabreSynXis */
  ChainCode?: string | undefined;
  /** Send the Confirmation Email to the customer from SynXis with the TemplateName specified
   if it's not set up we'll not set the node on the Sabre SynXis message so no mail will be sent */
  SendConfirmationEmailTemplate?: string | undefined;

  constructor(data?: ISabreSynXisHotelBookCancelInputCustomData) {
    super(data);
    this._discriminator = "SABRE_SYNXIS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ChannelSubSourceCode = _data["ChannelSubSourceCode"];
      this.SabreBookingReference = _data["SabreBookingReference"] ? SabreBookingReference.fromJS(_data["SabreBookingReference"]) : <any>undefined;
      this.HotelCode = _data["HotelCode"];
      this.ChainCode = _data["ChainCode"];
      this.SendConfirmationEmailTemplate = _data["SendConfirmationEmailTemplate"];
    }
  }

  static fromJS(data: any): SabreSynXisHotelBookCancelInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreSynXisHotelBookCancelInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ChannelSubSourceCode"] = this.ChannelSubSourceCode;
    data["SabreBookingReference"] = this.SabreBookingReference ? this.SabreBookingReference.toJSON() : <any>undefined;
    data["HotelCode"] = this.HotelCode;
    data["ChainCode"] = this.ChainCode;
    data["SendConfirmationEmailTemplate"] = this.SendConfirmationEmailTemplate;
    super.toJSON(data);
    return data;
  }
}

export interface ISabreSynXisHotelBookCancelInputCustomData extends IHotelBookCancelInputCustomData {
  /** The Sub Source Code passed to Sabre in the POS
   If null or empty it'll use the default value sent by Sabre related to the Login Test/Production */
  ChannelSubSourceCode?: string | undefined;
  /** The SabreBookingReference returned during booking */
  SabreBookingReference?: SabreBookingReference | undefined;
  /** The Hotel Code, used for verification on SabreSynXis */
  HotelCode?: string | undefined;
  /** The Chain Code if present, used for verification on SabreSynXis */
  ChainCode?: string | undefined;
  /** Send the Confirmation Email to the customer from SynXis with the TemplateName specified
   if it's not set up we'll not set the node on the Sabre SynXis message so no mail will be sent */
  SendConfirmationEmailTemplate?: string | undefined;
}

export class IHGHotelBookCancelInputCustomData extends HotelBookCancelInputCustomData implements IIHGHotelBookCancelInputCustomData {
  /** Passed to IHG as Header X-IHG-SSO-TOKEN
   Authentication token to verify the user's identity. If provided this will allow additional rates / discounts. */
  IhgSsoToken?: string | undefined;
  /** Passed to IHG as Header IHG-SESSION-ID
   Session Id used for analytics to tie shop and book requests. */
  IhgSessionId?: string | undefined;
  /** Passed to IHG as Header IHG-POS
   Point of Sale header to capture the agency information, agent information etc. This object has to match ihgRequestPos object defined in this contract. */
  IhgPos?: string | undefined;
  /** Passed to IHG as Header X-IHG-AGENT-TOKEN
   Authentication token to verify the cro agent. */
  IhgAgentToken?: string | undefined;
  /** Passed to IHG as Header IHG_IMPERSONATOR_ID
   This header enables the end user ( Supervisor ) to impersonate a sub-ordinate user. */
  IhgImpersonatorId?: string | undefined;
  /** Leader Pax Last Name */
  LastName!: string;
  /** The Okkami Property UID
   Used for NRI Extras over Okkami API */
  OkkamiPropertyUid?: string | undefined;

  constructor(data?: IIHGHotelBookCancelInputCustomData) {
    super(data);
    this._discriminator = "IHG_GRS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.IhgSsoToken = _data["IhgSsoToken"];
      this.IhgSessionId = _data["IhgSessionId"];
      this.IhgPos = _data["IhgPos"];
      this.IhgAgentToken = _data["IhgAgentToken"];
      this.IhgImpersonatorId = _data["IhgImpersonatorId"];
      this.LastName = _data["LastName"];
      this.OkkamiPropertyUid = _data["OkkamiPropertyUid"];
    }
  }

  static fromJS(data: any): IHGHotelBookCancelInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new IHGHotelBookCancelInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["IhgSsoToken"] = this.IhgSsoToken;
    data["IhgSessionId"] = this.IhgSessionId;
    data["IhgPos"] = this.IhgPos;
    data["IhgAgentToken"] = this.IhgAgentToken;
    data["IhgImpersonatorId"] = this.IhgImpersonatorId;
    data["LastName"] = this.LastName;
    data["OkkamiPropertyUid"] = this.OkkamiPropertyUid;
    super.toJSON(data);
    return data;
  }
}

export interface IIHGHotelBookCancelInputCustomData extends IHotelBookCancelInputCustomData {
  /** Passed to IHG as Header X-IHG-SSO-TOKEN
   Authentication token to verify the user's identity. If provided this will allow additional rates / discounts. */
  IhgSsoToken?: string | undefined;
  /** Passed to IHG as Header IHG-SESSION-ID
   Session Id used for analytics to tie shop and book requests. */
  IhgSessionId?: string | undefined;
  /** Passed to IHG as Header IHG-POS
   Point of Sale header to capture the agency information, agent information etc. This object has to match ihgRequestPos object defined in this contract. */
  IhgPos?: string | undefined;
  /** Passed to IHG as Header X-IHG-AGENT-TOKEN
   Authentication token to verify the cro agent. */
  IhgAgentToken?: string | undefined;
  /** Passed to IHG as Header IHG_IMPERSONATOR_ID
   This header enables the end user ( Supervisor ) to impersonate a sub-ordinate user. */
  IhgImpersonatorId?: string | undefined;
  /** Leader Pax Last Name */
  LastName: string;
  /** The Okkami Property UID
   Used for NRI Extras over Okkami API */
  OkkamiPropertyUid?: string | undefined;
}

export class OkkamiHotelBookCancelInputCustomData extends HotelBookCancelInputCustomData implements IOkkamiHotelBookCancelInputCustomData {
  /** The Okkami Property UID
   Used for NRI Extras over Okkami API */
  PropertyUid?: string | undefined;

  constructor(data?: IOkkamiHotelBookCancelInputCustomData) {
    super(data);
    this._discriminator = "OKKAMI";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.PropertyUid = _data["PropertyUid"];
    }
  }

  static fromJS(data: any): OkkamiHotelBookCancelInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new OkkamiHotelBookCancelInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["PropertyUid"] = this.PropertyUid;
    super.toJSON(data);
    return data;
  }
}

export interface IOkkamiHotelBookCancelInputCustomData extends IHotelBookCancelInputCustomData {
  /** The Okkami Property UID
   Used for NRI Extras over Okkami API */
  PropertyUid?: string | undefined;
}

export abstract class CustomerCustomDataOfJupiterHotelBookCancelInput implements ICustomerCustomDataOfJupiterHotelBookCancelInput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterHotelBookCancelInput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterHotelBookCancelInput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterHotelBookCancelInput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterHotelBookCancelInput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterHotelBookCancelInput {
}

export class JupiterHotelBookSearchRS extends BaseRS implements IJupiterHotelBookSearchRS {
  /** JupiterHotelBookSearchOutput Response */
  Response?: JupiterHotelBookSearchOutput | undefined;

  constructor(data?: IJupiterHotelBookSearchRS) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Response = _data["Response"] ? JupiterHotelBookSearchOutput.fromJS(_data["Response"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterHotelBookSearchRS {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelBookSearchRS();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Response"] = this.Response ? this.Response.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelBookSearchRS extends IBaseRS {
  /** JupiterHotelBookSearchOutput Response */
  Response?: JupiterHotelBookSearchOutput | undefined;
}

export class JupiterHotelBookSearchOutput extends BaseOutput implements IJupiterHotelBookSearchOutput {
  /** Connector Code */
  ConnectorCode?: EH2HConnectorCode;
  /** Book Infos List */
  ConnectorBookingReferences?: BookInfos[] | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: HotelBookSearchOutputCustomData | undefined;

  constructor(data?: IJupiterHotelBookSearchOutput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ConnectorCode = _data["ConnectorCode"];
      if (Array.isArray(_data["ConnectorBookingReferences"])) {
        this.ConnectorBookingReferences = [] as any;
        for (let item of _data["ConnectorBookingReferences"])
          this.ConnectorBookingReferences!.push(BookInfos.fromJS(item));
      }
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? HotelBookSearchOutputCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterHotelBookSearchOutput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelBookSearchOutput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCode"] = this.ConnectorCode;
    if (Array.isArray(this.ConnectorBookingReferences)) {
      data["ConnectorBookingReferences"] = [];
      for (let item of this.ConnectorBookingReferences)
        data["ConnectorBookingReferences"].push(item.toJSON());
    }
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelBookSearchOutput extends IBaseOutput {
  /** Connector Code */
  ConnectorCode?: EH2HConnectorCode;
  /** Book Infos List */
  ConnectorBookingReferences?: BookInfos[] | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: HotelBookSearchOutputCustomData | undefined;
}

export class BaseBookInfos implements IBaseBookInfos {
  /** The Connector of the current Booking */
  ConnectorCode?: EH2HConnectorCode;
  /** The Booking Status */
  BookingStatus?: EBookingStatus;
  /** The Booking Reference on the Connector */
  ConnectorBookingReference?: string | undefined;
  /** The Booking Date */
  BookDate?: string;

  constructor(data?: IBaseBookInfos) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.ConnectorCode = _data["ConnectorCode"];
      this.BookingStatus = _data["BookingStatus"];
      this.ConnectorBookingReference = _data["ConnectorBookingReference"];
      this.BookDate = _data["BookDate"];
    }
  }

  static fromJS(data: any): BaseBookInfos {
    data = typeof data === 'object' ? data : {};
    let result = new BaseBookInfos();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCode"] = this.ConnectorCode;
    data["BookingStatus"] = this.BookingStatus;
    data["ConnectorBookingReference"] = this.ConnectorBookingReference;
    data["BookDate"] = this.BookDate;
    return data;
  }
}

export interface IBaseBookInfos {
  /** The Connector of the current Booking */
  ConnectorCode?: EH2HConnectorCode;
  /** The Booking Status */
  BookingStatus?: EBookingStatus;
  /** The Booking Reference on the Connector */
  ConnectorBookingReference?: string | undefined;
  /** The Booking Date */
  BookDate?: string;
}

export class BookInfos extends BaseBookInfos implements IBookInfos {
  /** Connector Custom Data */
  ConnectorCustomData?: BookInfosCustomData | undefined;

  constructor(data?: IBookInfos) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? BookInfosCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): BookInfos {
    data = typeof data === 'object' ? data : {};
    let result = new BookInfos();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IBookInfos extends IBaseBookInfos {
  /** Connector Custom Data */
  ConnectorCustomData?: BookInfosCustomData | undefined;
}

export abstract class BookInfosCustomData implements IBookInfosCustomData {
  CustomDataConnectorCode?: string | undefined;

  constructor(data?: IBookInfosCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.CustomDataConnectorCode = _data["CustomDataConnectorCode"];
    }
  }

  static fromJS(data: any): BookInfosCustomData {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'BookInfosCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this.CustomDataConnectorCode;
    return data;
  }
}

export interface IBookInfosCustomData {
  CustomDataConnectorCode?: string | undefined;
}

export class IHGBookInfosCustomData extends BookInfosCustomData implements IIHGBookInfosCustomData {
  /** IHG Cancel Booking Reference */
  CancelBookingReference?: string | undefined;

  constructor(data?: IIHGBookInfosCustomData) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.CancelBookingReference = _data["CancelBookingReference"];
    }
  }

  static fromJS(data: any): IHGBookInfosCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new IHGBookInfosCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CancelBookingReference"] = this.CancelBookingReference;
    super.toJSON(data);
    return data;
  }
}

export interface IIHGBookInfosCustomData extends IBookInfosCustomData {
  /** IHG Cancel Booking Reference */
  CancelBookingReference?: string | undefined;
}

export abstract class CustomerCustomDataOfBookInfos implements ICustomerCustomDataOfBookInfos {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfBookInfos) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfBookInfos";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfBookInfos {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfBookInfos' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfBookInfos {
}

export abstract class HotelBookSearchOutputCustomData implements IHotelBookSearchOutputCustomData {
  CustomDataConnectorCode?: string | undefined;

  constructor(data?: IHotelBookSearchOutputCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.CustomDataConnectorCode = _data["CustomDataConnectorCode"];
    }
  }

  static fromJS(data: any): HotelBookSearchOutputCustomData {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'HotelBookSearchOutputCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this.CustomDataConnectorCode;
    return data;
  }
}

export interface IHotelBookSearchOutputCustomData {
  CustomDataConnectorCode?: string | undefined;
}

export abstract class CustomerCustomDataOfJupiterHotelBookSearchOutput implements ICustomerCustomDataOfJupiterHotelBookSearchOutput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterHotelBookSearchOutput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterHotelBookSearchOutput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterHotelBookSearchOutput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterHotelBookSearchOutput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterHotelBookSearchOutput {
}

export class JupiterHotelBookSearchRQ extends BaseRQ implements IJupiterHotelBookSearchRQ {
  /** JupiterHotelBookSearchInput Request */
  Request?: JupiterHotelBookSearchInput | undefined;

  constructor(data?: IJupiterHotelBookSearchRQ) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Request = _data["Request"] ? JupiterHotelBookSearchInput.fromJS(_data["Request"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterHotelBookSearchRQ {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelBookSearchRQ();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Request"] = this.Request ? this.Request.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelBookSearchRQ extends IBaseRQ {
  /** JupiterHotelBookSearchInput Request */
  Request?: JupiterHotelBookSearchInput | undefined;
}

export class JupiterHotelBookSearchInput extends BaseInput implements IJupiterHotelBookSearchInput {
  /** Connector Code */
  ConnectorCode!: EH2HConnectorCode;
  /** Booking Reference on the Connector */
  ConnectorBookingReference?: string | undefined;
  /** Start Date of the search with format: "yyyy-MM-dd" */
  FromDate?: string;
  /** End Date of the search with format: "yyyy-MM-dd" */
  ToDate?: string;
  /** Booking Status */
  BookingStatus?: EBookingStatus;
  /** Connector Custom Data */
  ConnectorCustomData?: HotelBookSearchInputCustomData | undefined;

  constructor(data?: IJupiterHotelBookSearchInput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ConnectorCode = _data["ConnectorCode"];
      this.ConnectorBookingReference = _data["ConnectorBookingReference"];
      this.FromDate = _data["FromDate"];
      this.ToDate = _data["ToDate"];
      this.BookingStatus = _data["BookingStatus"];
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? HotelBookSearchInputCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterHotelBookSearchInput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelBookSearchInput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCode"] = this.ConnectorCode;
    data["ConnectorBookingReference"] = this.ConnectorBookingReference;
    data["FromDate"] = this.FromDate;
    data["ToDate"] = this.ToDate;
    data["BookingStatus"] = this.BookingStatus;
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelBookSearchInput extends IBaseInput {
  /** Connector Code */
  ConnectorCode: EH2HConnectorCode;
  /** Booking Reference on the Connector */
  ConnectorBookingReference?: string | undefined;
  /** Start Date of the search with format: "yyyy-MM-dd" */
  FromDate?: string;
  /** End Date of the search with format: "yyyy-MM-dd" */
  ToDate?: string;
  /** Booking Status */
  BookingStatus?: EBookingStatus;
  /** Connector Custom Data */
  ConnectorCustomData?: HotelBookSearchInputCustomData | undefined;
}

export abstract class HotelBookSearchInputCustomData implements IHotelBookSearchInputCustomData {

  protected _discriminator: string;

  constructor(data?: IHotelBookSearchInputCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "HotelBookSearchInputCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): HotelBookSearchInputCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "SABRE_SYNXIS") {
      let result = new SabreSynXisHotelBookSearchInputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "IHG_GRS") {
      let result = new IHGHotelBookSearchInputCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'HotelBookSearchInputCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IHotelBookSearchInputCustomData {
}

export class SabreSynXisHotelBookSearchInputCustomData extends HotelBookSearchInputCustomData implements ISabreSynXisHotelBookSearchInputCustomData {
  /** The Sub Source Code passed to Sabre in the POS
   If null or empty it'll use the default value sent by Sabre related to the Login Test/Production */
  ChannelSubSourceCode?: string | undefined;
  /** The Hotel Code, used for verification on SabreSynXis */
  HotelCode?: string | undefined;
  /** The Chain Code if present, used for verification on SabreSynXis */
  ChainCode?: string | undefined;

  constructor(data?: ISabreSynXisHotelBookSearchInputCustomData) {
    super(data);
    this._discriminator = "SABRE_SYNXIS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ChannelSubSourceCode = _data["ChannelSubSourceCode"];
      this.HotelCode = _data["HotelCode"];
      this.ChainCode = _data["ChainCode"];
    }
  }

  static fromJS(data: any): SabreSynXisHotelBookSearchInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreSynXisHotelBookSearchInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ChannelSubSourceCode"] = this.ChannelSubSourceCode;
    data["HotelCode"] = this.HotelCode;
    data["ChainCode"] = this.ChainCode;
    super.toJSON(data);
    return data;
  }
}

export interface ISabreSynXisHotelBookSearchInputCustomData extends IHotelBookSearchInputCustomData {
  /** The Sub Source Code passed to Sabre in the POS
   If null or empty it'll use the default value sent by Sabre related to the Login Test/Production */
  ChannelSubSourceCode?: string | undefined;
  /** The Hotel Code, used for verification on SabreSynXis */
  HotelCode?: string | undefined;
  /** The Chain Code if present, used for verification on SabreSynXis */
  ChainCode?: string | undefined;
}

export class IHGHotelBookSearchInputCustomData extends HotelBookSearchInputCustomData implements IIHGHotelBookSearchInputCustomData {
  /** Passed to IHG as Header X-IHG-SSO-TOKEN
   Authentication token to verify the user's identity. If provided this will allow additional rates / discounts. */
  IhgSsoToken?: string | undefined;
  /** Passed to IHG as Header IHG-SESSION-ID
   Session Id used for analytics to tie shop and book requests. */
  IhgSessionId?: string | undefined;
  /** Passed to IHG as Header IHG-POS
   Point of Sale header to capture the agency information, agent information etc. This object has to match ihgRequestPos object defined in this contract. */
  IhgPos?: string | undefined;
  /** Passed to IHG as Header X-IHG-AGENT-TOKEN
   Authentication token to verify the cro agent. */
  IhgAgentToken?: string | undefined;
  /** Passed to IHG as Header IHG_IMPERSONATOR_ID
   This header enables the end user ( Supervisor ) to impersonate a sub-ordinate user. */
  IhgImpersonatorId?: string | undefined;
  /** Hotel Inn code, mandatory if LoyaltyId is not present in the request parameters. It could be a simple hotel code or a list of hotel code */
  HotelRefIds?: string[] | undefined;
  /** Date situated within the stay period, between check-in (included) and check-out (excluded) */
  StayDate?: string;
  /** Surname of the guest. For inputs which are 1 or 2 characters long, the service searches for reservations with guest last name matching exactly the input. For inputs which are 3 characters long or more, the service searches for reservations with guest last name starting with the input */
  LastName?: string | undefined;
  /** First name of the guest. If used, the lastName is mandatory. For inputs which are 1 or 2 characters long, the service searches for reservations with guest first name matching exactly the input. For inputs which are 3 characters long or more, the service searches for reservations with guest first name starting with the input */
  FirstName?: string | undefined;
  /** IHG Rewards Club number of the reservation holder, mandatory if hotelMnemonic is not present in the request parameters. */
  LoyaltyId?: string | undefined;
  /** Type of result expected for the search, displayList to return the list of reservation,checkOneFound to check if at least one reservation matches the criteria
   Available values : DISPLAY_LIST, CHECK_ONE_FOUND */
  RetrieveMode?: EIHGReservationRetrieveMode | undefined;
  /** Price grid code linked to the reservation */
  PriceGridCode?: string | undefined;
  /** Credit card token to search a reservation associated with it. */
  CreditCard?: string | undefined;
  /** Phone Number linked to the reservation */
  PhoneNumber?: string | undefined;
  /** This is added to help with pagination. It indicates the starting point. If a client wants first 10 results this value would be 1 and limit would be 10. For the next 10 responses the offset value would be 11.
   Default value : 1 */
  Offset?: number;
  /** Limit the number of results returned. By default its set at 10. Will return the most recent reservations by default.
   Default value : 10 */
  Limit?: number;

  constructor(data?: IIHGHotelBookSearchInputCustomData) {
    super(data);
    this._discriminator = "IHG_GRS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.IhgSsoToken = _data["IhgSsoToken"];
      this.IhgSessionId = _data["IhgSessionId"];
      this.IhgPos = _data["IhgPos"];
      this.IhgAgentToken = _data["IhgAgentToken"];
      this.IhgImpersonatorId = _data["IhgImpersonatorId"];
      if (Array.isArray(_data["HotelRefIds"])) {
        this.HotelRefIds = [] as any;
        for (let item of _data["HotelRefIds"])
          this.HotelRefIds!.push(item);
      }
      this.StayDate = _data["StayDate"];
      this.LastName = _data["LastName"];
      this.FirstName = _data["FirstName"];
      this.LoyaltyId = _data["LoyaltyId"];
      this.RetrieveMode = _data["RetrieveMode"];
      this.PriceGridCode = _data["PriceGridCode"];
      this.CreditCard = _data["CreditCard"];
      this.PhoneNumber = _data["PhoneNumber"];
      this.Offset = _data["Offset"];
      this.Limit = _data["Limit"];
    }
  }

  static fromJS(data: any): IHGHotelBookSearchInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new IHGHotelBookSearchInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["IhgSsoToken"] = this.IhgSsoToken;
    data["IhgSessionId"] = this.IhgSessionId;
    data["IhgPos"] = this.IhgPos;
    data["IhgAgentToken"] = this.IhgAgentToken;
    data["IhgImpersonatorId"] = this.IhgImpersonatorId;
    if (Array.isArray(this.HotelRefIds)) {
      data["HotelRefIds"] = [];
      for (let item of this.HotelRefIds)
        data["HotelRefIds"].push(item);
    }
    data["StayDate"] = this.StayDate;
    data["LastName"] = this.LastName;
    data["FirstName"] = this.FirstName;
    data["LoyaltyId"] = this.LoyaltyId;
    data["RetrieveMode"] = this.RetrieveMode;
    data["PriceGridCode"] = this.PriceGridCode;
    data["CreditCard"] = this.CreditCard;
    data["PhoneNumber"] = this.PhoneNumber;
    data["Offset"] = this.Offset;
    data["Limit"] = this.Limit;
    super.toJSON(data);
    return data;
  }
}

export interface IIHGHotelBookSearchInputCustomData extends IHotelBookSearchInputCustomData {
  /** Passed to IHG as Header X-IHG-SSO-TOKEN
   Authentication token to verify the user's identity. If provided this will allow additional rates / discounts. */
  IhgSsoToken?: string | undefined;
  /** Passed to IHG as Header IHG-SESSION-ID
   Session Id used for analytics to tie shop and book requests. */
  IhgSessionId?: string | undefined;
  /** Passed to IHG as Header IHG-POS
   Point of Sale header to capture the agency information, agent information etc. This object has to match ihgRequestPos object defined in this contract. */
  IhgPos?: string | undefined;
  /** Passed to IHG as Header X-IHG-AGENT-TOKEN
   Authentication token to verify the cro agent. */
  IhgAgentToken?: string | undefined;
  /** Passed to IHG as Header IHG_IMPERSONATOR_ID
   This header enables the end user ( Supervisor ) to impersonate a sub-ordinate user. */
  IhgImpersonatorId?: string | undefined;
  /** Hotel Inn code, mandatory if LoyaltyId is not present in the request parameters. It could be a simple hotel code or a list of hotel code */
  HotelRefIds?: string[] | undefined;
  /** Date situated within the stay period, between check-in (included) and check-out (excluded) */
  StayDate?: string;
  /** Surname of the guest. For inputs which are 1 or 2 characters long, the service searches for reservations with guest last name matching exactly the input. For inputs which are 3 characters long or more, the service searches for reservations with guest last name starting with the input */
  LastName?: string | undefined;
  /** First name of the guest. If used, the lastName is mandatory. For inputs which are 1 or 2 characters long, the service searches for reservations with guest first name matching exactly the input. For inputs which are 3 characters long or more, the service searches for reservations with guest first name starting with the input */
  FirstName?: string | undefined;
  /** IHG Rewards Club number of the reservation holder, mandatory if hotelMnemonic is not present in the request parameters. */
  LoyaltyId?: string | undefined;
  /** Type of result expected for the search, displayList to return the list of reservation,checkOneFound to check if at least one reservation matches the criteria
   Available values : DISPLAY_LIST, CHECK_ONE_FOUND */
  RetrieveMode?: EIHGReservationRetrieveMode | undefined;
  /** Price grid code linked to the reservation */
  PriceGridCode?: string | undefined;
  /** Credit card token to search a reservation associated with it. */
  CreditCard?: string | undefined;
  /** Phone Number linked to the reservation */
  PhoneNumber?: string | undefined;
  /** This is added to help with pagination. It indicates the starting point. If a client wants first 10 results this value would be 1 and limit would be 10. For the next 10 responses the offset value would be 11.
   Default value : 1 */
  Offset?: number;
  /** Limit the number of results returned. By default its set at 10. Will return the most recent reservations by default.
   Default value : 10 */
  Limit?: number;
}

export enum EIHGReservationRetrieveMode {
  DISPLAY_LIST = "DISPLAY_LIST",
  CHECK_ONE_FOUND = "CHECK_ONE_FOUND",
}

export abstract class CustomerCustomDataOfJupiterHotelBookSearchInput implements ICustomerCustomDataOfJupiterHotelBookSearchInput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterHotelBookSearchInput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterHotelBookSearchInput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterHotelBookSearchInput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterHotelBookSearchInput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterHotelBookSearchInput {
}

export class JupiterHotelBookDetailRS extends BaseRS implements IJupiterHotelBookDetailRS {
  /** JupiterHotelBookDetailOutput Response */
  Response?: JupiterHotelBookDetailOutput | undefined;

  constructor(data?: IJupiterHotelBookDetailRS) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Response = _data["Response"] ? JupiterHotelBookDetailOutput.fromJS(_data["Response"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterHotelBookDetailRS {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelBookDetailRS();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Response"] = this.Response ? this.Response.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelBookDetailRS extends IBaseRS {
  /** JupiterHotelBookDetailOutput Response */
  Response?: JupiterHotelBookDetailOutput | undefined;
}

export class JupiterHotelBookDetailOutput extends BaseOutput implements IJupiterHotelBookDetailOutput {
  /** The Connector Code */
  ConnectorCode?: EH2HConnectorCode;
  /** List of Booking Details */
  BookDetails?: SingleBookDetail[] | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: HotelBookDetailOutputCustomData | undefined;

  constructor(data?: IJupiterHotelBookDetailOutput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ConnectorCode = _data["ConnectorCode"];
      if (Array.isArray(_data["BookDetails"])) {
        this.BookDetails = [] as any;
        for (let item of _data["BookDetails"])
          this.BookDetails!.push(SingleBookDetail.fromJS(item));
      }
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? HotelBookDetailOutputCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterHotelBookDetailOutput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelBookDetailOutput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCode"] = this.ConnectorCode;
    if (Array.isArray(this.BookDetails)) {
      data["BookDetails"] = [];
      for (let item of this.BookDetails)
        data["BookDetails"].push(item.toJSON());
    }
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelBookDetailOutput extends IBaseOutput {
  /** The Connector Code */
  ConnectorCode?: EH2HConnectorCode;
  /** List of Booking Details */
  BookDetails?: SingleBookDetail[] | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: HotelBookDetailOutputCustomData | undefined;
}

export class SingleBookDetail extends BaseBookInfos implements ISingleBookDetail {
  /** List of Hotels */
  Hotels?: SingleHotelBookResult[] | undefined;
  /** List of Extras */
  Extras?: ExtraBooked[] | undefined;
  /** List of Pax details */
  Paxes?: PaxBooked[] | undefined;
  /** Credit Card infos of the current Booking */
  CreditCardPayment?: CreditCardInfo | undefined;
  /** Total Amount of the current Booking */
  TotalAmount?: Total | undefined;
  /** Booking Notes */
  Notes?: string | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: SingleBookDetailCustomData | undefined;

  constructor(data?: ISingleBookDetail) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      if (Array.isArray(_data["Hotels"])) {
        this.Hotels = [] as any;
        for (let item of _data["Hotels"])
          this.Hotels!.push(SingleHotelBookResult.fromJS(item));
      }
      if (Array.isArray(_data["Extras"])) {
        this.Extras = [] as any;
        for (let item of _data["Extras"])
          this.Extras!.push(ExtraBooked.fromJS(item));
      }
      if (Array.isArray(_data["Paxes"])) {
        this.Paxes = [] as any;
        for (let item of _data["Paxes"])
          this.Paxes!.push(PaxBooked.fromJS(item));
      }
      this.CreditCardPayment = _data["CreditCardPayment"] ? CreditCardInfo.fromJS(_data["CreditCardPayment"]) : <any>undefined;
      this.TotalAmount = _data["TotalAmount"] ? Total.fromJS(_data["TotalAmount"]) : <any>undefined;
      this.Notes = _data["Notes"];
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? SingleBookDetailCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): SingleBookDetail {
    data = typeof data === 'object' ? data : {};
    let result = new SingleBookDetail();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.Hotels)) {
      data["Hotels"] = [];
      for (let item of this.Hotels)
        data["Hotels"].push(item.toJSON());
    }
    if (Array.isArray(this.Extras)) {
      data["Extras"] = [];
      for (let item of this.Extras)
        data["Extras"].push(item.toJSON());
    }
    if (Array.isArray(this.Paxes)) {
      data["Paxes"] = [];
      for (let item of this.Paxes)
        data["Paxes"].push(item.toJSON());
    }
    data["CreditCardPayment"] = this.CreditCardPayment ? this.CreditCardPayment.toJSON() : <any>undefined;
    data["TotalAmount"] = this.TotalAmount ? this.TotalAmount.toJSON() : <any>undefined;
    data["Notes"] = this.Notes;
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface ISingleBookDetail extends IBaseBookInfos {
  /** List of Hotels */
  Hotels?: SingleHotelBookResult[] | undefined;
  /** List of Extras */
  Extras?: ExtraBooked[] | undefined;
  /** List of Pax details */
  Paxes?: PaxBooked[] | undefined;
  /** Credit Card infos of the current Booking */
  CreditCardPayment?: CreditCardInfo | undefined;
  /** Total Amount of the current Booking */
  TotalAmount?: Total | undefined;
  /** Booking Notes */
  Notes?: string | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: SingleBookDetailCustomData | undefined;
}

export class SingleHotelBookResult extends HotelDetails implements ISingleHotelBookResult {
  /** List of Rooms */
  Rooms?: SingleRoomBookResult[] | undefined;

  constructor(data?: ISingleHotelBookResult) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      if (Array.isArray(_data["Rooms"])) {
        this.Rooms = [] as any;
        for (let item of _data["Rooms"])
          this.Rooms!.push(SingleRoomBookResult.fromJS(item));
      }
    }
  }

  static fromJS(data: any): SingleHotelBookResult {
    data = typeof data === 'object' ? data : {};
    let result = new SingleHotelBookResult();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.Rooms)) {
      data["Rooms"] = [];
      for (let item of this.Rooms)
        data["Rooms"].push(item.toJSON());
    }
    super.toJSON(data);
    return data;
  }
}

export interface ISingleHotelBookResult extends IHotelDetails {
  /** List of Rooms */
  Rooms?: SingleRoomBookResult[] | undefined;
}

export class SingleRoomBookResult extends RoomDetails implements ISingleRoomBookResult {
  /** Connector debug data */
  ConnectorDebugData?: any | undefined;
  /** Booking Status */
  BookingStatus?: EBookingStatus;
  /** Room Rates */
  Rates?: RoomBookedRatePlan[] | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: SingleRoomBookResultCustomData | undefined;

  constructor(data?: ISingleRoomBookResult) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ConnectorDebugData = _data["ConnectorDebugData"];
      this.BookingStatus = _data["BookingStatus"];
      if (Array.isArray(_data["Rates"])) {
        this.Rates = [] as any;
        for (let item of _data["Rates"])
          this.Rates!.push(RoomBookedRatePlan.fromJS(item));
      }
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? SingleRoomBookResultCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): SingleRoomBookResult {
    data = typeof data === 'object' ? data : {};
    let result = new SingleRoomBookResult();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorDebugData"] = this.ConnectorDebugData;
    data["BookingStatus"] = this.BookingStatus;
    if (Array.isArray(this.Rates)) {
      data["Rates"] = [];
      for (let item of this.Rates)
        data["Rates"].push(item.toJSON());
    }
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface ISingleRoomBookResult extends IRoomDetails {
  /** Connector debug data */
  ConnectorDebugData?: any | undefined;
  /** Booking Status */
  BookingStatus?: EBookingStatus;
  /** Room Rates */
  Rates?: RoomBookedRatePlan[] | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: SingleRoomBookResultCustomData | undefined;
}

export class RoomBookedRatePlan extends BaseRoomRatePlan implements IRoomBookedRatePlan {
  /** Start Date of the Booked Rate Plan: "yyyy-MM-dd" */
  FromDate?: string;
  /** End Date of the Booked Rate Plan: "yyyy-MM-dd" */
  ToDate?: string;

  constructor(data?: IRoomBookedRatePlan) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.FromDate = _data["FromDate"];
      this.ToDate = _data["ToDate"];
    }
  }

  static fromJS(data: any): RoomBookedRatePlan {
    data = typeof data === 'object' ? data : {};
    let result = new RoomBookedRatePlan();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["FromDate"] = this.FromDate;
    data["ToDate"] = this.ToDate;
    super.toJSON(data);
    return data;
  }
}

export interface IRoomBookedRatePlan extends IBaseRoomRatePlan {
  /** Start Date of the Booked Rate Plan: "yyyy-MM-dd" */
  FromDate?: string;
  /** End Date of the Booked Rate Plan: "yyyy-MM-dd" */
  ToDate?: string;
}

export abstract class CustomerCustomDataOfRoomBookedRatePlan implements ICustomerCustomDataOfRoomBookedRatePlan {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfRoomBookedRatePlan) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfRoomBookedRatePlan";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfRoomBookedRatePlan {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfRoomBookedRatePlan' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfRoomBookedRatePlan {
}

export abstract class SingleRoomBookResultCustomData implements ISingleRoomBookResultCustomData {

  protected _discriminator: string;

  constructor(data?: ISingleRoomBookResultCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "SingleRoomBookResultCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): SingleRoomBookResultCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "SABRE_SYNXIS") {
      let result = new SabreSynXisSingleRoomBookResultCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "IHG_GRS") {
      let result = new IHGSingleRoomBookResultCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'SingleRoomBookResultCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface ISingleRoomBookResultCustomData {
}

export class SabreSynXisSingleRoomBookResultCustomData extends SingleRoomBookResultCustomData implements ISabreSynXisSingleRoomBookResultCustomData {
  /** The RoomType Code Booked */
  RoomTypeCode?: string | undefined;
  /** The RatePlan Code Booked */
  RatePlanCode?: string | undefined;
  /** The RatePlan Id Booked */
  RatePlanId?: string | undefined;
  /** The Hotel Code Booked */
  HotelCode?: string | undefined;
  /** The Chain Code Booked */
  ChainCode?: string | undefined;
  /** Number of Units returned in the RoomType from Sabre SynXis */
  NumberOfUnits?: number;
  /** The SpecialRequest Code */
  SpecialRequestCode?: string | undefined;
  /** The SpecialRequest Description */
  SpecialRequestDescription?: string | undefined;
  /** Coupon Code if any */
  CouponCode?: string | undefined;
  /** Group Code if any */
  GroupCode?: string | undefined;
  /** The guest count related to the current room booked */
  GuestCounts?: GuestDetail[] | undefined;

  constructor(data?: ISabreSynXisSingleRoomBookResultCustomData) {
    super(data);
    this._discriminator = "SABRE_SYNXIS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.RoomTypeCode = _data["RoomTypeCode"];
      this.RatePlanCode = _data["RatePlanCode"];
      this.RatePlanId = _data["RatePlanId"];
      this.HotelCode = _data["HotelCode"];
      this.ChainCode = _data["ChainCode"];
      this.NumberOfUnits = _data["NumberOfUnits"];
      this.SpecialRequestCode = _data["SpecialRequestCode"];
      this.SpecialRequestDescription = _data["SpecialRequestDescription"];
      this.CouponCode = _data["CouponCode"];
      this.GroupCode = _data["GroupCode"];
      if (Array.isArray(_data["GuestCounts"])) {
        this.GuestCounts = [] as any;
        for (let item of _data["GuestCounts"])
          this.GuestCounts!.push(GuestDetail.fromJS(item));
      }
    }
  }

  static fromJS(data: any): SabreSynXisSingleRoomBookResultCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreSynXisSingleRoomBookResultCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["RoomTypeCode"] = this.RoomTypeCode;
    data["RatePlanCode"] = this.RatePlanCode;
    data["RatePlanId"] = this.RatePlanId;
    data["HotelCode"] = this.HotelCode;
    data["ChainCode"] = this.ChainCode;
    data["NumberOfUnits"] = this.NumberOfUnits;
    data["SpecialRequestCode"] = this.SpecialRequestCode;
    data["SpecialRequestDescription"] = this.SpecialRequestDescription;
    data["CouponCode"] = this.CouponCode;
    data["GroupCode"] = this.GroupCode;
    if (Array.isArray(this.GuestCounts)) {
      data["GuestCounts"] = [];
      for (let item of this.GuestCounts)
        data["GuestCounts"].push(item.toJSON());
    }
    super.toJSON(data);
    return data;
  }
}

export interface ISabreSynXisSingleRoomBookResultCustomData extends ISingleRoomBookResultCustomData {
  /** The RoomType Code Booked */
  RoomTypeCode?: string | undefined;
  /** The RatePlan Code Booked */
  RatePlanCode?: string | undefined;
  /** The RatePlan Id Booked */
  RatePlanId?: string | undefined;
  /** The Hotel Code Booked */
  HotelCode?: string | undefined;
  /** The Chain Code Booked */
  ChainCode?: string | undefined;
  /** Number of Units returned in the RoomType from Sabre SynXis */
  NumberOfUnits?: number;
  /** The SpecialRequest Code */
  SpecialRequestCode?: string | undefined;
  /** The SpecialRequest Description */
  SpecialRequestDescription?: string | undefined;
  /** Coupon Code if any */
  CouponCode?: string | undefined;
  /** Group Code if any */
  GroupCode?: string | undefined;
  /** The guest count related to the current room booked */
  GuestCounts?: GuestDetail[] | undefined;
}

export class GuestDetail implements IGuestDetail {
  /** Pax Type */
  Type?: EPaxType;
  /** Pax Age */
  Age?: number | undefined;

  constructor(data?: IGuestDetail) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Type = _data["Type"];
      this.Age = _data["Age"];
    }
  }

  static fromJS(data: any): GuestDetail {
    data = typeof data === 'object' ? data : {};
    let result = new GuestDetail();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Type"] = this.Type;
    data["Age"] = this.Age;
    return data;
  }
}

export interface IGuestDetail {
  /** Pax Type */
  Type?: EPaxType;
  /** Pax Age */
  Age?: number | undefined;
}

export class IHGSingleRoomBookResultCustomData extends SingleRoomBookResultCustomData implements IIHGSingleRoomBookResultCustomData {
  /** Quantity of the Room */
  Quantity?: number;
  /** Adults number */
  Adults?: number | undefined;
  /** Children Number */
  Children?: number | undefined;

  constructor(data?: IIHGSingleRoomBookResultCustomData) {
    super(data);
    this._discriminator = "IHG_GRS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Quantity = _data["Quantity"];
      this.Adults = _data["Adults"];
      this.Children = _data["Children"];
    }
  }

  static fromJS(data: any): IHGSingleRoomBookResultCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new IHGSingleRoomBookResultCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Quantity"] = this.Quantity;
    data["Adults"] = this.Adults;
    data["Children"] = this.Children;
    super.toJSON(data);
    return data;
  }
}

export interface IIHGSingleRoomBookResultCustomData extends ISingleRoomBookResultCustomData {
  /** Quantity of the Room */
  Quantity?: number;
  /** Adults number */
  Adults?: number | undefined;
  /** Children Number */
  Children?: number | undefined;
}

export abstract class CustomerCustomDataOfSingleRoomBookResult implements ICustomerCustomDataOfSingleRoomBookResult {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfSingleRoomBookResult) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfSingleRoomBookResult";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfSingleRoomBookResult {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfSingleRoomBookResult' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfSingleRoomBookResult {
}

export abstract class CustomerCustomDataOfSingleHotelBookResult implements ICustomerCustomDataOfSingleHotelBookResult {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfSingleHotelBookResult) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfSingleHotelBookResult";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfSingleHotelBookResult {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfSingleHotelBookResult' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfSingleHotelBookResult {
}

export class ExtraBooked extends ExtraDetails implements IExtraBooked {
  /** The booking status on the current Extra */
  BookingStatus?: EBookingStatus;
  /** Connector Custom Data */
  ConnectorCustomData?: ExtraBookedCustomData | undefined;

  constructor(data?: IExtraBooked) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.BookingStatus = _data["BookingStatus"];
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? ExtraBookedCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): ExtraBooked {
    data = typeof data === 'object' ? data : {};
    let result = new ExtraBooked();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["BookingStatus"] = this.BookingStatus;
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IExtraBooked extends IExtraDetails {
  /** The booking status on the current Extra */
  BookingStatus?: EBookingStatus;
  /** Connector Custom Data */
  ConnectorCustomData?: ExtraBookedCustomData | undefined;
}

export abstract class ExtraBookedCustomData implements IExtraBookedCustomData {

  protected _discriminator: string;

  constructor(data?: IExtraBookedCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "ExtraBookedCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): ExtraBookedCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "OKKAMI") {
      let result = new OkkamiExtraBookedCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'ExtraBookedCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IExtraBookedCustomData {
}

export class OkkamiExtraBookedCustomData extends ExtraBookedCustomData implements IOkkamiExtraBookedCustomData {
  /** Selected Options in string
   ES. "How many Children? 1 (+THB800)" */
  Options?: string | undefined;

  constructor(data?: IOkkamiExtraBookedCustomData) {
    super(data);
    this._discriminator = "OKKAMI";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Options = _data["Options"];
    }
  }

  static fromJS(data: any): OkkamiExtraBookedCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new OkkamiExtraBookedCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Options"] = this.Options;
    super.toJSON(data);
    return data;
  }
}

export interface IOkkamiExtraBookedCustomData extends IExtraBookedCustomData {
  /** Selected Options in string
   ES. "How many Children? 1 (+THB800)" */
  Options?: string | undefined;
}

export abstract class CustomerCustomDataOfExtraBooked implements ICustomerCustomDataOfExtraBooked {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfExtraBooked) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfExtraBooked";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfExtraBooked {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfExtraBooked' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfExtraBooked {
}

export class PaxBooked extends PaxDetails implements IPaxBooked {
  /** Define if the Pax is the leader of the Book reservation */
  IsLeader?: boolean;

  constructor(data?: IPaxBooked) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.IsLeader = _data["IsLeader"];
    }
  }

  static fromJS(data: any): PaxBooked {
    data = typeof data === 'object' ? data : {};
    let result = new PaxBooked();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["IsLeader"] = this.IsLeader;
    super.toJSON(data);
    return data;
  }
}

export interface IPaxBooked extends IPaxDetails {
  /** Define if the Pax is the leader of the Book reservation */
  IsLeader?: boolean;
}

export abstract class CustomerCustomDataOfPaxBooked implements ICustomerCustomDataOfPaxBooked {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfPaxBooked) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfPaxBooked";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfPaxBooked {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfPaxBooked' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfPaxBooked {
}

export abstract class SingleBookDetailCustomData implements ISingleBookDetailCustomData {

  protected _discriminator: string;

  constructor(data?: ISingleBookDetailCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "SingleBookDetailCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): SingleBookDetailCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "SABRE_SYNXIS") {
      let result = new SabreSynXisSingleBookDetailCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "IHG_GRS") {
      let result = new IHGSingleBookDetailCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'SingleBookDetailCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface ISingleBookDetailCustomData {
}

export class SabreSynXisSingleBookDetailCustomData extends SingleBookDetailCustomData implements ISabreSynXisSingleBookDetailCustomData {
  /** Define if the Book is an Itinerary */
  IsItinerary?: boolean;
  /** List of SabreBookingReference

   If itinerary it'll have all the related bookings */
  SabreReservationReferences?: SabreBookingReference[] | undefined;
  /** Define if the booking can be cancelled */
  IsCancellable?: boolean | undefined;
  /** The Hotel Code, used for verification on SabreSynXis */
  HotelCode?: string | undefined;
  /** The Chain Code if present, used for verification on SabreSynXis */
  ChainCode?: string | undefined;
  /** Transportation Infos - Arrival By */
  ArrivalBy?: TransportInfo | undefined;
  /** Transportation Infos - Departure By */
  DepartureBy?: TransportInfo | undefined;

  constructor(data?: ISabreSynXisSingleBookDetailCustomData) {
    super(data);
    this._discriminator = "SABRE_SYNXIS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.IsItinerary = _data["IsItinerary"];
      if (Array.isArray(_data["SabreReservationReferences"])) {
        this.SabreReservationReferences = [] as any;
        for (let item of _data["SabreReservationReferences"])
          this.SabreReservationReferences!.push(SabreBookingReference.fromJS(item));
      }
      this.IsCancellable = _data["IsCancellable"];
      this.HotelCode = _data["HotelCode"];
      this.ChainCode = _data["ChainCode"];
      this.ArrivalBy = _data["ArrivalBy"] ? TransportInfo.fromJS(_data["ArrivalBy"]) : <any>undefined;
      this.DepartureBy = _data["DepartureBy"] ? TransportInfo.fromJS(_data["DepartureBy"]) : <any>undefined;
    }
  }

  static fromJS(data: any): SabreSynXisSingleBookDetailCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreSynXisSingleBookDetailCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["IsItinerary"] = this.IsItinerary;
    if (Array.isArray(this.SabreReservationReferences)) {
      data["SabreReservationReferences"] = [];
      for (let item of this.SabreReservationReferences)
        data["SabreReservationReferences"].push(item.toJSON());
    }
    data["IsCancellable"] = this.IsCancellable;
    data["HotelCode"] = this.HotelCode;
    data["ChainCode"] = this.ChainCode;
    data["ArrivalBy"] = this.ArrivalBy ? this.ArrivalBy.toJSON() : <any>undefined;
    data["DepartureBy"] = this.DepartureBy ? this.DepartureBy.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface ISabreSynXisSingleBookDetailCustomData extends ISingleBookDetailCustomData {
  /** Define if the Book is an Itinerary */
  IsItinerary?: boolean;
  /** List of SabreBookingReference

   If itinerary it'll have all the related bookings */
  SabreReservationReferences?: SabreBookingReference[] | undefined;
  /** Define if the booking can be cancelled */
  IsCancellable?: boolean | undefined;
  /** The Hotel Code, used for verification on SabreSynXis */
  HotelCode?: string | undefined;
  /** The Chain Code if present, used for verification on SabreSynXis */
  ChainCode?: string | undefined;
  /** Transportation Infos - Arrival By */
  ArrivalBy?: TransportInfo | undefined;
  /** Transportation Infos - Departure By */
  DepartureBy?: TransportInfo | undefined;
}

export class IHGSingleBookDetailCustomData extends SingleBookDetailCustomData implements IIHGSingleBookDetailCustomData {
  /** IHG Booking Reference list */
  IhgBookingReferences?: IHGBookingReference[] | undefined;
  /** IHG Cancellation Number */
  IhgCancellationNumber?: string | undefined;
  /** Transportation Infos - Arrival Transport */
  ArrivalTransport?: Transportation | undefined;
  /** Transportation Infos - Departure Transport */
  DepartureTransport?: Transportation | undefined;
  /** Payment By Points details if returned by IHG */
  PaymentByPoints?: BookPaymentByPoints | undefined;
  /** Travel Agency Number Used on IHG as IATA */
  TravelAgencyNumber?: string | undefined;
  /** Corporate account for the book
   Corporate discount Number entered for reservation
   sent in the corporateNumber and returned in the node corporateAccountInfo */
  CorporateAccount?: string | undefined;

  constructor(data?: IIHGSingleBookDetailCustomData) {
    super(data);
    this._discriminator = "IHG_GRS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      if (Array.isArray(_data["IhgBookingReferences"])) {
        this.IhgBookingReferences = [] as any;
        for (let item of _data["IhgBookingReferences"])
          this.IhgBookingReferences!.push(IHGBookingReference.fromJS(item));
      }
      this.IhgCancellationNumber = _data["IhgCancellationNumber"];
      this.ArrivalTransport = _data["ArrivalTransport"] ? Transportation.fromJS(_data["ArrivalTransport"]) : <any>undefined;
      this.DepartureTransport = _data["DepartureTransport"] ? Transportation.fromJS(_data["DepartureTransport"]) : <any>undefined;
      this.PaymentByPoints = _data["PaymentByPoints"] ? BookPaymentByPoints.fromJS(_data["PaymentByPoints"]) : <any>undefined;
      this.TravelAgencyNumber = _data["TravelAgencyNumber"];
      this.CorporateAccount = _data["CorporateAccount"];
    }
  }

  static fromJS(data: any): IHGSingleBookDetailCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new IHGSingleBookDetailCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.IhgBookingReferences)) {
      data["IhgBookingReferences"] = [];
      for (let item of this.IhgBookingReferences)
        data["IhgBookingReferences"].push(item.toJSON());
    }
    data["IhgCancellationNumber"] = this.IhgCancellationNumber;
    data["ArrivalTransport"] = this.ArrivalTransport ? this.ArrivalTransport.toJSON() : <any>undefined;
    data["DepartureTransport"] = this.DepartureTransport ? this.DepartureTransport.toJSON() : <any>undefined;
    data["PaymentByPoints"] = this.PaymentByPoints ? this.PaymentByPoints.toJSON() : <any>undefined;
    data["TravelAgencyNumber"] = this.TravelAgencyNumber;
    data["CorporateAccount"] = this.CorporateAccount;
    super.toJSON(data);
    return data;
  }
}

export interface IIHGSingleBookDetailCustomData extends ISingleBookDetailCustomData {
  /** IHG Booking Reference list */
  IhgBookingReferences?: IHGBookingReference[] | undefined;
  /** IHG Cancellation Number */
  IhgCancellationNumber?: string | undefined;
  /** Transportation Infos - Arrival Transport */
  ArrivalTransport?: Transportation | undefined;
  /** Transportation Infos - Departure Transport */
  DepartureTransport?: Transportation | undefined;
  /** Payment By Points details if returned by IHG */
  PaymentByPoints?: BookPaymentByPoints | undefined;
  /** Travel Agency Number Used on IHG as IATA */
  TravelAgencyNumber?: string | undefined;
  /** Corporate account for the book
   Corporate discount Number entered for reservation
   sent in the corporateNumber and returned in the node corporateAccountInfo */
  CorporateAccount?: string | undefined;
}

export class BookPaymentByPoints implements IBookPaymentByPoints {
  /** paymentByPoints -&gt; Daily Points amount */
  DailyPoints?: number | undefined;
  /** paymentByPoints -&gt; Total Points amount */
  TotalPoints?: number | undefined;

  constructor(data?: IBookPaymentByPoints) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.DailyPoints = _data["DailyPoints"];
      this.TotalPoints = _data["TotalPoints"];
    }
  }

  static fromJS(data: any): BookPaymentByPoints {
    data = typeof data === 'object' ? data : {};
    let result = new BookPaymentByPoints();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["DailyPoints"] = this.DailyPoints;
    data["TotalPoints"] = this.TotalPoints;
    return data;
  }
}

export interface IBookPaymentByPoints {
  /** paymentByPoints -&gt; Daily Points amount */
  DailyPoints?: number | undefined;
  /** paymentByPoints -&gt; Total Points amount */
  TotalPoints?: number | undefined;
}

export abstract class CustomerCustomDataOfSingleBookDetail implements ICustomerCustomDataOfSingleBookDetail {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfSingleBookDetail) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfSingleBookDetail";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfSingleBookDetail {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfSingleBookDetail' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfSingleBookDetail {
}

export abstract class HotelBookDetailOutputCustomData implements IHotelBookDetailOutputCustomData {
  CustomDataConnectorCode?: string | undefined;

  constructor(data?: IHotelBookDetailOutputCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.CustomDataConnectorCode = _data["CustomDataConnectorCode"];
    }
  }

  static fromJS(data: any): HotelBookDetailOutputCustomData {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'HotelBookDetailOutputCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this.CustomDataConnectorCode;
    return data;
  }
}

export interface IHotelBookDetailOutputCustomData {
  CustomDataConnectorCode?: string | undefined;
}

export abstract class CustomerCustomDataOfJupiterHotelBookDetailOutput implements ICustomerCustomDataOfJupiterHotelBookDetailOutput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterHotelBookDetailOutput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterHotelBookDetailOutput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterHotelBookDetailOutput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterHotelBookDetailOutput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterHotelBookDetailOutput {
}

export class JupiterHotelBookDetailRQ extends BaseRQ implements IJupiterHotelBookDetailRQ {
  /** JupiterHotelBookDetailInput Request */
  Request?: JupiterHotelBookDetailInput | undefined;

  constructor(data?: IJupiterHotelBookDetailRQ) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Request = _data["Request"] ? JupiterHotelBookDetailInput.fromJS(_data["Request"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterHotelBookDetailRQ {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelBookDetailRQ();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Request"] = this.Request ? this.Request.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelBookDetailRQ extends IBaseRQ {
  /** JupiterHotelBookDetailInput Request */
  Request?: JupiterHotelBookDetailInput | undefined;
}

export class JupiterHotelBookDetailInput extends BaseInput implements IJupiterHotelBookDetailInput {
  /** The Connector Code */
  ConnectorCode?: EH2HConnectorCode;
  /** The Connector Booking Reference */
  ConnectorBookingReference?: string | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: HotelBookDetailInputCustomData | undefined;

  constructor(data?: IJupiterHotelBookDetailInput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ConnectorCode = _data["ConnectorCode"];
      this.ConnectorBookingReference = _data["ConnectorBookingReference"];
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? HotelBookDetailInputCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterHotelBookDetailInput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelBookDetailInput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCode"] = this.ConnectorCode;
    data["ConnectorBookingReference"] = this.ConnectorBookingReference;
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelBookDetailInput extends IBaseInput {
  /** The Connector Code */
  ConnectorCode?: EH2HConnectorCode;
  /** The Connector Booking Reference */
  ConnectorBookingReference?: string | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: HotelBookDetailInputCustomData | undefined;
}

export abstract class HotelBookDetailInputCustomData implements IHotelBookDetailInputCustomData {

  protected _discriminator: string;

  constructor(data?: IHotelBookDetailInputCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "HotelBookDetailInputCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): HotelBookDetailInputCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "SABRE_SYNXIS") {
      let result = new SabreSynXisHotelBookDetailInputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "IHG_GRS") {
      let result = new IHGHotelBookDetailInputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "OKKAMI") {
      let result = new OkkamiHotelBookDetailInputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "CREOLE") {
      let result = new CreoleHotelBookDetailInputCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'HotelBookDetailInputCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IHotelBookDetailInputCustomData {
}

export class SabreSynXisHotelBookDetailInputCustomData extends HotelBookDetailInputCustomData implements ISabreSynXisHotelBookDetailInputCustomData {
  /** The Sub Source Code passed to Sabre in the POS
   If null or empty it'll use the default value sent by Sabre related to the Login Test/Production */
  ChannelSubSourceCode?: string | undefined;
  /** The SabreBookingReference returned during booking */
  SabreBookingReference?: SabreBookingReference | undefined;
  /** The Hotel Code, used for verification on SabreSynXis */
  HotelCode?: string | undefined;
  /** The Chain Code if present, used for verification on SabreSynXis */
  ChainCode?: string | undefined;

  constructor(data?: ISabreSynXisHotelBookDetailInputCustomData) {
    super(data);
    this._discriminator = "SABRE_SYNXIS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ChannelSubSourceCode = _data["ChannelSubSourceCode"];
      this.SabreBookingReference = _data["SabreBookingReference"] ? SabreBookingReference.fromJS(_data["SabreBookingReference"]) : <any>undefined;
      this.HotelCode = _data["HotelCode"];
      this.ChainCode = _data["ChainCode"];
    }
  }

  static fromJS(data: any): SabreSynXisHotelBookDetailInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreSynXisHotelBookDetailInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ChannelSubSourceCode"] = this.ChannelSubSourceCode;
    data["SabreBookingReference"] = this.SabreBookingReference ? this.SabreBookingReference.toJSON() : <any>undefined;
    data["HotelCode"] = this.HotelCode;
    data["ChainCode"] = this.ChainCode;
    super.toJSON(data);
    return data;
  }
}

export interface ISabreSynXisHotelBookDetailInputCustomData extends IHotelBookDetailInputCustomData {
  /** The Sub Source Code passed to Sabre in the POS
   If null or empty it'll use the default value sent by Sabre related to the Login Test/Production */
  ChannelSubSourceCode?: string | undefined;
  /** The SabreBookingReference returned during booking */
  SabreBookingReference?: SabreBookingReference | undefined;
  /** The Hotel Code, used for verification on SabreSynXis */
  HotelCode?: string | undefined;
  /** The Chain Code if present, used for verification on SabreSynXis */
  ChainCode?: string | undefined;
}

export class IHGHotelBookDetailInputCustomData extends HotelBookDetailInputCustomData implements IIHGHotelBookDetailInputCustomData {
  /** Passed to IHG as Header X-IHG-SSO-TOKEN
   Authentication token to verify the user's identity. If provided this will allow additional rates / discounts. */
  IhgSsoToken?: string | undefined;
  /** Passed to IHG as Header IHG-SESSION-ID
   Session Id used for analytics to tie shop and book requests. */
  IhgSessionId?: string | undefined;
  /** Passed to IHG as Header IHG-POS
   Point of Sale header to capture the agency information, agent information etc. This object has to match ihgRequestPos object defined in this contract. */
  IhgPos?: string | undefined;
  /** Passed to IHG as Header X-IHG-AGENT-TOKEN
   Authentication token to verify the cro agent. */
  IhgAgentToken?: string | undefined;
  /** Passed to IHG as Header IHG_IMPERSONATOR_ID
   This header enables the end user ( Supervisor ) to impersonate a sub-ordinate user. */
  IhgImpersonatorId?: string | undefined;
  /** Passed to IHG as Header IHG-LANGUAGE
   This header indicates the end user's language preference as determined by the API consumer. Text fields may be translated into the given language in the response. The format of the header is language-LOCALE (e.g., en-US) with both language and locale values being case sensitive.
   Default value : en-US */
  IhgLanguage?: string | undefined;
  /** Passed to IHG as Header X-Accept-Currency
   ISO 4217 alphabetic currency code to be used in the response, as applicable, for prices and charges.
   Default value : USD */
  AcceptCurrency?: string | undefined;
  /** Leader Pax Last Name */
  LastName!: string;
  /** The Okkami Property UID
   Used for NRI Extras over Okkami API */
  OkkamiPropertyUid?: string | undefined;

  constructor(data?: IIHGHotelBookDetailInputCustomData) {
    super(data);
    this._discriminator = "IHG_GRS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.IhgSsoToken = _data["IhgSsoToken"];
      this.IhgSessionId = _data["IhgSessionId"];
      this.IhgPos = _data["IhgPos"];
      this.IhgAgentToken = _data["IhgAgentToken"];
      this.IhgImpersonatorId = _data["IhgImpersonatorId"];
      this.IhgLanguage = _data["IhgLanguage"];
      this.AcceptCurrency = _data["AcceptCurrency"];
      this.LastName = _data["LastName"];
      this.OkkamiPropertyUid = _data["OkkamiPropertyUid"];
    }
  }

  static fromJS(data: any): IHGHotelBookDetailInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new IHGHotelBookDetailInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["IhgSsoToken"] = this.IhgSsoToken;
    data["IhgSessionId"] = this.IhgSessionId;
    data["IhgPos"] = this.IhgPos;
    data["IhgAgentToken"] = this.IhgAgentToken;
    data["IhgImpersonatorId"] = this.IhgImpersonatorId;
    data["IhgLanguage"] = this.IhgLanguage;
    data["AcceptCurrency"] = this.AcceptCurrency;
    data["LastName"] = this.LastName;
    data["OkkamiPropertyUid"] = this.OkkamiPropertyUid;
    super.toJSON(data);
    return data;
  }
}

export interface IIHGHotelBookDetailInputCustomData extends IHotelBookDetailInputCustomData {
  /** Passed to IHG as Header X-IHG-SSO-TOKEN
   Authentication token to verify the user's identity. If provided this will allow additional rates / discounts. */
  IhgSsoToken?: string | undefined;
  /** Passed to IHG as Header IHG-SESSION-ID
   Session Id used for analytics to tie shop and book requests. */
  IhgSessionId?: string | undefined;
  /** Passed to IHG as Header IHG-POS
   Point of Sale header to capture the agency information, agent information etc. This object has to match ihgRequestPos object defined in this contract. */
  IhgPos?: string | undefined;
  /** Passed to IHG as Header X-IHG-AGENT-TOKEN
   Authentication token to verify the cro agent. */
  IhgAgentToken?: string | undefined;
  /** Passed to IHG as Header IHG_IMPERSONATOR_ID
   This header enables the end user ( Supervisor ) to impersonate a sub-ordinate user. */
  IhgImpersonatorId?: string | undefined;
  /** Passed to IHG as Header IHG-LANGUAGE
   This header indicates the end user's language preference as determined by the API consumer. Text fields may be translated into the given language in the response. The format of the header is language-LOCALE (e.g., en-US) with both language and locale values being case sensitive.
   Default value : en-US */
  IhgLanguage?: string | undefined;
  /** Passed to IHG as Header X-Accept-Currency
   ISO 4217 alphabetic currency code to be used in the response, as applicable, for prices and charges.
   Default value : USD */
  AcceptCurrency?: string | undefined;
  /** Leader Pax Last Name */
  LastName: string;
  /** The Okkami Property UID
   Used for NRI Extras over Okkami API */
  OkkamiPropertyUid?: string | undefined;
}

export class OkkamiHotelBookDetailInputCustomData extends HotelBookDetailInputCustomData implements IOkkamiHotelBookDetailInputCustomData {
  /** The Okkami Property UID
   Used for NRI Extras over Okkami API */
  PropertyUid?: string | undefined;

  constructor(data?: IOkkamiHotelBookDetailInputCustomData) {
    super(data);
    this._discriminator = "OKKAMI";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.PropertyUid = _data["PropertyUid"];
    }
  }

  static fromJS(data: any): OkkamiHotelBookDetailInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new OkkamiHotelBookDetailInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["PropertyUid"] = this.PropertyUid;
    super.toJSON(data);
    return data;
  }
}

export interface IOkkamiHotelBookDetailInputCustomData extends IHotelBookDetailInputCustomData {
  /** The Okkami Property UID
   Used for NRI Extras over Okkami API */
  PropertyUid?: string | undefined;
}

export class CreoleHotelBookDetailInputCustomData extends HotelBookDetailInputCustomData implements ICreoleHotelBookDetailInputCustomData {
  /** If the value is true, it will show the full price object with all the information about the prices.
   If not specified, false is assumed by default.  */
  BreakdownPrice?: boolean | undefined;

  constructor(data?: ICreoleHotelBookDetailInputCustomData) {
    super(data);
    this._discriminator = "CREOLE";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.BreakdownPrice = _data["BreakdownPrice"];
    }
  }

  static fromJS(data: any): CreoleHotelBookDetailInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new CreoleHotelBookDetailInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["BreakdownPrice"] = this.BreakdownPrice;
    super.toJSON(data);
    return data;
  }
}

export interface ICreoleHotelBookDetailInputCustomData extends IHotelBookDetailInputCustomData {
  /** If the value is true, it will show the full price object with all the information about the prices.
   If not specified, false is assumed by default.  */
  BreakdownPrice?: boolean | undefined;
}

export abstract class CustomerCustomDataOfJupiterHotelBookDetailInput implements ICustomerCustomDataOfJupiterHotelBookDetailInput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterHotelBookDetailInput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterHotelBookDetailInput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterHotelBookDetailInput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterHotelBookDetailInput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterHotelBookDetailInput {
}

export class JupiterHotelPriceVerifyRS extends BaseRS implements IJupiterHotelPriceVerifyRS {
  /** JupiterHotelPriceVerifyOutput Response */
  Response?: JupiterHotelPriceVerifyOutput | undefined;

  constructor(data?: IJupiterHotelPriceVerifyRS) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Response = _data["Response"] ? JupiterHotelPriceVerifyOutput.fromJS(_data["Response"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterHotelPriceVerifyRS {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelPriceVerifyRS();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Response"] = this.Response ? this.Response.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelPriceVerifyRS extends IBaseRS {
  /** JupiterHotelPriceVerifyOutput Response */
  Response?: JupiterHotelPriceVerifyOutput | undefined;
}

export class JupiterHotelPriceVerifyOutput extends BaseOutput implements IJupiterHotelPriceVerifyOutput {
  /** List of Hotel Results */
  Hotels?: SingleHotelAvailResult[] | undefined;

  constructor(data?: IJupiterHotelPriceVerifyOutput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      if (Array.isArray(_data["Hotels"])) {
        this.Hotels = [] as any;
        for (let item of _data["Hotels"])
          this.Hotels!.push(SingleHotelAvailResult.fromJS(item));
      }
    }
  }

  static fromJS(data: any): JupiterHotelPriceVerifyOutput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelPriceVerifyOutput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.Hotels)) {
      data["Hotels"] = [];
      for (let item of this.Hotels)
        data["Hotels"].push(item.toJSON());
    }
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelPriceVerifyOutput extends IBaseOutput {
  /** List of Hotel Results */
  Hotels?: SingleHotelAvailResult[] | undefined;
}

export abstract class CustomerCustomDataOfJupiterHotelPriceVerifyOutput implements ICustomerCustomDataOfJupiterHotelPriceVerifyOutput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterHotelPriceVerifyOutput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterHotelPriceVerifyOutput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterHotelPriceVerifyOutput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterHotelPriceVerifyOutput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterHotelPriceVerifyOutput {
}

export class JupiterHotelPriceVerifyRQ extends BaseRQ implements IJupiterHotelPriceVerifyRQ {
  /** JupiterHotelPriceVerifyInput Request */
  Request?: JupiterHotelPriceVerifyInput | undefined;

  constructor(data?: IJupiterHotelPriceVerifyRQ) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Request = _data["Request"] ? JupiterHotelPriceVerifyInput.fromJS(_data["Request"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterHotelPriceVerifyRQ {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelPriceVerifyRQ();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Request"] = this.Request ? this.Request.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelPriceVerifyRQ extends IBaseRQ {
  /** JupiterHotelPriceVerifyInput Request */
  Request?: JupiterHotelPriceVerifyInput | undefined;
}

export class JupiterHotelPriceVerifyInput extends BaseInput implements IJupiterHotelPriceVerifyInput {
  /** Start Date of the stay with format: "yyyy-MM-dd" */
  FromDate!: string;
  /** End Date of the stay with format: "yyyy-MM-dd" */
  ToDate!: string;
  /** List of Connectors code to search. If null search on all Enable Connectors */
  ConnectorsSearchOnly?: EH2HConnectorCode[] | undefined;
  /** Room List that will be searched on the Connectors */
  Rooms!: RoomRequest[];
  /** Preferred Currency to search. Depends on Connectors if the features is available */
  PreferredCurrency?: string | undefined;
  /** Preferred Language to search. Depends on Connectors if the features is available */
  PreferredLanguage?: string | undefined;
  /** Dictionary of Connectors search Settings */
  ConnectorsSettings!: AvailabilityInputCustomData[];

  constructor(data?: IJupiterHotelPriceVerifyInput) {
    super(data);
    if (!data) {
      this.Rooms = [];
      this.ConnectorsSettings = [];
    }
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.FromDate = _data["FromDate"];
      this.ToDate = _data["ToDate"];
      if (Array.isArray(_data["ConnectorsSearchOnly"])) {
        this.ConnectorsSearchOnly = [] as any;
        for (let item of _data["ConnectorsSearchOnly"])
          this.ConnectorsSearchOnly!.push(item);
      }
      if (Array.isArray(_data["Rooms"])) {
        this.Rooms = [] as any;
        for (let item of _data["Rooms"])
          this.Rooms!.push(RoomRequest.fromJS(item));
      }
      this.PreferredCurrency = _data["PreferredCurrency"];
      this.PreferredLanguage = _data["PreferredLanguage"];
      if (Array.isArray(_data["ConnectorsSettings"])) {
        this.ConnectorsSettings = [] as any;
        for (let item of _data["ConnectorsSettings"])
          this.ConnectorsSettings!.push(AvailabilityInputCustomData.fromJS(item));
      }
    }
  }

  static fromJS(data: any): JupiterHotelPriceVerifyInput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterHotelPriceVerifyInput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["FromDate"] = this.FromDate;
    data["ToDate"] = this.ToDate;
    if (Array.isArray(this.ConnectorsSearchOnly)) {
      data["ConnectorsSearchOnly"] = [];
      for (let item of this.ConnectorsSearchOnly)
        data["ConnectorsSearchOnly"].push(item);
    }
    if (Array.isArray(this.Rooms)) {
      data["Rooms"] = [];
      for (let item of this.Rooms)
        data["Rooms"].push(item.toJSON());
    }
    data["PreferredCurrency"] = this.PreferredCurrency;
    data["PreferredLanguage"] = this.PreferredLanguage;
    if (Array.isArray(this.ConnectorsSettings)) {
      data["ConnectorsSettings"] = [];
      for (let item of this.ConnectorsSettings)
        data["ConnectorsSettings"].push(item.toJSON());
    }
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterHotelPriceVerifyInput extends IBaseInput {
  /** Start Date of the stay with format: "yyyy-MM-dd" */
  FromDate: string;
  /** End Date of the stay with format: "yyyy-MM-dd" */
  ToDate: string;
  /** List of Connectors code to search. If null search on all Enable Connectors */
  ConnectorsSearchOnly?: EH2HConnectorCode[] | undefined;
  /** Room List that will be searched on the Connectors */
  Rooms: RoomRequest[];
  /** Preferred Currency to search. Depends on Connectors if the features is available */
  PreferredCurrency?: string | undefined;
  /** Preferred Language to search. Depends on Connectors if the features is available */
  PreferredLanguage?: string | undefined;
  /** Dictionary of Connectors search Settings */
  ConnectorsSettings: AvailabilityInputCustomData[];
}

export abstract class CustomerCustomDataOfJupiterHotelPriceVerifyInput implements ICustomerCustomDataOfJupiterHotelPriceVerifyInput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterHotelPriceVerifyInput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterHotelPriceVerifyInput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterHotelPriceVerifyInput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterHotelPriceVerifyInput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterHotelPriceVerifyInput {
}

export class JupiterTrainAvailabilityRS extends BaseCacheableRS implements IJupiterTrainAvailabilityRS {
  Response?: JupiterTrainAvailabilityOutput | undefined;

  constructor(data?: IJupiterTrainAvailabilityRS) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Response = _data["Response"] ? JupiterTrainAvailabilityOutput.fromJS(_data["Response"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterTrainAvailabilityRS {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterTrainAvailabilityRS();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Response"] = this.Response ? this.Response.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterTrainAvailabilityRS extends IBaseCacheableRS {
  Response?: JupiterTrainAvailabilityOutput | undefined;
}

export class JupiterTrainAvailabilityOutput extends BaseOutput implements IJupiterTrainAvailabilityOutput {
  TrainResults?: SingleTrainAvailResult[] | undefined;

  constructor(data?: IJupiterTrainAvailabilityOutput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      if (Array.isArray(_data["TrainResults"])) {
        this.TrainResults = [] as any;
        for (let item of _data["TrainResults"])
          this.TrainResults!.push(SingleTrainAvailResult.fromJS(item));
      }
    }
  }

  static fromJS(data: any): JupiterTrainAvailabilityOutput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterTrainAvailabilityOutput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.TrainResults)) {
      data["TrainResults"] = [];
      for (let item of this.TrainResults)
        data["TrainResults"].push(item.toJSON());
    }
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterTrainAvailabilityOutput extends IBaseOutput {
  TrainResults?: SingleTrainAvailResult[] | undefined;
}

export class SingleTrainAvailResult implements ISingleTrainAvailResult {
  Id?: string | undefined;
  /** Calculated Train Result Key

   It has all the infos of the segments in a string key

   Can be used to merge results form different Connectors */
  ResultKey?: string | undefined;
  TrainSegments?: TrainSegmentResult[] | undefined;
  TotalDuration?: string | undefined;
  SolutionFareList?: TrainFareGroupResult[] | undefined;

  constructor(data?: ISingleTrainAvailResult) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Id = _data["Id"];
      this.ResultKey = _data["ResultKey"];
      if (Array.isArray(_data["TrainSegments"])) {
        this.TrainSegments = [] as any;
        for (let item of _data["TrainSegments"])
          this.TrainSegments!.push(TrainSegmentResult.fromJS(item));
      }
      this.TotalDuration = _data["TotalDuration"];
      if (Array.isArray(_data["SolutionFareList"])) {
        this.SolutionFareList = [] as any;
        for (let item of _data["SolutionFareList"])
          this.SolutionFareList!.push(TrainFareGroupResult.fromJS(item));
      }
    }
  }

  static fromJS(data: any): SingleTrainAvailResult {
    data = typeof data === 'object' ? data : {};
    let result = new SingleTrainAvailResult();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Id"] = this.Id;
    data["ResultKey"] = this.ResultKey;
    if (Array.isArray(this.TrainSegments)) {
      data["TrainSegments"] = [];
      for (let item of this.TrainSegments)
        data["TrainSegments"].push(item.toJSON());
    }
    data["TotalDuration"] = this.TotalDuration;
    if (Array.isArray(this.SolutionFareList)) {
      data["SolutionFareList"] = [];
      for (let item of this.SolutionFareList)
        data["SolutionFareList"].push(item.toJSON());
    }
    return data;
  }
}

export interface ISingleTrainAvailResult {
  Id?: string | undefined;
  /** Calculated Train Result Key

   It has all the infos of the segments in a string key

   Can be used to merge results form different Connectors */
  ResultKey?: string | undefined;
  TrainSegments?: TrainSegmentResult[] | undefined;
  TotalDuration?: string | undefined;
  SolutionFareList?: TrainFareGroupResult[] | undefined;
}

export class TrainSegment implements ITrainSegment {
  /** Train Segment Id */
  Id?: string | undefined;
  /** Calculated Train Segment Key */
  SegmentKey?: string | undefined;
  /** Id used to group the train steps
   1 way - A/R - Multi step
   Must be a nr. 0 Based in order to merge results automatically */
  StepGroupId?: string | undefined;
  /** The Connection Time on the DepartureStation for the current Segment
   Format d.hh:mm:ss */
  ConnectionTime?: string | undefined;
  /** Departure DateTime of the Segment */
  DepartureDate?: string;
  /** Departure Station and Terminal of the Segment */
  DepartureStation?: TrainStation | undefined;
  /** Arrival DateTime of the Segment */
  ArrivalDate?: string;
  /** Arrival Station and Terminal of the Segment */
  ArrivalStation?: TrainStation | undefined;
  /** Segment Duration
   Format d.hh:mm:ss */
  Duration?: string | undefined;
  /** Train Infos */
  Train?: TrainDetails | undefined;

  constructor(data?: ITrainSegment) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Id = _data["Id"];
      this.SegmentKey = _data["SegmentKey"];
      this.StepGroupId = _data["StepGroupId"];
      this.ConnectionTime = _data["ConnectionTime"];
      this.DepartureDate = _data["DepartureDate"];
      this.DepartureStation = _data["DepartureStation"] ? TrainStation.fromJS(_data["DepartureStation"]) : <any>undefined;
      this.ArrivalDate = _data["ArrivalDate"];
      this.ArrivalStation = _data["ArrivalStation"] ? TrainStation.fromJS(_data["ArrivalStation"]) : <any>undefined;
      this.Duration = _data["Duration"];
      this.Train = _data["Train"] ? TrainDetails.fromJS(_data["Train"]) : <any>undefined;
    }
  }

  static fromJS(data: any): TrainSegment {
    data = typeof data === 'object' ? data : {};
    let result = new TrainSegment();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Id"] = this.Id;
    data["SegmentKey"] = this.SegmentKey;
    data["StepGroupId"] = this.StepGroupId;
    data["ConnectionTime"] = this.ConnectionTime;
    data["DepartureDate"] = this.DepartureDate;
    data["DepartureStation"] = this.DepartureStation ? this.DepartureStation.toJSON() : <any>undefined;
    data["ArrivalDate"] = this.ArrivalDate;
    data["ArrivalStation"] = this.ArrivalStation ? this.ArrivalStation.toJSON() : <any>undefined;
    data["Duration"] = this.Duration;
    data["Train"] = this.Train ? this.Train.toJSON() : <any>undefined;
    return data;
  }
}

export interface ITrainSegment {
  /** Train Segment Id */
  Id?: string | undefined;
  /** Calculated Train Segment Key */
  SegmentKey?: string | undefined;
  /** Id used to group the train steps
   1 way - A/R - Multi step
   Must be a nr. 0 Based in order to merge results automatically */
  StepGroupId?: string | undefined;
  /** The Connection Time on the DepartureStation for the current Segment
   Format d.hh:mm:ss */
  ConnectionTime?: string | undefined;
  /** Departure DateTime of the Segment */
  DepartureDate?: string;
  /** Departure Station and Terminal of the Segment */
  DepartureStation?: TrainStation | undefined;
  /** Arrival DateTime of the Segment */
  ArrivalDate?: string;
  /** Arrival Station and Terminal of the Segment */
  ArrivalStation?: TrainStation | undefined;
  /** Segment Duration
   Format d.hh:mm:ss */
  Duration?: string | undefined;
  /** Train Infos */
  Train?: TrainDetails | undefined;
}

export class TrainSegmentResult extends TrainSegment implements ITrainSegmentResult {
  /** Connector Custom Data */
  ConnectorCustomData?: TrainSegmentResultCustomData | undefined;

  constructor(data?: ITrainSegmentResult) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? TrainSegmentResultCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): TrainSegmentResult {
    data = typeof data === 'object' ? data : {};
    let result = new TrainSegmentResult();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface ITrainSegmentResult extends ITrainSegment {
  /** Connector Custom Data */
  ConnectorCustomData?: TrainSegmentResultCustomData | undefined;
}

export class TrainSegmentResultCustomData implements ITrainSegmentResultCustomData {

  protected _discriminator: string;

  constructor(data?: ITrainSegmentResultCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "TrainSegmentResultCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): TrainSegmentResultCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new TrainSegmentResultCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface ITrainSegmentResultCustomData {
}

export abstract class CustomerCustomDataOfTrainSegmentResult implements ICustomerCustomDataOfTrainSegmentResult {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfTrainSegmentResult) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfTrainSegmentResult";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfTrainSegmentResult {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfTrainSegmentResult' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfTrainSegmentResult {
}

export class TrainStation implements ITrainStation {
  ConnectorsMatch?: ConnectorMatch[] | undefined;
  Code?: string | undefined;
  Name?: string | undefined;
  CountryCode?: string | undefined;
  CountryName?: string | undefined;
  Location?: LatLng | undefined;

  constructor(data?: ITrainStation) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      if (Array.isArray(_data["ConnectorsMatch"])) {
        this.ConnectorsMatch = [] as any;
        for (let item of _data["ConnectorsMatch"])
          this.ConnectorsMatch!.push(ConnectorMatch.fromJS(item));
      }
      this.Code = _data["Code"];
      this.Name = _data["Name"];
      this.CountryCode = _data["CountryCode"];
      this.CountryName = _data["CountryName"];
      this.Location = _data["Location"] ? LatLng.fromJS(_data["Location"]) : <any>undefined;
    }
  }

  static fromJS(data: any): TrainStation {
    data = typeof data === 'object' ? data : {};
    let result = new TrainStation();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.ConnectorsMatch)) {
      data["ConnectorsMatch"] = [];
      for (let item of this.ConnectorsMatch)
        data["ConnectorsMatch"].push(item.toJSON());
    }
    data["Code"] = this.Code;
    data["Name"] = this.Name;
    data["CountryCode"] = this.CountryCode;
    data["CountryName"] = this.CountryName;
    data["Location"] = this.Location ? this.Location.toJSON() : <any>undefined;
    return data;
  }
}

export interface ITrainStation {
  ConnectorsMatch?: ConnectorMatch[] | undefined;
  Code?: string | undefined;
  Name?: string | undefined;
  CountryCode?: string | undefined;
  CountryName?: string | undefined;
  Location?: LatLng | undefined;
}

export class TrainDetails implements ITrainDetails {
  Number?: string | undefined;
  Type?: string | undefined;
  Description?: string | undefined;
  CarrierCode?: string | undefined;
  CarrierDescription?: string | undefined;

  constructor(data?: ITrainDetails) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Number = _data["Number"];
      this.Type = _data["Type"];
      this.Description = _data["Description"];
      this.CarrierCode = _data["CarrierCode"];
      this.CarrierDescription = _data["CarrierDescription"];
    }
  }

  static fromJS(data: any): TrainDetails {
    data = typeof data === 'object' ? data : {};
    let result = new TrainDetails();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Number"] = this.Number;
    data["Type"] = this.Type;
    data["Description"] = this.Description;
    data["CarrierCode"] = this.CarrierCode;
    data["CarrierDescription"] = this.CarrierDescription;
    return data;
  }
}

export interface ITrainDetails {
  Number?: string | undefined;
  Type?: string | undefined;
  Description?: string | undefined;
  CarrierCode?: string | undefined;
  CarrierDescription?: string | undefined;
}

export class TrainFareGroupResult implements ITrainFareGroupResult {
  /** Train Fare Group Result */
  Id?: string | undefined;
  /** ConnectorCode of the current FareGroup */
  ConnectorCode?: EH2HConnectorCode;
  /** The Pax Fare List of the current FareGroup */
  SegmentFareList?: TrainSegmentFareResult[] | undefined;

  constructor(data?: ITrainFareGroupResult) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Id = _data["Id"];
      this.ConnectorCode = _data["ConnectorCode"];
      if (Array.isArray(_data["SegmentFareList"])) {
        this.SegmentFareList = [] as any;
        for (let item of _data["SegmentFareList"])
          this.SegmentFareList!.push(TrainSegmentFareResult.fromJS(item));
      }
    }
  }

  static fromJS(data: any): TrainFareGroupResult {
    data = typeof data === 'object' ? data : {};
    let result = new TrainFareGroupResult();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Id"] = this.Id;
    data["ConnectorCode"] = this.ConnectorCode;
    if (Array.isArray(this.SegmentFareList)) {
      data["SegmentFareList"] = [];
      for (let item of this.SegmentFareList)
        data["SegmentFareList"].push(item.toJSON());
    }
    return data;
  }
}

export interface ITrainFareGroupResult {
  /** Train Fare Group Result */
  Id?: string | undefined;
  /** ConnectorCode of the current FareGroup */
  ConnectorCode?: EH2HConnectorCode;
  /** The Pax Fare List of the current FareGroup */
  SegmentFareList?: TrainSegmentFareResult[] | undefined;
}

export class TrainSegmentFare implements ITrainSegmentFare {
  /** Train Fare Id */
  Id?: string | undefined;
  /** Pax Count of the fare */
  PaxCount?: number;
  /** Segment/s to apply below Fare List */
  SegmentRefIds?: string[] | undefined;
  /** Fare List  */
  FareList?: TrainFareDetail[] | undefined;
  /** Fare Amount and Taxes */
  Amount?: Total | undefined;

  constructor(data?: ITrainSegmentFare) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Id = _data["Id"];
      this.PaxCount = _data["PaxCount"];
      if (Array.isArray(_data["SegmentRefIds"])) {
        this.SegmentRefIds = [] as any;
        for (let item of _data["SegmentRefIds"])
          this.SegmentRefIds!.push(item);
      }
      if (Array.isArray(_data["FareList"])) {
        this.FareList = [] as any;
        for (let item of _data["FareList"])
          this.FareList!.push(TrainFareDetail.fromJS(item));
      }
      this.Amount = _data["Amount"] ? Total.fromJS(_data["Amount"]) : <any>undefined;
    }
  }

  static fromJS(data: any): TrainSegmentFare {
    data = typeof data === 'object' ? data : {};
    let result = new TrainSegmentFare();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Id"] = this.Id;
    data["PaxCount"] = this.PaxCount;
    if (Array.isArray(this.SegmentRefIds)) {
      data["SegmentRefIds"] = [];
      for (let item of this.SegmentRefIds)
        data["SegmentRefIds"].push(item);
    }
    if (Array.isArray(this.FareList)) {
      data["FareList"] = [];
      for (let item of this.FareList)
        data["FareList"].push(item.toJSON());
    }
    data["Amount"] = this.Amount ? this.Amount.toJSON() : <any>undefined;
    return data;
  }
}

export interface ITrainSegmentFare {
  /** Train Fare Id */
  Id?: string | undefined;
  /** Pax Count of the fare */
  PaxCount?: number;
  /** Segment/s to apply below Fare List */
  SegmentRefIds?: string[] | undefined;
  /** Fare List  */
  FareList?: TrainFareDetail[] | undefined;
  /** Fare Amount and Taxes */
  Amount?: Total | undefined;
}

export class TrainSegmentFareResult extends TrainSegmentFare implements ITrainSegmentFareResult {
  /** Connector Custom Data */
  ConnectorCustomData?: TrainFareResultCustomData | undefined;

  constructor(data?: ITrainSegmentFareResult) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? TrainFareResultCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): TrainSegmentFareResult {
    data = typeof data === 'object' ? data : {};
    let result = new TrainSegmentFareResult();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface ITrainSegmentFareResult extends ITrainSegmentFare {
  /** Connector Custom Data */
  ConnectorCustomData?: TrainFareResultCustomData | undefined;
}

export class TrainFareResultCustomData implements ITrainFareResultCustomData {

  protected _discriminator: string;

  constructor(data?: ITrainFareResultCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "TrainFareResultCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): TrainFareResultCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new TrainFareResultCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface ITrainFareResultCustomData {
}

export abstract class CustomerCustomDataOfTrainSegmentFareResult implements ICustomerCustomDataOfTrainSegmentFareResult {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfTrainSegmentFareResult) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfTrainSegmentFareResult";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfTrainSegmentFareResult {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfTrainSegmentFareResult' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfTrainSegmentFareResult {
}

export class TrainFareDetail implements ITrainFareDetail {
  ClassCode?: string | undefined;
  ClassName?: string | undefined;
  Offers?: TrainFareOffer[] | undefined;

  constructor(data?: ITrainFareDetail) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.ClassCode = _data["ClassCode"];
      this.ClassName = _data["ClassName"];
      if (Array.isArray(_data["Offers"])) {
        this.Offers = [] as any;
        for (let item of _data["Offers"])
          this.Offers!.push(TrainFareOffer.fromJS(item));
      }
    }
  }

  static fromJS(data: any): TrainFareDetail {
    data = typeof data === 'object' ? data : {};
    let result = new TrainFareDetail();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ClassCode"] = this.ClassCode;
    data["ClassName"] = this.ClassName;
    if (Array.isArray(this.Offers)) {
      data["Offers"] = [];
      for (let item of this.Offers)
        data["Offers"].push(item.toJSON());
    }
    return data;
  }
}

export interface ITrainFareDetail {
  ClassCode?: string | undefined;
  ClassName?: string | undefined;
  Offers?: TrainFareOffer[] | undefined;
}

export class TrainFareOffer implements ITrainFareOffer {
  Code?: string | undefined;
  Name?: string | undefined;
  PriceRuleValue?: string | undefined;
  MandatoryCards?: string[] | undefined;
  /** Fare Amount and Taxes */
  Amount?: Total | undefined;

  constructor(data?: ITrainFareOffer) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Code = _data["Code"];
      this.Name = _data["Name"];
      this.PriceRuleValue = _data["PriceRuleValue"];
      if (Array.isArray(_data["MandatoryCards"])) {
        this.MandatoryCards = [] as any;
        for (let item of _data["MandatoryCards"])
          this.MandatoryCards!.push(item);
      }
      this.Amount = _data["Amount"] ? Total.fromJS(_data["Amount"]) : <any>undefined;
    }
  }

  static fromJS(data: any): TrainFareOffer {
    data = typeof data === 'object' ? data : {};
    let result = new TrainFareOffer();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Code"] = this.Code;
    data["Name"] = this.Name;
    data["PriceRuleValue"] = this.PriceRuleValue;
    if (Array.isArray(this.MandatoryCards)) {
      data["MandatoryCards"] = [];
      for (let item of this.MandatoryCards)
        data["MandatoryCards"].push(item);
    }
    data["Amount"] = this.Amount ? this.Amount.toJSON() : <any>undefined;
    return data;
  }
}

export interface ITrainFareOffer {
  Code?: string | undefined;
  Name?: string | undefined;
  PriceRuleValue?: string | undefined;
  MandatoryCards?: string[] | undefined;
  /** Fare Amount and Taxes */
  Amount?: Total | undefined;
}

export abstract class CustomerCustomDataOfTrainFareGroupResult implements ICustomerCustomDataOfTrainFareGroupResult {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfTrainFareGroupResult) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfTrainFareGroupResult";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfTrainFareGroupResult {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfTrainFareGroupResult' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfTrainFareGroupResult {
}

export abstract class CustomerCustomDataOfSingleTrainAvailResult implements ICustomerCustomDataOfSingleTrainAvailResult {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfSingleTrainAvailResult) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfSingleTrainAvailResult";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfSingleTrainAvailResult {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfSingleTrainAvailResult' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfSingleTrainAvailResult {
}

export abstract class CustomerCustomDataOfJupiterTrainAvailabilityOutput implements ICustomerCustomDataOfJupiterTrainAvailabilityOutput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterTrainAvailabilityOutput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterTrainAvailabilityOutput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterTrainAvailabilityOutput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterTrainAvailabilityOutput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterTrainAvailabilityOutput {
}

export class JupiterTrainAvailabilityRQ extends BaseCacheableRQ implements IJupiterTrainAvailabilityRQ {
  Request?: JupiterTrainAvailabilityInput | undefined;

  constructor(data?: IJupiterTrainAvailabilityRQ) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Request = _data["Request"] ? JupiterTrainAvailabilityInput.fromJS(_data["Request"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterTrainAvailabilityRQ {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterTrainAvailabilityRQ();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Request"] = this.Request ? this.Request.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterTrainAvailabilityRQ extends IBaseCacheableRQ {
  Request?: JupiterTrainAvailabilityInput | undefined;
}

export class JupiterTrainAvailabilityInput extends BaseInput implements IJupiterTrainAvailabilityInput {
  /** List of Connectors code to search */
  ConnectorsSearch!: EH2HConnectorCode[];
  /** Flight Steps */
  TrainSteps!: TrainStepRequest[];
  /** Adults count
   More than 12 Years Old */
  AdultCount!: number;
  /** Children count
   form 2 to 11 Years Old */
  ChildCount!: number;
  /** Infants count
   Less than 2 Years Old */
  InfantCount!: number;
  /** Preferred Currency to search. Depends on Connectors if the features is available */
  PreferredCurrency?: string | undefined;
  /** List of ConnectorCustomData */
  ConnectorCustomData?: TrainAvailabilityInputCustomData[] | undefined;

  constructor(data?: IJupiterTrainAvailabilityInput) {
    super(data);
    if (!data) {
      this.ConnectorsSearch = [];
      this.TrainSteps = [];
    }
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      if (Array.isArray(_data["ConnectorsSearch"])) {
        this.ConnectorsSearch = [] as any;
        for (let item of _data["ConnectorsSearch"])
          this.ConnectorsSearch!.push(item);
      }
      if (Array.isArray(_data["TrainSteps"])) {
        this.TrainSteps = [] as any;
        for (let item of _data["TrainSteps"])
          this.TrainSteps!.push(TrainStepRequest.fromJS(item));
      }
      this.AdultCount = _data["AdultCount"];
      this.ChildCount = _data["ChildCount"];
      this.InfantCount = _data["InfantCount"];
      this.PreferredCurrency = _data["PreferredCurrency"];
      if (Array.isArray(_data["ConnectorCustomData"])) {
        this.ConnectorCustomData = [] as any;
        for (let item of _data["ConnectorCustomData"])
          this.ConnectorCustomData!.push(TrainAvailabilityInputCustomData.fromJS(item));
      }
    }
  }

  static fromJS(data: any): JupiterTrainAvailabilityInput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterTrainAvailabilityInput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.ConnectorsSearch)) {
      data["ConnectorsSearch"] = [];
      for (let item of this.ConnectorsSearch)
        data["ConnectorsSearch"].push(item);
    }
    if (Array.isArray(this.TrainSteps)) {
      data["TrainSteps"] = [];
      for (let item of this.TrainSteps)
        data["TrainSteps"].push(item.toJSON());
    }
    data["AdultCount"] = this.AdultCount;
    data["ChildCount"] = this.ChildCount;
    data["InfantCount"] = this.InfantCount;
    data["PreferredCurrency"] = this.PreferredCurrency;
    if (Array.isArray(this.ConnectorCustomData)) {
      data["ConnectorCustomData"] = [];
      for (let item of this.ConnectorCustomData)
        data["ConnectorCustomData"].push(item.toJSON());
    }
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterTrainAvailabilityInput extends IBaseInput {
  /** List of Connectors code to search */
  ConnectorsSearch: EH2HConnectorCode[];
  /** Flight Steps */
  TrainSteps: TrainStepRequest[];
  /** Adults count
   More than 12 Years Old */
  AdultCount: number;
  /** Children count
   form 2 to 11 Years Old */
  ChildCount: number;
  /** Infants count
   Less than 2 Years Old */
  InfantCount: number;
  /** Preferred Currency to search. Depends on Connectors if the features is available */
  PreferredCurrency?: string | undefined;
  /** List of ConnectorCustomData */
  ConnectorCustomData?: TrainAvailabilityInputCustomData[] | undefined;
}

export class TrainStepRequest implements ITrainStepRequest {
  /** Departure DateTime */
  DepartureDate!: string;
  /** Departure Time
   Format d.hh:mm:ss */
  DepartureTime?: string | undefined;
  /** Departure Time Window - it's used only if DepartureTime is set */
  DepartureTimeWindow?: number | undefined;
  /** Excluded Carriers IATA list */
  ExcludedCarriers?: string[] | undefined;
  /** Included Carriers IATA list */
  IncludedCarriers?: string[] | undefined;
  /** Search only for Direct Trains or not */
  OnlyDirectTrains?: boolean;
  /** Connector Custom Data */
  ConnectorCustomData?: TrainStepRequestCustomData[] | undefined;

  constructor(data?: ITrainStepRequest) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    if (!data) {
      this.OnlyDirectTrains = false;
    }
  }

  init(_data?: any) {
    if (_data) {
      this.DepartureDate = _data["DepartureDate"];
      this.DepartureTime = _data["DepartureTime"];
      this.DepartureTimeWindow = _data["DepartureTimeWindow"];
      if (Array.isArray(_data["ExcludedCarriers"])) {
        this.ExcludedCarriers = [] as any;
        for (let item of _data["ExcludedCarriers"])
          this.ExcludedCarriers!.push(item);
      }
      if (Array.isArray(_data["IncludedCarriers"])) {
        this.IncludedCarriers = [] as any;
        for (let item of _data["IncludedCarriers"])
          this.IncludedCarriers!.push(item);
      }
      this.OnlyDirectTrains = _data["OnlyDirectTrains"] !== undefined ? _data["OnlyDirectTrains"] : false;
      if (Array.isArray(_data["ConnectorCustomData"])) {
        this.ConnectorCustomData = [] as any;
        for (let item of _data["ConnectorCustomData"])
          this.ConnectorCustomData!.push(TrainStepRequestCustomData.fromJS(item));
      }
    }
  }

  static fromJS(data: any): TrainStepRequest {
    data = typeof data === 'object' ? data : {};
    let result = new TrainStepRequest();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["DepartureDate"] = this.DepartureDate;
    data["DepartureTime"] = this.DepartureTime;
    data["DepartureTimeWindow"] = this.DepartureTimeWindow;
    if (Array.isArray(this.ExcludedCarriers)) {
      data["ExcludedCarriers"] = [];
      for (let item of this.ExcludedCarriers)
        data["ExcludedCarriers"].push(item);
    }
    if (Array.isArray(this.IncludedCarriers)) {
      data["IncludedCarriers"] = [];
      for (let item of this.IncludedCarriers)
        data["IncludedCarriers"].push(item);
    }
    data["OnlyDirectTrains"] = this.OnlyDirectTrains;
    if (Array.isArray(this.ConnectorCustomData)) {
      data["ConnectorCustomData"] = [];
      for (let item of this.ConnectorCustomData)
        data["ConnectorCustomData"].push(item.toJSON());
    }
    return data;
  }
}

export interface ITrainStepRequest {
  /** Departure DateTime */
  DepartureDate: string;
  /** Departure Time
   Format d.hh:mm:ss */
  DepartureTime?: string | undefined;
  /** Departure Time Window - it's used only if DepartureTime is set */
  DepartureTimeWindow?: number | undefined;
  /** Excluded Carriers IATA list */
  ExcludedCarriers?: string[] | undefined;
  /** Included Carriers IATA list */
  IncludedCarriers?: string[] | undefined;
  /** Search only for Direct Trains or not */
  OnlyDirectTrains?: boolean;
  /** Connector Custom Data */
  ConnectorCustomData?: TrainStepRequestCustomData[] | undefined;
}

export class TrainStepRequestCustomData implements ITrainStepRequestCustomData {
  DepartureStation!: string;
  ArrivalStation!: string;

  protected _discriminator: string;

  constructor(data?: ITrainStepRequestCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "TrainStepRequestCustomData";
  }

  init(_data?: any) {
    if (_data) {
      this.DepartureStation = _data["DepartureStation"];
      this.ArrivalStation = _data["ArrivalStation"];
    }
  }

  static fromJS(data: any): TrainStepRequestCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "EMINDS") {
      let result = new EmindsTrainStepRequestCustomData();
      result.init(data);
      return result;
    }
    let result = new TrainStepRequestCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    data["DepartureStation"] = this.DepartureStation;
    data["ArrivalStation"] = this.ArrivalStation;
    return data;
  }
}

export interface ITrainStepRequestCustomData {
  DepartureStation: string;
  ArrivalStation: string;
}

export class EmindsTrainStepRequestCustomData extends TrainStepRequestCustomData implements IEmindsTrainStepRequestCustomData {

  constructor(data?: IEmindsTrainStepRequestCustomData) {
    super(data);
    this._discriminator = "EMINDS";
  }

  init(_data?: any) {
    super.init(_data);
  }

  static fromJS(data: any): EmindsTrainStepRequestCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new EmindsTrainStepRequestCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    super.toJSON(data);
    return data;
  }
}

export interface IEmindsTrainStepRequestCustomData extends ITrainStepRequestCustomData {
}

export abstract class CustomerCustomDataOfTrainStepRequest implements ICustomerCustomDataOfTrainStepRequest {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfTrainStepRequest) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfTrainStepRequest";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfTrainStepRequest {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfTrainStepRequest' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfTrainStepRequest {
}

export class TrainAvailabilityInputCustomData implements ITrainAvailabilityInputCustomData {

  protected _discriminator: string;

  constructor(data?: ITrainAvailabilityInputCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "TrainAvailabilityInputCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): TrainAvailabilityInputCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "EMINDS") {
      let result = new EmindsTrainAvailabilityInputCustomData();
      result.init(data);
      return result;
    }
    let result = new TrainAvailabilityInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface ITrainAvailabilityInputCustomData {
}

export class EmindsTrainAvailabilityInputCustomData extends TrainAvailabilityInputCustomData implements IEmindsTrainAvailabilityInputCustomData {
  CommunityId?: string | undefined;

  constructor(data?: IEmindsTrainAvailabilityInputCustomData) {
    super(data);
    this._discriminator = "EMINDS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.CommunityId = _data["CommunityId"];
    }
  }

  static fromJS(data: any): EmindsTrainAvailabilityInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new EmindsTrainAvailabilityInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CommunityId"] = this.CommunityId;
    super.toJSON(data);
    return data;
  }
}

export interface IEmindsTrainAvailabilityInputCustomData extends ITrainAvailabilityInputCustomData {
  CommunityId?: string | undefined;
}

export abstract class CustomerCustomDataOfJupiterTrainAvailabilityInput implements ICustomerCustomDataOfJupiterTrainAvailabilityInput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterTrainAvailabilityInput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterTrainAvailabilityInput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterTrainAvailabilityInput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterTrainAvailabilityInput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterTrainAvailabilityInput {
}

export class JupiterTrainBookRS extends BaseRS implements IJupiterTrainBookRS {
  /** JupiterTrainBookOutput Response */
  Response?: JupiterTrainBookOutput | undefined;

  constructor(data?: IJupiterTrainBookRS) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Response = _data["Response"] ? JupiterTrainBookOutput.fromJS(_data["Response"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterTrainBookRS {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterTrainBookRS();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Response"] = this.Response ? this.Response.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterTrainBookRS extends IBaseRS {
  /** JupiterTrainBookOutput Response */
  Response?: JupiterTrainBookOutput | undefined;
}

export class JupiterTrainBookOutput extends BaseOutput implements IJupiterTrainBookOutput {
  /** The Booking Status */
  BookingStatus?: EBookingStatus;
  /** Connector Custom Data */
  ConnectorCustomData?: TrainBookOutputCustomData | undefined;

  constructor(data?: IJupiterTrainBookOutput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.BookingStatus = _data["BookingStatus"];
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? TrainBookOutputCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterTrainBookOutput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterTrainBookOutput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["BookingStatus"] = this.BookingStatus;
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterTrainBookOutput extends IBaseOutput {
  /** The Booking Status */
  BookingStatus?: EBookingStatus;
  /** Connector Custom Data */
  ConnectorCustomData?: TrainBookOutputCustomData | undefined;
}

export abstract class TrainBookOutputCustomData implements ITrainBookOutputCustomData {

  protected _discriminator: string;

  constructor(data?: ITrainBookOutputCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "TrainBookOutputCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): TrainBookOutputCustomData {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'TrainBookOutputCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface ITrainBookOutputCustomData {
}

export abstract class CustomerCustomDataOfJupiterTrainBookOutput implements ICustomerCustomDataOfJupiterTrainBookOutput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterTrainBookOutput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterTrainBookOutput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterTrainBookOutput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterTrainBookOutput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterTrainBookOutput {
}

export class JupiterTrainBookRQ extends BaseRQ implements IJupiterTrainBookRQ {
  /** JupiterTrainBookInput Request */
  Request?: JupiterTrainBookInput | undefined;

  constructor(data?: IJupiterTrainBookRQ) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Request = _data["Request"] ? JupiterTrainBookInput.fromJS(_data["Request"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterTrainBookRQ {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterTrainBookRQ();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Request"] = this.Request ? this.Request.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterTrainBookRQ extends IBaseRQ {
  /** JupiterTrainBookInput Request */
  Request?: JupiterTrainBookInput | undefined;
}

export class JupiterTrainBookInput extends BaseInput implements IJupiterTrainBookInput {
  SolutionToBook?: TrainBookSolution | undefined;
  ConnectorCustomData?: TrainBookInputCustomData | undefined;

  constructor(data?: IJupiterTrainBookInput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.SolutionToBook = _data["SolutionToBook"] ? TrainBookSolution.fromJS(_data["SolutionToBook"]) : <any>undefined;
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? TrainBookInputCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterTrainBookInput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterTrainBookInput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["SolutionToBook"] = this.SolutionToBook ? this.SolutionToBook.toJSON() : <any>undefined;
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterTrainBookInput extends IBaseInput {
  SolutionToBook?: TrainBookSolution | undefined;
  ConnectorCustomData?: TrainBookInputCustomData | undefined;
}

export class TrainBookSolution implements ITrainBookSolution {
  /** Connector Code */
  ConnectorCode!: EH2HConnectorCode;
  ResultId?: string | undefined;
  ResultKey?: string | undefined;
  TrainSegments?: TrainSegment[] | undefined;
  SolutionFareList?: TrainFareGroupResult[] | undefined;
  Paxes?: TrainBookPaxDetail[] | undefined;

  constructor(data?: ITrainBookSolution) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.ConnectorCode = _data["ConnectorCode"];
      this.ResultId = _data["ResultId"];
      this.ResultKey = _data["ResultKey"];
      if (Array.isArray(_data["TrainSegments"])) {
        this.TrainSegments = [] as any;
        for (let item of _data["TrainSegments"])
          this.TrainSegments!.push(TrainSegment.fromJS(item));
      }
      if (Array.isArray(_data["SolutionFareList"])) {
        this.SolutionFareList = [] as any;
        for (let item of _data["SolutionFareList"])
          this.SolutionFareList!.push(TrainFareGroupResult.fromJS(item));
      }
      if (Array.isArray(_data["Paxes"])) {
        this.Paxes = [] as any;
        for (let item of _data["Paxes"])
          this.Paxes!.push(TrainBookPaxDetail.fromJS(item));
      }
    }
  }

  static fromJS(data: any): TrainBookSolution {
    data = typeof data === 'object' ? data : {};
    let result = new TrainBookSolution();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCode"] = this.ConnectorCode;
    data["ResultId"] = this.ResultId;
    data["ResultKey"] = this.ResultKey;
    if (Array.isArray(this.TrainSegments)) {
      data["TrainSegments"] = [];
      for (let item of this.TrainSegments)
        data["TrainSegments"].push(item.toJSON());
    }
    if (Array.isArray(this.SolutionFareList)) {
      data["SolutionFareList"] = [];
      for (let item of this.SolutionFareList)
        data["SolutionFareList"].push(item.toJSON());
    }
    if (Array.isArray(this.Paxes)) {
      data["Paxes"] = [];
      for (let item of this.Paxes)
        data["Paxes"].push(item.toJSON());
    }
    return data;
  }
}

export interface ITrainBookSolution {
  /** Connector Code */
  ConnectorCode: EH2HConnectorCode;
  ResultId?: string | undefined;
  ResultKey?: string | undefined;
  TrainSegments?: TrainSegment[] | undefined;
  SolutionFareList?: TrainFareGroupResult[] | undefined;
  Paxes?: TrainBookPaxDetail[] | undefined;
}

export class TrainBookPaxDetail extends PaxDetails implements ITrainBookPaxDetail {
  TrainSeats?: TrainSeatLocation[] | undefined;

  constructor(data?: ITrainBookPaxDetail) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      if (Array.isArray(_data["TrainSeats"])) {
        this.TrainSeats = [] as any;
        for (let item of _data["TrainSeats"])
          this.TrainSeats!.push(TrainSeatLocation.fromJS(item));
      }
    }
  }

  static fromJS(data: any): TrainBookPaxDetail {
    data = typeof data === 'object' ? data : {};
    let result = new TrainBookPaxDetail();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.TrainSeats)) {
      data["TrainSeats"] = [];
      for (let item of this.TrainSeats)
        data["TrainSeats"].push(item.toJSON());
    }
    super.toJSON(data);
    return data;
  }
}

export interface ITrainBookPaxDetail extends IPaxDetails {
  TrainSeats?: TrainSeatLocation[] | undefined;
}

export class TrainSeatLocation implements ITrainSeatLocation {
  Number?: string | undefined;
  Type?: ETrainSeatType;
  Wagon?: string | undefined;
  TrainNumber?: string | undefined;

  constructor(data?: ITrainSeatLocation) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Number = _data["Number"];
      this.Type = _data["Type"];
      this.Wagon = _data["Wagon"];
      this.TrainNumber = _data["TrainNumber"];
    }
  }

  static fromJS(data: any): TrainSeatLocation {
    data = typeof data === 'object' ? data : {};
    let result = new TrainSeatLocation();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Number"] = this.Number;
    data["Type"] = this.Type;
    data["Wagon"] = this.Wagon;
    data["TrainNumber"] = this.TrainNumber;
    return data;
  }
}

export interface ITrainSeatLocation {
  Number?: string | undefined;
  Type?: ETrainSeatType;
  Wagon?: string | undefined;
  TrainNumber?: string | undefined;
}

export enum ETrainSeatType {
  PLACE = "PLACE",
  AISLE = "AISLE",
  WINDOW = "WINDOW",
  MIDDLE = "MIDDLE",
  WINALONE = "WINALONE",
}

export abstract class CustomerCustomDataOfTrainBookPaxDetail implements ICustomerCustomDataOfTrainBookPaxDetail {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfTrainBookPaxDetail) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfTrainBookPaxDetail";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfTrainBookPaxDetail {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfTrainBookPaxDetail' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfTrainBookPaxDetail {
}

export abstract class CustomerCustomDataOfTrainBookSolution implements ICustomerCustomDataOfTrainBookSolution {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfTrainBookSolution) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfTrainBookSolution";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfTrainBookSolution {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfTrainBookSolution' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfTrainBookSolution {
}

export abstract class TrainBookInputCustomData implements ITrainBookInputCustomData {

  protected _discriminator: string;

  constructor(data?: ITrainBookInputCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "TrainBookInputCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): TrainBookInputCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "EMINDS") {
      let result = new EmindsTrainBookInputCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'TrainBookInputCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface ITrainBookInputCustomData {
}

export class EmindsTrainBookInputCustomData extends TrainBookInputCustomData implements IEmindsTrainBookInputCustomData {
  CommunityId?: string | undefined;

  constructor(data?: IEmindsTrainBookInputCustomData) {
    super(data);
    this._discriminator = "EMINDS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.CommunityId = _data["CommunityId"];
    }
  }

  static fromJS(data: any): EmindsTrainBookInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new EmindsTrainBookInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CommunityId"] = this.CommunityId;
    super.toJSON(data);
    return data;
  }
}

export interface IEmindsTrainBookInputCustomData extends ITrainBookInputCustomData {
  CommunityId?: string | undefined;
}

export abstract class CustomerCustomDataOfJupiterTrainBookInput implements ICustomerCustomDataOfJupiterTrainBookInput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterTrainBookInput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterTrainBookInput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterTrainBookInput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterTrainBookInput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterTrainBookInput {
}

export class JupiterDestinationListRS extends BaseCacheableRS implements IJupiterDestinationListRS {
  /** JupiterDestinationListOutput Response */
  Response?: JupiterDestinationListOutput | undefined;

  constructor(data?: IJupiterDestinationListRS) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Response = _data["Response"] ? JupiterDestinationListOutput.fromJS(_data["Response"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterDestinationListRS {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterDestinationListRS();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Response"] = this.Response ? this.Response.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterDestinationListRS extends IBaseCacheableRS {
  /** JupiterDestinationListOutput Response */
  Response?: JupiterDestinationListOutput | undefined;
}

export class JupiterDestinationListOutput extends BaseOutput implements IJupiterDestinationListOutput {
  /** List of Hotel Results */
  Destinations?: DestinationDetails[] | undefined;

  constructor(data?: IJupiterDestinationListOutput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      if (Array.isArray(_data["Destinations"])) {
        this.Destinations = [] as any;
        for (let item of _data["Destinations"])
          this.Destinations!.push(DestinationDetails.fromJS(item));
      }
    }
  }

  static fromJS(data: any): JupiterDestinationListOutput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterDestinationListOutput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.Destinations)) {
      data["Destinations"] = [];
      for (let item of this.Destinations)
        data["Destinations"].push(item.toJSON());
    }
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterDestinationListOutput extends IBaseOutput {
  /** List of Hotel Results */
  Destinations?: DestinationDetails[] | undefined;
}

export abstract class CustomerCustomDataOfJupiterDestinationListOutput implements ICustomerCustomDataOfJupiterDestinationListOutput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterDestinationListOutput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterDestinationListOutput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterDestinationListOutput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterDestinationListOutput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterDestinationListOutput {
}

export class JupiterDestinationListRQ extends BaseCacheableRQ implements IJupiterDestinationListRQ {
  /** JupiterDestinationListInput Request */
  Request?: JupiterDestinationListInput | undefined;

  constructor(data?: IJupiterDestinationListRQ) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Request = _data["Request"] ? JupiterDestinationListInput.fromJS(_data["Request"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterDestinationListRQ {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterDestinationListRQ();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Request"] = this.Request ? this.Request.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterDestinationListRQ extends IBaseCacheableRQ {
  /** JupiterDestinationListInput Request */
  Request?: JupiterDestinationListInput | undefined;
}

export class JupiterDestinationListInput extends BaseInput implements IJupiterDestinationListInput {
  /** List of Connectors code to search. If null search on all Enable Connectors */
  ConnectorsSearchOnly?: EH2HConnectorCode[] | undefined;
  /** Preferred Language to search. Depends on Connectors if the features is available */
  PreferredLanguage?: string | undefined;
  /** Destination search type (CITY, COUNTRY) */
  Type?: EDestinationType;
  /** Dictionary of Connectors search Settings */
  ConnectorsSettings!: DestinationListInputCustomData[];

  constructor(data?: IJupiterDestinationListInput) {
    super(data);
    if (!data) {
      this.ConnectorsSettings = [];
    }
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      if (Array.isArray(_data["ConnectorsSearchOnly"])) {
        this.ConnectorsSearchOnly = [] as any;
        for (let item of _data["ConnectorsSearchOnly"])
          this.ConnectorsSearchOnly!.push(item);
      }
      this.PreferredLanguage = _data["PreferredLanguage"];
      this.Type = _data["Type"];
      if (Array.isArray(_data["ConnectorsSettings"])) {
        this.ConnectorsSettings = [] as any;
        for (let item of _data["ConnectorsSettings"])
          this.ConnectorsSettings!.push(DestinationListInputCustomData.fromJS(item));
      }
    }
  }

  static fromJS(data: any): JupiterDestinationListInput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterDestinationListInput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.ConnectorsSearchOnly)) {
      data["ConnectorsSearchOnly"] = [];
      for (let item of this.ConnectorsSearchOnly)
        data["ConnectorsSearchOnly"].push(item);
    }
    data["PreferredLanguage"] = this.PreferredLanguage;
    data["Type"] = this.Type;
    if (Array.isArray(this.ConnectorsSettings)) {
      data["ConnectorsSettings"] = [];
      for (let item of this.ConnectorsSettings)
        data["ConnectorsSettings"].push(item.toJSON());
    }
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterDestinationListInput extends IBaseInput {
  /** List of Connectors code to search. If null search on all Enable Connectors */
  ConnectorsSearchOnly?: EH2HConnectorCode[] | undefined;
  /** Preferred Language to search. Depends on Connectors if the features is available */
  PreferredLanguage?: string | undefined;
  /** Destination search type (CITY, COUNTRY) */
  Type?: EDestinationType;
  /** Dictionary of Connectors search Settings */
  ConnectorsSettings: DestinationListInputCustomData[];
}

export class DestinationListInputCustomData implements IDestinationListInputCustomData {

  protected _discriminator: string;

  constructor(data?: IDestinationListInputCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "DestinationListInputCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): DestinationListInputCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "BOOKING_DOT_COM") {
      let result = new BookingDotComDestinationListInputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "CREOLE") {
      let result = new CreoleDestinationListInputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "HOTELBEDS") {
      let result = new HotelbedsDestinationListInputCustomData();
      result.init(data);
      return result;
    }
    let result = new DestinationListInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IDestinationListInputCustomData {
}

export class BookingDotComDestinationListInputCustomData extends DestinationListInputCustomData implements IBookingDotComDestinationListInputCustomData {
  CityIds?: string[] | undefined;
  Countries?: string[] | undefined;
  Rows?: number;
  Offset?: number;

  constructor(data?: IBookingDotComDestinationListInputCustomData) {
    super(data);
    this._discriminator = "BOOKING_DOT_COM";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      if (Array.isArray(_data["CityIds"])) {
        this.CityIds = [] as any;
        for (let item of _data["CityIds"])
          this.CityIds!.push(item);
      }
      if (Array.isArray(_data["Countries"])) {
        this.Countries = [] as any;
        for (let item of _data["Countries"])
          this.Countries!.push(item);
      }
      this.Rows = _data["Rows"];
      this.Offset = _data["Offset"];
    }
  }

  static fromJS(data: any): BookingDotComDestinationListInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new BookingDotComDestinationListInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.CityIds)) {
      data["CityIds"] = [];
      for (let item of this.CityIds)
        data["CityIds"].push(item);
    }
    if (Array.isArray(this.Countries)) {
      data["Countries"] = [];
      for (let item of this.Countries)
        data["Countries"].push(item);
    }
    data["Rows"] = this.Rows;
    data["Offset"] = this.Offset;
    super.toJSON(data);
    return data;
  }
}

export interface IBookingDotComDestinationListInputCustomData extends IDestinationListInputCustomData {
  CityIds?: string[] | undefined;
  Countries?: string[] | undefined;
  Rows?: number;
  Offset?: number;
}

export class CreoleDestinationListInputCustomData extends DestinationListInputCustomData implements ICreoleDestinationListInputCustomData {
  ShowHotels?: boolean;

  constructor(data?: ICreoleDestinationListInputCustomData) {
    super(data);
    this._discriminator = "CREOLE";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ShowHotels = _data["ShowHotels"];
    }
  }

  static fromJS(data: any): CreoleDestinationListInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new CreoleDestinationListInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ShowHotels"] = this.ShowHotels;
    super.toJSON(data);
    return data;
  }
}

export interface ICreoleDestinationListInputCustomData extends IDestinationListInputCustomData {
  ShowHotels?: boolean;
}

export class HotelbedsDestinationListInputCustomData extends DestinationListInputCustomData implements IHotelbedsDestinationListInputCustomData {
  Fields?: string[] | undefined;
  Codes?: string[] | undefined;
  CountryCodes?: string[] | undefined;
  LastUpdateTime?: string | undefined;
  From?: number;
  To?: number;
  UseSecondaryLanguage?: boolean;

  constructor(data?: IHotelbedsDestinationListInputCustomData) {
    super(data);
    this._discriminator = "HOTELBEDS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      if (Array.isArray(_data["Fields"])) {
        this.Fields = [] as any;
        for (let item of _data["Fields"])
          this.Fields!.push(item);
      }
      if (Array.isArray(_data["Codes"])) {
        this.Codes = [] as any;
        for (let item of _data["Codes"])
          this.Codes!.push(item);
      }
      if (Array.isArray(_data["CountryCodes"])) {
        this.CountryCodes = [] as any;
        for (let item of _data["CountryCodes"])
          this.CountryCodes!.push(item);
      }
      this.LastUpdateTime = _data["LastUpdateTime"];
      this.From = _data["From"];
      this.To = _data["To"];
      this.UseSecondaryLanguage = _data["UseSecondaryLanguage"];
    }
  }

  static fromJS(data: any): HotelbedsDestinationListInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new HotelbedsDestinationListInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.Fields)) {
      data["Fields"] = [];
      for (let item of this.Fields)
        data["Fields"].push(item);
    }
    if (Array.isArray(this.Codes)) {
      data["Codes"] = [];
      for (let item of this.Codes)
        data["Codes"].push(item);
    }
    if (Array.isArray(this.CountryCodes)) {
      data["CountryCodes"] = [];
      for (let item of this.CountryCodes)
        data["CountryCodes"].push(item);
    }
    data["LastUpdateTime"] = this.LastUpdateTime;
    data["From"] = this.From;
    data["To"] = this.To;
    data["UseSecondaryLanguage"] = this.UseSecondaryLanguage;
    super.toJSON(data);
    return data;
  }
}

export interface IHotelbedsDestinationListInputCustomData extends IDestinationListInputCustomData {
  Fields?: string[] | undefined;
  Codes?: string[] | undefined;
  CountryCodes?: string[] | undefined;
  LastUpdateTime?: string | undefined;
  From?: number;
  To?: number;
  UseSecondaryLanguage?: boolean;
}

export abstract class CustomerCustomDataOfJupiterDestinationListInput implements ICustomerCustomDataOfJupiterDestinationListInput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterDestinationListInput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterDestinationListInput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterDestinationListInput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterDestinationListInput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterDestinationListInput {
}

export class JupiterFlightAvailabilityRS extends BaseCacheableRS implements IJupiterFlightAvailabilityRS {
  /** JupiterFlightAvailabilityOutput Response */
  Response?: JupiterFlightAvailabilityOutput | undefined;

  constructor(data?: IJupiterFlightAvailabilityRS) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Response = _data["Response"] ? JupiterFlightAvailabilityOutput.fromJS(_data["Response"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterFlightAvailabilityRS {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterFlightAvailabilityRS();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Response"] = this.Response ? this.Response.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterFlightAvailabilityRS extends IBaseCacheableRS {
  /** JupiterFlightAvailabilityOutput Response */
  Response?: JupiterFlightAvailabilityOutput | undefined;
}

export class JupiterFlightAvailabilityOutput extends BaseOutput implements IJupiterFlightAvailabilityOutput {
  /** The Flight Results List */
  FlightResults?: SingleFlightAvailResult[] | undefined;
  /** List of ConnectorCustomData */
  ConnectorCustomData?: FlightAvailabilityOutputCustomData[] | undefined;

  constructor(data?: IJupiterFlightAvailabilityOutput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      if (Array.isArray(_data["FlightResults"])) {
        this.FlightResults = [] as any;
        for (let item of _data["FlightResults"])
          this.FlightResults!.push(SingleFlightAvailResult.fromJS(item));
      }
      if (Array.isArray(_data["ConnectorCustomData"])) {
        this.ConnectorCustomData = [] as any;
        for (let item of _data["ConnectorCustomData"])
          this.ConnectorCustomData!.push(FlightAvailabilityOutputCustomData.fromJS(item));
      }
    }
  }

  static fromJS(data: any): JupiterFlightAvailabilityOutput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterFlightAvailabilityOutput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.FlightResults)) {
      data["FlightResults"] = [];
      for (let item of this.FlightResults)
        data["FlightResults"].push(item.toJSON());
    }
    if (Array.isArray(this.ConnectorCustomData)) {
      data["ConnectorCustomData"] = [];
      for (let item of this.ConnectorCustomData)
        data["ConnectorCustomData"].push(item.toJSON());
    }
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterFlightAvailabilityOutput extends IBaseOutput {
  /** The Flight Results List */
  FlightResults?: SingleFlightAvailResult[] | undefined;
  /** List of ConnectorCustomData */
  ConnectorCustomData?: FlightAvailabilityOutputCustomData[] | undefined;
}

export class SingleFlightAvailResult implements ISingleFlightAvailResult {
  /** Flight Result Id */
  Id?: string | undefined;
  /** Calculated Flight Result Key

   It has all the infos of the segments in a string key

   Can be used to merge results form different Connectors */
  ResultKey?: string | undefined;
  /** The Flight Segments of the current Result */
  FlightSegments?: FlightSegmentResult[] | undefined;
  /** Total Flight Duration of all the Flight Segments

   Amadeus doesn't provide a Duration on single Segment but just the total flying time
   Format d.hh:mm:ss */
  TotalDuration?: string | undefined;
  /** The Fare Group List related to the current Result */
  FareList?: FlightFareGroupResult[] | undefined;

  constructor(data?: ISingleFlightAvailResult) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Id = _data["Id"];
      this.ResultKey = _data["ResultKey"];
      if (Array.isArray(_data["FlightSegments"])) {
        this.FlightSegments = [] as any;
        for (let item of _data["FlightSegments"])
          this.FlightSegments!.push(FlightSegmentResult.fromJS(item));
      }
      this.TotalDuration = _data["TotalDuration"];
      if (Array.isArray(_data["FareList"])) {
        this.FareList = [] as any;
        for (let item of _data["FareList"])
          this.FareList!.push(FlightFareGroupResult.fromJS(item));
      }
    }
  }

  static fromJS(data: any): SingleFlightAvailResult {
    data = typeof data === 'object' ? data : {};
    let result = new SingleFlightAvailResult();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Id"] = this.Id;
    data["ResultKey"] = this.ResultKey;
    if (Array.isArray(this.FlightSegments)) {
      data["FlightSegments"] = [];
      for (let item of this.FlightSegments)
        data["FlightSegments"].push(item.toJSON());
    }
    data["TotalDuration"] = this.TotalDuration;
    if (Array.isArray(this.FareList)) {
      data["FareList"] = [];
      for (let item of this.FareList)
        data["FareList"].push(item.toJSON());
    }
    return data;
  }
}

export interface ISingleFlightAvailResult {
  /** Flight Result Id */
  Id?: string | undefined;
  /** Calculated Flight Result Key

   It has all the infos of the segments in a string key

   Can be used to merge results form different Connectors */
  ResultKey?: string | undefined;
  /** The Flight Segments of the current Result */
  FlightSegments?: FlightSegmentResult[] | undefined;
  /** Total Flight Duration of all the Flight Segments

   Amadeus doesn't provide a Duration on single Segment but just the total flying time
   Format d.hh:mm:ss */
  TotalDuration?: string | undefined;
  /** The Fare Group List related to the current Result */
  FareList?: FlightFareGroupResult[] | undefined;
}

export class FlightSegment implements IFlightSegment {
  /** Flight Segment Id

   SABRE -&gt; On PNR it's mapped on the SegmentNumber and used by different elements for reference: Fares, Remarks, OsiSsr, etc. */
  Id?: string | undefined;
  /** Calculated Flight Segment Key

   It has all the infos of the current segment in a string key

   Can be used to merge results form different Connectors */
  SegmentKey?: string | undefined;
  /** Id used to group the flight Steps
   1 way - A/R - Multi step
   Must be a nr. 0 Based in order to merge results automatically */
  StepGroupId?: string | undefined;
  /** The Connection Time on the DepartureAirport for the current Segment
   Format d.hh:mm:ss */
  ConnectionTime?: string | undefined;
  /** Departure DateTime of the Segment */
  DepartureDate?: string;
  /** Departure Airport and Terminal of the Segment */
  DepartureAirport?: AirportTerminal | undefined;
  /** Arrival DateTime of the Segment */
  ArrivalDate?: string;
  /** Arrival Airport and Terminal of the Segment */
  ArrivalAirport?: AirportTerminal | undefined;
  /** Segment Duration
   Format d.hh:mm:ss */
  Duration?: string | undefined;
  /** Marketing Carrier of the Segment */
  MarketingCarrier?: FlightCarrier | undefined;
  /** Operating Carrier of the Segment */
  OperatingCarrier?: FlightCarrier | undefined;
  /** Aircraft of the Segment */
  Aircraft?: Aircraft | undefined;
  /** List of Airport Technical Stops */
  TechnicalStops?: Airport[] | undefined;

  constructor(data?: IFlightSegment) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Id = _data["Id"];
      this.SegmentKey = _data["SegmentKey"];
      this.StepGroupId = _data["StepGroupId"];
      this.ConnectionTime = _data["ConnectionTime"];
      this.DepartureDate = _data["DepartureDate"];
      this.DepartureAirport = _data["DepartureAirport"] ? AirportTerminal.fromJS(_data["DepartureAirport"]) : <any>undefined;
      this.ArrivalDate = _data["ArrivalDate"];
      this.ArrivalAirport = _data["ArrivalAirport"] ? AirportTerminal.fromJS(_data["ArrivalAirport"]) : <any>undefined;
      this.Duration = _data["Duration"];
      this.MarketingCarrier = _data["MarketingCarrier"] ? FlightCarrier.fromJS(_data["MarketingCarrier"]) : <any>undefined;
      this.OperatingCarrier = _data["OperatingCarrier"] ? FlightCarrier.fromJS(_data["OperatingCarrier"]) : <any>undefined;
      this.Aircraft = _data["Aircraft"] ? Aircraft.fromJS(_data["Aircraft"]) : <any>undefined;
      if (Array.isArray(_data["TechnicalStops"])) {
        this.TechnicalStops = [] as any;
        for (let item of _data["TechnicalStops"])
          this.TechnicalStops!.push(Airport.fromJS(item));
      }
    }
  }

  static fromJS(data: any): FlightSegment {
    data = typeof data === 'object' ? data : {};
    let result = new FlightSegment();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Id"] = this.Id;
    data["SegmentKey"] = this.SegmentKey;
    data["StepGroupId"] = this.StepGroupId;
    data["ConnectionTime"] = this.ConnectionTime;
    data["DepartureDate"] = this.DepartureDate;
    data["DepartureAirport"] = this.DepartureAirport ? this.DepartureAirport.toJSON() : <any>undefined;
    data["ArrivalDate"] = this.ArrivalDate;
    data["ArrivalAirport"] = this.ArrivalAirport ? this.ArrivalAirport.toJSON() : <any>undefined;
    data["Duration"] = this.Duration;
    data["MarketingCarrier"] = this.MarketingCarrier ? this.MarketingCarrier.toJSON() : <any>undefined;
    data["OperatingCarrier"] = this.OperatingCarrier ? this.OperatingCarrier.toJSON() : <any>undefined;
    data["Aircraft"] = this.Aircraft ? this.Aircraft.toJSON() : <any>undefined;
    if (Array.isArray(this.TechnicalStops)) {
      data["TechnicalStops"] = [];
      for (let item of this.TechnicalStops)
        data["TechnicalStops"].push(item.toJSON());
    }
    return data;
  }
}

export interface IFlightSegment {
  /** Flight Segment Id

   SABRE -&gt; On PNR it's mapped on the SegmentNumber and used by different elements for reference: Fares, Remarks, OsiSsr, etc. */
  Id?: string | undefined;
  /** Calculated Flight Segment Key

   It has all the infos of the current segment in a string key

   Can be used to merge results form different Connectors */
  SegmentKey?: string | undefined;
  /** Id used to group the flight Steps
   1 way - A/R - Multi step
   Must be a nr. 0 Based in order to merge results automatically */
  StepGroupId?: string | undefined;
  /** The Connection Time on the DepartureAirport for the current Segment
   Format d.hh:mm:ss */
  ConnectionTime?: string | undefined;
  /** Departure DateTime of the Segment */
  DepartureDate?: string;
  /** Departure Airport and Terminal of the Segment */
  DepartureAirport?: AirportTerminal | undefined;
  /** Arrival DateTime of the Segment */
  ArrivalDate?: string;
  /** Arrival Airport and Terminal of the Segment */
  ArrivalAirport?: AirportTerminal | undefined;
  /** Segment Duration
   Format d.hh:mm:ss */
  Duration?: string | undefined;
  /** Marketing Carrier of the Segment */
  MarketingCarrier?: FlightCarrier | undefined;
  /** Operating Carrier of the Segment */
  OperatingCarrier?: FlightCarrier | undefined;
  /** Aircraft of the Segment */
  Aircraft?: Aircraft | undefined;
  /** List of Airport Technical Stops */
  TechnicalStops?: Airport[] | undefined;
}

export class FlightSegmentResult extends FlightSegment implements IFlightSegmentResult {
  /** Connector Custom Data */
  ConnectorCustomData?: FlightSegmentResultCustomData | undefined;

  constructor(data?: IFlightSegmentResult) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? FlightSegmentResultCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): FlightSegmentResult {
    data = typeof data === 'object' ? data : {};
    let result = new FlightSegmentResult();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IFlightSegmentResult extends IFlightSegment {
  /** Connector Custom Data */
  ConnectorCustomData?: FlightSegmentResultCustomData | undefined;
}

export abstract class FlightSegmentResultCustomData implements IFlightSegmentResultCustomData {

  protected _discriminator: string;

  constructor(data?: IFlightSegmentResultCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "FlightSegmentResultCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): FlightSegmentResultCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "SABRE") {
      let result = new SabreFlightSegmentResultCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "TRAVELFUSION") {
      let result = new TravelFusionFlightSegmentResultCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'FlightSegmentResultCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IFlightSegmentResultCustomData {
}

export class SabreFlightSegmentResultCustomData extends FlightSegmentResultCustomData implements ISabreFlightSegmentResultCustomData {
  /** Information whether the flight segment is part of a married connection.
   "O" means "no". "I" means "yes" */
  MarriageGrp?: string | undefined;

  constructor(data?: ISabreFlightSegmentResultCustomData) {
    super(data);
    this._discriminator = "SABRE";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.MarriageGrp = _data["MarriageGrp"];
    }
  }

  static fromJS(data: any): SabreFlightSegmentResultCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreFlightSegmentResultCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["MarriageGrp"] = this.MarriageGrp;
    super.toJSON(data);
    return data;
  }
}

export interface ISabreFlightSegmentResultCustomData extends IFlightSegmentResultCustomData {
  /** Information whether the flight segment is part of a married connection.
   "O" means "no". "I" means "yes" */
  MarriageGrp?: string | undefined;
}

export class TravelFusionFlightSegmentResultCustomData extends FlightSegmentResultCustomData implements ITravelFusionFlightSegmentResultCustomData {

  constructor(data?: ITravelFusionFlightSegmentResultCustomData) {
    super(data);
    this._discriminator = "TRAVELFUSION";
  }

  init(_data?: any) {
    super.init(_data);
  }

  static fromJS(data: any): TravelFusionFlightSegmentResultCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new TravelFusionFlightSegmentResultCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    super.toJSON(data);
    return data;
  }
}

export interface ITravelFusionFlightSegmentResultCustomData extends IFlightSegmentResultCustomData {
}

export abstract class CustomerCustomDataOfFlightSegmentResult implements ICustomerCustomDataOfFlightSegmentResult {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfFlightSegmentResult) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfFlightSegmentResult";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfFlightSegmentResult {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfFlightSegmentResult' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfFlightSegmentResult {
}

export class Airport implements IAirport {
  /** Airport IATA code */
  IataCode?: string | undefined;
  /** Airport Name */
  Name?: string | undefined;
  /** Airport City Name */
  CityName?: string | undefined;
  /** Airport Country Code */
  CountryCode?: string | undefined;
  /** Airport Country Name */
  CountryName?: string | undefined;
  /** Airport Location */
  Location?: LatLng | undefined;

  constructor(data?: IAirport) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.IataCode = _data["IataCode"];
      this.Name = _data["Name"];
      this.CityName = _data["CityName"];
      this.CountryCode = _data["CountryCode"];
      this.CountryName = _data["CountryName"];
      this.Location = _data["Location"] ? LatLng.fromJS(_data["Location"]) : <any>undefined;
    }
  }

  static fromJS(data: any): Airport {
    data = typeof data === 'object' ? data : {};
    let result = new Airport();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["IataCode"] = this.IataCode;
    data["Name"] = this.Name;
    data["CityName"] = this.CityName;
    data["CountryCode"] = this.CountryCode;
    data["CountryName"] = this.CountryName;
    data["Location"] = this.Location ? this.Location.toJSON() : <any>undefined;
    return data;
  }
}

export interface IAirport {
  /** Airport IATA code */
  IataCode?: string | undefined;
  /** Airport Name */
  Name?: string | undefined;
  /** Airport City Name */
  CityName?: string | undefined;
  /** Airport Country Code */
  CountryCode?: string | undefined;
  /** Airport Country Name */
  CountryName?: string | undefined;
  /** Airport Location */
  Location?: LatLng | undefined;
}

export class AirportTerminal extends Airport implements IAirportTerminal {
  /** Terminal Code */
  TerminalCode?: string | undefined;
  /** Terminal Text */
  TerminalText?: string | undefined;

  constructor(data?: IAirportTerminal) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.TerminalCode = _data["TerminalCode"];
      this.TerminalText = _data["TerminalText"];
    }
  }

  static fromJS(data: any): AirportTerminal {
    data = typeof data === 'object' ? data : {};
    let result = new AirportTerminal();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["TerminalCode"] = this.TerminalCode;
    data["TerminalText"] = this.TerminalText;
    super.toJSON(data);
    return data;
  }
}

export interface IAirportTerminal extends IAirport {
  /** Terminal Code */
  TerminalCode?: string | undefined;
  /** Terminal Text */
  TerminalText?: string | undefined;
}

export class Carrier implements ICarrier {
  /** Carrier IATA code */
  IataCode?: string | undefined;
  /** Carrier Text */
  Name?: string | undefined;

  constructor(data?: ICarrier) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.IataCode = _data["IataCode"];
      this.Name = _data["Name"];
    }
  }

  static fromJS(data: any): Carrier {
    data = typeof data === 'object' ? data : {};
    let result = new Carrier();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["IataCode"] = this.IataCode;
    data["Name"] = this.Name;
    return data;
  }
}

export interface ICarrier {
  /** Carrier IATA code */
  IataCode?: string | undefined;
  /** Carrier Text */
  Name?: string | undefined;
}

export class FlightCarrier extends Carrier implements IFlightCarrier {
  /** The Carrier Flight Number */
  FlightNumber?: string | undefined;
  /** Any description of the current FlightCarrier */
  FlightCarrierDescription?: string | undefined;

  constructor(data?: IFlightCarrier) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.FlightNumber = _data["FlightNumber"];
      this.FlightCarrierDescription = _data["FlightCarrierDescription"];
    }
  }

  static fromJS(data: any): FlightCarrier {
    data = typeof data === 'object' ? data : {};
    let result = new FlightCarrier();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["FlightNumber"] = this.FlightNumber;
    data["FlightCarrierDescription"] = this.FlightCarrierDescription;
    super.toJSON(data);
    return data;
  }
}

export interface IFlightCarrier extends ICarrier {
  /** The Carrier Flight Number */
  FlightNumber?: string | undefined;
  /** Any description of the current FlightCarrier */
  FlightCarrierDescription?: string | undefined;
}

export class Aircraft implements IAircraft {
  /** Aircraft Code */
  Code?: string | undefined;
  /** Aircraft Text */
  Text?: string | undefined;

  constructor(data?: IAircraft) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Code = _data["Code"];
      this.Text = _data["Text"];
    }
  }

  static fromJS(data: any): Aircraft {
    data = typeof data === 'object' ? data : {};
    let result = new Aircraft();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Code"] = this.Code;
    data["Text"] = this.Text;
    return data;
  }
}

export interface IAircraft {
  /** Aircraft Code */
  Code?: string | undefined;
  /** Aircraft Text */
  Text?: string | undefined;
}

export class FlightFareGroupResult implements IFlightFareGroupResult {
  /** Flight Fare Group Result Id */
  Id?: string | undefined;
  /** ConnectorCode of the current FareGroup */
  ConnectorCode?: EH2HConnectorCode;
  /** The Pax Fare List of the current FareGroup */
  PaxFareList?: FlightPaxFareResult[] | undefined;
  /** Additional feed applied to the results

   SABRE:

   Fore example 21 Euro on EasyJet(U2) fee - Difference from Fares and the total price */
  FeeList?: Tax[] | undefined;
  /** The Total Amount From Connector */
  Amount?: Total | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: FlightFareGroupResultCustomData | undefined;

  constructor(data?: IFlightFareGroupResult) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Id = _data["Id"];
      this.ConnectorCode = _data["ConnectorCode"];
      if (Array.isArray(_data["PaxFareList"])) {
        this.PaxFareList = [] as any;
        for (let item of _data["PaxFareList"])
          this.PaxFareList!.push(FlightPaxFareResult.fromJS(item));
      }
      if (Array.isArray(_data["FeeList"])) {
        this.FeeList = [] as any;
        for (let item of _data["FeeList"])
          this.FeeList!.push(Tax.fromJS(item));
      }
      this.Amount = _data["Amount"] ? Total.fromJS(_data["Amount"]) : <any>undefined;
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? FlightFareGroupResultCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): FlightFareGroupResult {
    data = typeof data === 'object' ? data : {};
    let result = new FlightFareGroupResult();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Id"] = this.Id;
    data["ConnectorCode"] = this.ConnectorCode;
    if (Array.isArray(this.PaxFareList)) {
      data["PaxFareList"] = [];
      for (let item of this.PaxFareList)
        data["PaxFareList"].push(item.toJSON());
    }
    if (Array.isArray(this.FeeList)) {
      data["FeeList"] = [];
      for (let item of this.FeeList)
        data["FeeList"].push(item.toJSON());
    }
    data["Amount"] = this.Amount ? this.Amount.toJSON() : <any>undefined;
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    return data;
  }
}

export interface IFlightFareGroupResult {
  /** Flight Fare Group Result Id */
  Id?: string | undefined;
  /** ConnectorCode of the current FareGroup */
  ConnectorCode?: EH2HConnectorCode;
  /** The Pax Fare List of the current FareGroup */
  PaxFareList?: FlightPaxFareResult[] | undefined;
  /** Additional feed applied to the results

   SABRE:

   Fore example 21 Euro on EasyJet(U2) fee - Difference from Fares and the total price */
  FeeList?: Tax[] | undefined;
  /** The Total Amount From Connector */
  Amount?: Total | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: FlightFareGroupResultCustomData | undefined;
}

export class FlightPaxFare implements IFlightPaxFare {
  /** Flight Fare Id */
  Id?: string | undefined;
  /** Pax Type of the fare */
  PaxType?: EPaxType;
  /** Pax Count of the fare */
  PaxCount?: number;
  /** Fare Flight Segments details */
  FlightSegmentDetails?: FareSegmentDetail[] | undefined;
  /** Fare Penalties */
  FarePenalties?: FarePenalties | undefined;
  /** Define if the fare is Refundable or not */
  Refundable?: boolean;
  /** Last Ticket Date */
  LastTicketDate?: string | undefined;
  /** Fare Amount and Taxes */
  Amount?: Total | undefined;

  constructor(data?: IFlightPaxFare) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Id = _data["Id"];
      this.PaxType = _data["PaxType"];
      this.PaxCount = _data["PaxCount"];
      if (Array.isArray(_data["FlightSegmentDetails"])) {
        this.FlightSegmentDetails = [] as any;
        for (let item of _data["FlightSegmentDetails"])
          this.FlightSegmentDetails!.push(FareSegmentDetail.fromJS(item));
      }
      this.FarePenalties = _data["FarePenalties"] ? FarePenalties.fromJS(_data["FarePenalties"]) : <any>undefined;
      this.Refundable = _data["Refundable"];
      this.LastTicketDate = _data["LastTicketDate"];
      this.Amount = _data["Amount"] ? Total.fromJS(_data["Amount"]) : <any>undefined;
    }
  }

  static fromJS(data: any): FlightPaxFare {
    data = typeof data === 'object' ? data : {};
    let result = new FlightPaxFare();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Id"] = this.Id;
    data["PaxType"] = this.PaxType;
    data["PaxCount"] = this.PaxCount;
    if (Array.isArray(this.FlightSegmentDetails)) {
      data["FlightSegmentDetails"] = [];
      for (let item of this.FlightSegmentDetails)
        data["FlightSegmentDetails"].push(item.toJSON());
    }
    data["FarePenalties"] = this.FarePenalties ? this.FarePenalties.toJSON() : <any>undefined;
    data["Refundable"] = this.Refundable;
    data["LastTicketDate"] = this.LastTicketDate;
    data["Amount"] = this.Amount ? this.Amount.toJSON() : <any>undefined;
    return data;
  }
}

export interface IFlightPaxFare {
  /** Flight Fare Id */
  Id?: string | undefined;
  /** Pax Type of the fare */
  PaxType?: EPaxType;
  /** Pax Count of the fare */
  PaxCount?: number;
  /** Fare Flight Segments details */
  FlightSegmentDetails?: FareSegmentDetail[] | undefined;
  /** Fare Penalties */
  FarePenalties?: FarePenalties | undefined;
  /** Define if the fare is Refundable or not */
  Refundable?: boolean;
  /** Last Ticket Date */
  LastTicketDate?: string | undefined;
  /** Fare Amount and Taxes */
  Amount?: Total | undefined;
}

export class FlightPaxFareResult extends FlightPaxFare implements IFlightPaxFareResult {
  /** Connector Custom Data */
  ConnectorCustomData?: FlightFareResultCustomData | undefined;

  constructor(data?: IFlightPaxFareResult) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? FlightFareResultCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): FlightPaxFareResult {
    data = typeof data === 'object' ? data : {};
    let result = new FlightPaxFareResult();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IFlightPaxFareResult extends IFlightPaxFare {
  /** Connector Custom Data */
  ConnectorCustomData?: FlightFareResultCustomData | undefined;
}

export abstract class FlightFareResultCustomData implements IFlightFareResultCustomData {

  protected _discriminator: string;

  constructor(data?: IFlightFareResultCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "FlightFareResultCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): FlightFareResultCustomData {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'FlightFareResultCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IFlightFareResultCustomData {
}

export abstract class CustomerCustomDataOfFlightPaxFareResult implements ICustomerCustomDataOfFlightPaxFareResult {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfFlightPaxFareResult) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfFlightPaxFareResult";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfFlightPaxFareResult {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfFlightPaxFareResult' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfFlightPaxFareResult {
}

export class FareSegmentDetail implements IFareSegmentDetail {
  /** The Flight Segment Id Reference */
  FlightSegmentRefId?: string | undefined;
  /** The Fare Type */
  FareType?: EFareType;
  /** Fare Type Pricing Code if present in the Connector */
  FareTypeCode?: string | undefined;
  /** Flight Cabin */
  Cabin?: EFlightCabin;
  /** Flight Cabin Code
   Y - Economy, C - Business */
  CabinCode?: string | undefined;
  /** Flight Class */
  Class?: string | undefined;
  /** Flight Class Availability GDS Example Class=J ClassAvail=9  */
  ClassAvail?: string | undefined;
  /** Flight FareBasis */
  FareBasis?: string | undefined;
  /** Flight FareBasis MatchedAccountCode

   SABRE return this info in the Farebasis and should be used for the book process to get the same fare */
  MatchedAccountCode?: string | undefined;
  /** Flight Meal */
  Meal?: FlightMeal | undefined;
  /** Flight Baggage Details included in the fare */
  BaggageDetails?: FlightBaggageDetails | undefined;
  /** Branded Fare */
  BrandedFare?: string | undefined;
  /** Fare description */
  FareDescription?: string | undefined;

  constructor(data?: IFareSegmentDetail) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.FlightSegmentRefId = _data["FlightSegmentRefId"];
      this.FareType = _data["FareType"];
      this.FareTypeCode = _data["FareTypeCode"];
      this.Cabin = _data["Cabin"];
      this.CabinCode = _data["CabinCode"];
      this.Class = _data["Class"];
      this.ClassAvail = _data["ClassAvail"];
      this.FareBasis = _data["FareBasis"];
      this.MatchedAccountCode = _data["MatchedAccountCode"];
      this.Meal = _data["Meal"] ? FlightMeal.fromJS(_data["Meal"]) : <any>undefined;
      this.BaggageDetails = _data["BaggageDetails"] ? FlightBaggageDetails.fromJS(_data["BaggageDetails"]) : <any>undefined;
      this.BrandedFare = _data["BrandedFare"];
      this.FareDescription = _data["FareDescription"];
    }
  }

  static fromJS(data: any): FareSegmentDetail {
    data = typeof data === 'object' ? data : {};
    let result = new FareSegmentDetail();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["FlightSegmentRefId"] = this.FlightSegmentRefId;
    data["FareType"] = this.FareType;
    data["FareTypeCode"] = this.FareTypeCode;
    data["Cabin"] = this.Cabin;
    data["CabinCode"] = this.CabinCode;
    data["Class"] = this.Class;
    data["ClassAvail"] = this.ClassAvail;
    data["FareBasis"] = this.FareBasis;
    data["MatchedAccountCode"] = this.MatchedAccountCode;
    data["Meal"] = this.Meal ? this.Meal.toJSON() : <any>undefined;
    data["BaggageDetails"] = this.BaggageDetails ? this.BaggageDetails.toJSON() : <any>undefined;
    data["BrandedFare"] = this.BrandedFare;
    data["FareDescription"] = this.FareDescription;
    return data;
  }
}

export interface IFareSegmentDetail {
  /** The Flight Segment Id Reference */
  FlightSegmentRefId?: string | undefined;
  /** The Fare Type */
  FareType?: EFareType;
  /** Fare Type Pricing Code if present in the Connector */
  FareTypeCode?: string | undefined;
  /** Flight Cabin */
  Cabin?: EFlightCabin;
  /** Flight Cabin Code
   Y - Economy, C - Business */
  CabinCode?: string | undefined;
  /** Flight Class */
  Class?: string | undefined;
  /** Flight Class Availability GDS Example Class=J ClassAvail=9  */
  ClassAvail?: string | undefined;
  /** Flight FareBasis */
  FareBasis?: string | undefined;
  /** Flight FareBasis MatchedAccountCode

   SABRE return this info in the Farebasis and should be used for the book process to get the same fare */
  MatchedAccountCode?: string | undefined;
  /** Flight Meal */
  Meal?: FlightMeal | undefined;
  /** Flight Baggage Details included in the fare */
  BaggageDetails?: FlightBaggageDetails | undefined;
  /** Branded Fare */
  BrandedFare?: string | undefined;
  /** Fare description */
  FareDescription?: string | undefined;
}

export enum EFareType {
  PUBLIC = "PUBLIC",
  PRIVATE = "PRIVATE",
  TO = "TO",
}

export enum EFlightCabin {
  ECONOMY = "ECONOMY",
  PREMIUM_ECONOMY = "PREMIUM_ECONOMY",
  BUSINESS = "BUSINESS",
  PREMIUM_BUSINESS = "PREMIUM_BUSINESS",
  FIRST = "FIRST",
  PREMIUM_FIRST = "PREMIUM_FIRST",
}

export class FlightMeal implements IFlightMeal {
  /** Flight Meal Code */
  Code?: string | undefined;
  /** Flight Meal Text */
  Text?: string | undefined;

  constructor(data?: IFlightMeal) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Code = _data["Code"];
      this.Text = _data["Text"];
    }
  }

  static fromJS(data: any): FlightMeal {
    data = typeof data === 'object' ? data : {};
    let result = new FlightMeal();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Code"] = this.Code;
    data["Text"] = this.Text;
    return data;
  }
}

export interface IFlightMeal {
  /** Flight Meal Code */
  Code?: string | undefined;
  /** Flight Meal Text */
  Text?: string | undefined;
}

export class FlightBaggageDetails implements IFlightBaggageDetails {
  /** Number of baggage */
  BaggageCount?: number;
  /** Baggage Code  */
  Code?: string | undefined;
  /** Baggage Info Text  */
  Text?: string | undefined;

  constructor(data?: IFlightBaggageDetails) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.BaggageCount = _data["BaggageCount"];
      this.Code = _data["Code"];
      this.Text = _data["Text"];
    }
  }

  static fromJS(data: any): FlightBaggageDetails {
    data = typeof data === 'object' ? data : {};
    let result = new FlightBaggageDetails();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["BaggageCount"] = this.BaggageCount;
    data["Code"] = this.Code;
    data["Text"] = this.Text;
    return data;
  }
}

export interface IFlightBaggageDetails {
  /** Number of baggage */
  BaggageCount?: number;
  /** Baggage Code  */
  Code?: string | undefined;
  /** Baggage Info Text  */
  Text?: string | undefined;
}

export class FarePenalties implements IFarePenalties {
  /** Indicates if the Fare is Exchangeable before departure of the first flight */
  ExchangeBefore?: FarePenalty | undefined;
  /** Indicates if the Fare is Exchangeable after departure of the first flight */
  ExchangeAfter?: FarePenalty | undefined;
  /** Indicates if the Fare is Refundable before departure of the first flight */
  RefundBefore?: FarePenalty | undefined;
  /** Indicates if the Fare is Refundable after departure of the first flight */
  RefundAfter?: FarePenalty | undefined;

  constructor(data?: IFarePenalties) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.ExchangeBefore = _data["ExchangeBefore"] ? FarePenalty.fromJS(_data["ExchangeBefore"]) : <any>undefined;
      this.ExchangeAfter = _data["ExchangeAfter"] ? FarePenalty.fromJS(_data["ExchangeAfter"]) : <any>undefined;
      this.RefundBefore = _data["RefundBefore"] ? FarePenalty.fromJS(_data["RefundBefore"]) : <any>undefined;
      this.RefundAfter = _data["RefundAfter"] ? FarePenalty.fromJS(_data["RefundAfter"]) : <any>undefined;
    }
  }

  static fromJS(data: any): FarePenalties {
    data = typeof data === 'object' ? data : {};
    let result = new FarePenalties();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ExchangeBefore"] = this.ExchangeBefore ? this.ExchangeBefore.toJSON() : <any>undefined;
    data["ExchangeAfter"] = this.ExchangeAfter ? this.ExchangeAfter.toJSON() : <any>undefined;
    data["RefundBefore"] = this.RefundBefore ? this.RefundBefore.toJSON() : <any>undefined;
    data["RefundAfter"] = this.RefundAfter ? this.RefundAfter.toJSON() : <any>undefined;
    return data;
  }
}

export interface IFarePenalties {
  /** Indicates if the Fare is Exchangeable before departure of the first flight */
  ExchangeBefore?: FarePenalty | undefined;
  /** Indicates if the Fare is Exchangeable after departure of the first flight */
  ExchangeAfter?: FarePenalty | undefined;
  /** Indicates if the Fare is Refundable before departure of the first flight */
  RefundBefore?: FarePenalty | undefined;
  /** Indicates if the Fare is Refundable after departure of the first flight */
  RefundAfter?: FarePenalty | undefined;
}

export class FarePenalty implements IFarePenalty {
  /** Define if the penalty is applicable or not */
  IsApplicable?: boolean;
  /** Penalty conditions */
  PenaltyConditions?: string[] | undefined;
  /** Penalty Amount if Applicable */
  PenaltyAmount?: CurrencyAmount | undefined;

  constructor(data?: IFarePenalty) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.IsApplicable = _data["IsApplicable"];
      if (Array.isArray(_data["PenaltyConditions"])) {
        this.PenaltyConditions = [] as any;
        for (let item of _data["PenaltyConditions"])
          this.PenaltyConditions!.push(item);
      }
      this.PenaltyAmount = _data["PenaltyAmount"] ? CurrencyAmount.fromJS(_data["PenaltyAmount"]) : <any>undefined;
    }
  }

  static fromJS(data: any): FarePenalty {
    data = typeof data === 'object' ? data : {};
    let result = new FarePenalty();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["IsApplicable"] = this.IsApplicable;
    if (Array.isArray(this.PenaltyConditions)) {
      data["PenaltyConditions"] = [];
      for (let item of this.PenaltyConditions)
        data["PenaltyConditions"].push(item);
    }
    data["PenaltyAmount"] = this.PenaltyAmount ? this.PenaltyAmount.toJSON() : <any>undefined;
    return data;
  }
}

export interface IFarePenalty {
  /** Define if the penalty is applicable or not */
  IsApplicable?: boolean;
  /** Penalty conditions */
  PenaltyConditions?: string[] | undefined;
  /** Penalty Amount if Applicable */
  PenaltyAmount?: CurrencyAmount | undefined;
}

export abstract class FlightFareGroupResultCustomData implements IFlightFareGroupResultCustomData {

  protected _discriminator: string;

  constructor(data?: IFlightFareGroupResultCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "FlightFareGroupResultCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): FlightFareGroupResultCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "TRAVELFUSION") {
      let result = new TravelFusionFlightFareGroupResultCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'FlightFareGroupResultCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IFlightFareGroupResultCustomData {
}

export class TravelFusionFlightFareGroupResultCustomData extends FlightFareGroupResultCustomData implements ITravelFusionFlightFareGroupResultCustomData {
  ResultsReferences?: TravelFusionSolutionReference[] | undefined;
  RequiredParameterList?: CustomSupplierParameter[] | undefined;

  constructor(data?: ITravelFusionFlightFareGroupResultCustomData) {
    super(data);
    this._discriminator = "TRAVELFUSION";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      if (Array.isArray(_data["ResultsReferences"])) {
        this.ResultsReferences = [] as any;
        for (let item of _data["ResultsReferences"])
          this.ResultsReferences!.push(TravelFusionSolutionReference.fromJS(item));
      }
      if (Array.isArray(_data["RequiredParameterList"])) {
        this.RequiredParameterList = [] as any;
        for (let item of _data["RequiredParameterList"])
          this.RequiredParameterList!.push(CustomSupplierParameter.fromJS(item));
      }
    }
  }

  static fromJS(data: any): TravelFusionFlightFareGroupResultCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new TravelFusionFlightFareGroupResultCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.ResultsReferences)) {
      data["ResultsReferences"] = [];
      for (let item of this.ResultsReferences)
        data["ResultsReferences"].push(item.toJSON());
    }
    if (Array.isArray(this.RequiredParameterList)) {
      data["RequiredParameterList"] = [];
      for (let item of this.RequiredParameterList)
        data["RequiredParameterList"].push(item.toJSON());
    }
    super.toJSON(data);
    return data;
  }
}

export interface ITravelFusionFlightFareGroupResultCustomData extends IFlightFareGroupResultCustomData {
  ResultsReferences?: TravelFusionSolutionReference[] | undefined;
  RequiredParameterList?: CustomSupplierParameter[] | undefined;
}

export class TravelFusionSolutionReference implements ITravelFusionSolutionReference {
  OutwardId?: string | undefined;
  ReturnId?: string | undefined;
  GroupId?: string | undefined;
  RoutingId?: string | undefined;

  constructor(data?: ITravelFusionSolutionReference) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.OutwardId = _data["OutwardId"];
      this.ReturnId = _data["ReturnId"];
      this.GroupId = _data["GroupId"];
      this.RoutingId = _data["RoutingId"];
    }
  }

  static fromJS(data: any): TravelFusionSolutionReference {
    data = typeof data === 'object' ? data : {};
    let result = new TravelFusionSolutionReference();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["OutwardId"] = this.OutwardId;
    data["ReturnId"] = this.ReturnId;
    data["GroupId"] = this.GroupId;
    data["RoutingId"] = this.RoutingId;
    return data;
  }
}

export interface ITravelFusionSolutionReference {
  OutwardId?: string | undefined;
  ReturnId?: string | undefined;
  GroupId?: string | undefined;
  RoutingId?: string | undefined;
}

export class CustomSupplierParameter implements ICustomSupplierParameter {
  Name?: string | undefined;
  Type?: ERequiredParameterType;
  DisplayText?: string | undefined;
  PerPassenger?: boolean;
  IsOptional?: string | undefined;
  IsSometimesRequired?: string | undefined;
  SelectLabel?: string | undefined;
  SelectOptions?: KeyValuePairOfStringAndString[] | undefined;
  Format?: string | undefined;

  constructor(data?: ICustomSupplierParameter) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Name = _data["Name"];
      this.Type = _data["Type"];
      this.DisplayText = _data["DisplayText"];
      this.PerPassenger = _data["PerPassenger"];
      this.IsOptional = _data["IsOptional"];
      this.IsSometimesRequired = _data["IsSometimesRequired"];
      this.SelectLabel = _data["SelectLabel"];
      if (Array.isArray(_data["SelectOptions"])) {
        this.SelectOptions = [] as any;
        for (let item of _data["SelectOptions"])
          this.SelectOptions!.push(KeyValuePairOfStringAndString.fromJS(item));
      }
      this.Format = _data["Format"];
    }
  }

  static fromJS(data: any): CustomSupplierParameter {
    data = typeof data === 'object' ? data : {};
    let result = new CustomSupplierParameter();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Name"] = this.Name;
    data["Type"] = this.Type;
    data["DisplayText"] = this.DisplayText;
    data["PerPassenger"] = this.PerPassenger;
    data["IsOptional"] = this.IsOptional;
    data["IsSometimesRequired"] = this.IsSometimesRequired;
    data["SelectLabel"] = this.SelectLabel;
    if (Array.isArray(this.SelectOptions)) {
      data["SelectOptions"] = [];
      for (let item of this.SelectOptions)
        data["SelectOptions"].push(item.toJSON());
    }
    data["Format"] = this.Format;
    return data;
  }
}

export interface ICustomSupplierParameter {
  Name?: string | undefined;
  Type?: ERequiredParameterType;
  DisplayText?: string | undefined;
  PerPassenger?: boolean;
  IsOptional?: string | undefined;
  IsSometimesRequired?: string | undefined;
  SelectLabel?: string | undefined;
  SelectOptions?: KeyValuePairOfStringAndString[] | undefined;
  Format?: string | undefined;
}

export enum ERequiredParameterType {
  Text = "Text",
  Boolean = "Boolean",
  FormattedText = "FormattedText",
  ValueSelect = "ValueSelect",
  MultiSelect = "MultiSelect",
  Custom = "Custom",
  Notice = "Notice",
}

export class KeyValuePairOfStringAndString implements IKeyValuePairOfStringAndString {
  Key?: string | undefined;
  Value?: string | undefined;

  constructor(data?: IKeyValuePairOfStringAndString) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Key = _data["Key"];
      this.Value = _data["Value"];
    }
  }

  static fromJS(data: any): KeyValuePairOfStringAndString {
    data = typeof data === 'object' ? data : {};
    let result = new KeyValuePairOfStringAndString();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Key"] = this.Key;
    data["Value"] = this.Value;
    return data;
  }
}

export interface IKeyValuePairOfStringAndString {
  Key?: string | undefined;
  Value?: string | undefined;
}

export abstract class CustomerCustomDataOfFlightFareGroupResult implements ICustomerCustomDataOfFlightFareGroupResult {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfFlightFareGroupResult) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfFlightFareGroupResult";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfFlightFareGroupResult {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfFlightFareGroupResult' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfFlightFareGroupResult {
}

export abstract class CustomerCustomDataOfSingleFlightAvailResult implements ICustomerCustomDataOfSingleFlightAvailResult {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfSingleFlightAvailResult) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfSingleFlightAvailResult";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfSingleFlightAvailResult {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfSingleFlightAvailResult' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfSingleFlightAvailResult {
}

export abstract class FlightAvailabilityOutputCustomData implements IFlightAvailabilityOutputCustomData {

  protected _discriminator: string;

  constructor(data?: IFlightAvailabilityOutputCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "FlightAvailabilityOutputCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): FlightAvailabilityOutputCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "AMADEUS") {
      let result = new AmadeusFlightAvailabilityOutputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "SABRE") {
      let result = new SabreFlightAvailabilityOutputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "TRAVELFUSION") {
      let result = new TravelFusionFlightAvailabilityOutputCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'FlightAvailabilityOutputCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IFlightAvailabilityOutputCustomData {
}

export class AmadeusFlightAvailabilityOutputCustomData extends FlightAvailabilityOutputCustomData implements IAmadeusFlightAvailabilityOutputCustomData {
  /** The Amadeus Session */
  AmadeusSession?: AmadeusGdsSessionCustomData | undefined;

  constructor(data?: IAmadeusFlightAvailabilityOutputCustomData) {
    super(data);
    this._discriminator = "AMADEUS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.AmadeusSession = _data["AmadeusSession"] ? AmadeusGdsSessionCustomData.fromJS(_data["AmadeusSession"]) : <any>undefined;
    }
  }

  static fromJS(data: any): AmadeusFlightAvailabilityOutputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new AmadeusFlightAvailabilityOutputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["AmadeusSession"] = this.AmadeusSession ? this.AmadeusSession.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IAmadeusFlightAvailabilityOutputCustomData extends IFlightAvailabilityOutputCustomData {
  /** The Amadeus Session */
  AmadeusSession?: AmadeusGdsSessionCustomData | undefined;
}

export abstract class GdsSessionCustomData implements IGdsSessionCustomData {

  protected _discriminator: string;

  constructor(data?: IGdsSessionCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "GdsSessionCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): GdsSessionCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "AMADEUS") {
      let result = new AmadeusGdsSessionCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "SABRE") {
      let result = new SabreGdsSessionCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'GdsSessionCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IGdsSessionCustomData {
}

export class AmadeusGdsSessionCustomData extends GdsSessionCustomData implements IAmadeusGdsSessionCustomData {
  /** Session Id */
  SessionId?: string | undefined;
  /** Session Status */
  SessionStatus?: EAmadeusSessionStatus;
  /** Sequence Number -&gt; Used by Amadeus always incremented */
  SequenceNumber?: number;
  /** Amadeus Security Token */
  SecurityToken?: string | undefined;

  constructor(data?: IAmadeusGdsSessionCustomData) {
    super(data);
    this._discriminator = "AMADEUS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.SessionId = _data["SessionId"];
      this.SessionStatus = _data["SessionStatus"];
      this.SequenceNumber = _data["SequenceNumber"];
      this.SecurityToken = _data["SecurityToken"];
    }
  }

  static fromJS(data: any): AmadeusGdsSessionCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new AmadeusGdsSessionCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["SessionId"] = this.SessionId;
    data["SessionStatus"] = this.SessionStatus;
    data["SequenceNumber"] = this.SequenceNumber;
    data["SecurityToken"] = this.SecurityToken;
    super.toJSON(data);
    return data;
  }
}

export interface IAmadeusGdsSessionCustomData extends IGdsSessionCustomData {
  /** Session Id */
  SessionId?: string | undefined;
  /** Session Status */
  SessionStatus?: EAmadeusSessionStatus;
  /** Sequence Number -&gt; Used by Amadeus always incremented */
  SequenceNumber?: number;
  /** Amadeus Security Token */
  SecurityToken?: string | undefined;
}

export enum EAmadeusSessionStatus {
  START = "START",
  END = "END",
  IN_SERIES = "IN_SERIES",
}

export class SabreGdsSessionCustomData extends GdsSessionCustomData implements ISabreGdsSessionCustomData {
  /** Session Id */
  Id?: string | undefined;
  /** Session Type */
  Type?: ESabreSessionType;
  /** Session Environment */
  Environment?: string | undefined;
  /** Session Status */
  Status?: ESabreSessionStatus;
  /** Session Last Call UTC */
  LastCallUtc?: string;
  /** Sabre Binary Security Token -&gt; Passed in the Header of Messages */
  BinarySecurityToken?: string | undefined;
  /** Sabre ConversationId -&gt; If null it'll take the Pid of the request */
  ConversationId?: string | undefined;
  /** Sabre ProcessId -&gt; If null it'll take the Pid of the request */
  ProcessId?: string | undefined;

  constructor(data?: ISabreGdsSessionCustomData) {
    super(data);
    this._discriminator = "SABRE";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Id = _data["Id"];
      this.Type = _data["Type"];
      this.Environment = _data["Environment"];
      this.Status = _data["Status"];
      this.LastCallUtc = _data["LastCallUtc"];
      this.BinarySecurityToken = _data["BinarySecurityToken"];
      this.ConversationId = _data["ConversationId"];
      this.ProcessId = _data["ProcessId"];
    }
  }

  static fromJS(data: any): SabreGdsSessionCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreGdsSessionCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Id"] = this.Id;
    data["Type"] = this.Type;
    data["Environment"] = this.Environment;
    data["Status"] = this.Status;
    data["LastCallUtc"] = this.LastCallUtc;
    data["BinarySecurityToken"] = this.BinarySecurityToken;
    data["ConversationId"] = this.ConversationId;
    data["ProcessId"] = this.ProcessId;
    super.toJSON(data);
    return data;
  }
}

export interface ISabreGdsSessionCustomData extends IGdsSessionCustomData {
  /** Session Id */
  Id?: string | undefined;
  /** Session Type */
  Type?: ESabreSessionType;
  /** Session Environment */
  Environment?: string | undefined;
  /** Session Status */
  Status?: ESabreSessionStatus;
  /** Session Last Call UTC */
  LastCallUtc?: string;
  /** Sabre Binary Security Token -&gt; Passed in the Header of Messages */
  BinarySecurityToken?: string | undefined;
  /** Sabre ConversationId -&gt; If null it'll take the Pid of the request */
  ConversationId?: string | undefined;
  /** Sabre ProcessId -&gt; If null it'll take the Pid of the request */
  ProcessId?: string | undefined;
}

export enum ESabreSessionType {
  SESSION = "SESSION",
  TOKEN = "TOKEN",
}

export enum ESabreSessionStatus {
  AVAILABLE = "AVAILABLE",
  BUSY = "BUSY",
  CLOSED = "CLOSED",
}

/** Sabre FlightAvailability Output CustomData */
export class SabreFlightAvailabilityOutputCustomData extends FlightAvailabilityOutputCustomData implements ISabreFlightAvailabilityOutputCustomData {
  /** Outbound One Way
   Activate Multi ticket SOW to obtain  */
  FirstOneWay?: SingleFlightAvailResult[] | undefined;
  /** Inbound One Way
   Activate Multi ticket SOW to obtain  */
  SecondOneWay?: SingleFlightAvailResult[] | undefined;

  constructor(data?: ISabreFlightAvailabilityOutputCustomData) {
    super(data);
    this._discriminator = "SABRE";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      if (Array.isArray(_data["FirstOneWay"])) {
        this.FirstOneWay = [] as any;
        for (let item of _data["FirstOneWay"])
          this.FirstOneWay!.push(SingleFlightAvailResult.fromJS(item));
      }
      if (Array.isArray(_data["SecondOneWay"])) {
        this.SecondOneWay = [] as any;
        for (let item of _data["SecondOneWay"])
          this.SecondOneWay!.push(SingleFlightAvailResult.fromJS(item));
      }
    }
  }

  static fromJS(data: any): SabreFlightAvailabilityOutputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreFlightAvailabilityOutputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.FirstOneWay)) {
      data["FirstOneWay"] = [];
      for (let item of this.FirstOneWay)
        data["FirstOneWay"].push(item.toJSON());
    }
    if (Array.isArray(this.SecondOneWay)) {
      data["SecondOneWay"] = [];
      for (let item of this.SecondOneWay)
        data["SecondOneWay"].push(item.toJSON());
    }
    super.toJSON(data);
    return data;
  }
}

/** Sabre FlightAvailability Output CustomData */
export interface ISabreFlightAvailabilityOutputCustomData extends IFlightAvailabilityOutputCustomData {
  /** Outbound One Way
   Activate Multi ticket SOW to obtain  */
  FirstOneWay?: SingleFlightAvailResult[] | undefined;
  /** Inbound One Way
   Activate Multi ticket SOW to obtain  */
  SecondOneWay?: SingleFlightAvailResult[] | undefined;
}

export class TravelFusionFlightAvailabilityOutputCustomData extends FlightAvailabilityOutputCustomData implements ITravelFusionFlightAvailabilityOutputCustomData {

  constructor(data?: ITravelFusionFlightAvailabilityOutputCustomData) {
    super(data);
    this._discriminator = "TRAVELFUSION";
  }

  init(_data?: any) {
    super.init(_data);
  }

  static fromJS(data: any): TravelFusionFlightAvailabilityOutputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new TravelFusionFlightAvailabilityOutputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    super.toJSON(data);
    return data;
  }
}

export interface ITravelFusionFlightAvailabilityOutputCustomData extends IFlightAvailabilityOutputCustomData {
}

export abstract class CustomerCustomDataOfJupiterFlightAvailabilityOutput implements ICustomerCustomDataOfJupiterFlightAvailabilityOutput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterFlightAvailabilityOutput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterFlightAvailabilityOutput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterFlightAvailabilityOutput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterFlightAvailabilityOutput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterFlightAvailabilityOutput {
}

export class JupiterFlightAvailabilityRQ extends BaseCacheableRQ implements IJupiterFlightAvailabilityRQ {
  /** JupiterFlightAvailabilityInput Request */
  Request?: JupiterFlightAvailabilityInput | undefined;

  constructor(data?: IJupiterFlightAvailabilityRQ) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Request = _data["Request"] ? JupiterFlightAvailabilityInput.fromJS(_data["Request"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterFlightAvailabilityRQ {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterFlightAvailabilityRQ();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Request"] = this.Request ? this.Request.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterFlightAvailabilityRQ extends IBaseCacheableRQ {
  /** JupiterFlightAvailabilityInput Request */
  Request?: JupiterFlightAvailabilityInput | undefined;
}

export class JupiterFlightAvailabilityInput extends BaseInput implements IJupiterFlightAvailabilityInput {
  /** List of Connectors code to search */
  ConnectorsSearch!: EH2HConnectorCode[];
  /** Flight Steps */
  FlightSteps!: FlightStepRequest[];
  /** Adults count
   More than 12 Years Old */
  AdultCount!: number;
  /** Children count
   form 2 to 11 Years Old */
  ChildCount!: number;
  /** Infants count
   Less than 2 Years Old */
  InfantCount!: number;
  /** Preferred Currency to search. Depends on Connectors if the features is available */
  PreferredCurrency?: string | undefined;
  /** Merge different Connector Result on same SingleFlightAvailResult based on ResultKey (the key generated by the flights) */
  MergeConnectorResults?: boolean;
  /** List of ConnectorCustomData */
  ConnectorCustomData?: FlightAvailabilityInputCustomData[] | undefined;

  constructor(data?: IJupiterFlightAvailabilityInput) {
    super(data);
    if (!data) {
      this.ConnectorsSearch = [];
      this.FlightSteps = [];
      this.MergeConnectorResults = true;
    }
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      if (Array.isArray(_data["ConnectorsSearch"])) {
        this.ConnectorsSearch = [] as any;
        for (let item of _data["ConnectorsSearch"])
          this.ConnectorsSearch!.push(item);
      }
      if (Array.isArray(_data["FlightSteps"])) {
        this.FlightSteps = [] as any;
        for (let item of _data["FlightSteps"])
          this.FlightSteps!.push(FlightStepRequest.fromJS(item));
      }
      this.AdultCount = _data["AdultCount"];
      this.ChildCount = _data["ChildCount"];
      this.InfantCount = _data["InfantCount"];
      this.PreferredCurrency = _data["PreferredCurrency"];
      this.MergeConnectorResults = _data["MergeConnectorResults"] !== undefined ? _data["MergeConnectorResults"] : true;
      if (Array.isArray(_data["ConnectorCustomData"])) {
        this.ConnectorCustomData = [] as any;
        for (let item of _data["ConnectorCustomData"])
          this.ConnectorCustomData!.push(FlightAvailabilityInputCustomData.fromJS(item));
      }
    }
  }

  static fromJS(data: any): JupiterFlightAvailabilityInput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterFlightAvailabilityInput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.ConnectorsSearch)) {
      data["ConnectorsSearch"] = [];
      for (let item of this.ConnectorsSearch)
        data["ConnectorsSearch"].push(item);
    }
    if (Array.isArray(this.FlightSteps)) {
      data["FlightSteps"] = [];
      for (let item of this.FlightSteps)
        data["FlightSteps"].push(item.toJSON());
    }
    data["AdultCount"] = this.AdultCount;
    data["ChildCount"] = this.ChildCount;
    data["InfantCount"] = this.InfantCount;
    data["PreferredCurrency"] = this.PreferredCurrency;
    data["MergeConnectorResults"] = this.MergeConnectorResults;
    if (Array.isArray(this.ConnectorCustomData)) {
      data["ConnectorCustomData"] = [];
      for (let item of this.ConnectorCustomData)
        data["ConnectorCustomData"].push(item.toJSON());
    }
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterFlightAvailabilityInput extends IBaseInput {
  /** List of Connectors code to search */
  ConnectorsSearch: EH2HConnectorCode[];
  /** Flight Steps */
  FlightSteps: FlightStepRequest[];
  /** Adults count
   More than 12 Years Old */
  AdultCount: number;
  /** Children count
   form 2 to 11 Years Old */
  ChildCount: number;
  /** Infants count
   Less than 2 Years Old */
  InfantCount: number;
  /** Preferred Currency to search. Depends on Connectors if the features is available */
  PreferredCurrency?: string | undefined;
  /** Merge different Connector Result on same SingleFlightAvailResult based on ResultKey (the key generated by the flights) */
  MergeConnectorResults?: boolean;
  /** List of ConnectorCustomData */
  ConnectorCustomData?: FlightAvailabilityInputCustomData[] | undefined;
}

export class FlightStepRequest implements IFlightStepRequest {
  /** Departure DateTime */
  DepartureDate!: string;
  /** Departure Time
   Format d.hh:mm:ss */
  DepartureTime?: string | undefined;
  /** Departure Time Window - it's used only if DepartureTime is set */
  DepartureTimeWindow?: number | undefined;
  /** Flight Class */
  Cabin?: EFlightCabin | undefined;
  /** If the Cabin is Specified, it will handle the JumpCabin, only if the Connectors support the functionality

   true - the Cabin in the result can be different form the Cabin requested

   false - the Cabin in the result need to be the same Cabin requested

   AMADEUS:
   true - request with RC (Recommended Cabin) - At least one segment must have the Requested Cabin

   false - request without RC (Recommended Cabin) - All segments must have the Requested Cabin

   SABRE:
   there is no JumpCabin logic on single step (Origin-Destination).

   true - if any of the steps has the EnableJumpCabin it will send the JumpCabinLogic to Enabled

   false - if all the steps has the EnableJumpCabin to false it will send the JumpCabinLogic to Disabled */
  EnableJumpCabin?: boolean;
  /** Departure Airport IATA Code */
  DepartureAirport!: string;
  /** Arrival Airport IATA Code */
  ArrivalAirport!: string;
  /** Excluded Carriers IATA list */
  ExcludedCarriers?: string[] | undefined;
  /** Included Carriers IATA list */
  IncludedCarriers?: string[] | undefined;
  /** Search only for Direct Flights or not

   SABRE:

   There is no way to set the directs only on a step

   If any of the step has OnlyDirectFlights true, It will add a MaxStopQuantity count as

   Total Steps Count - Steps with OnlyDirectFlights Count */
  OnlyDirectFlights?: boolean;
  /** Search with baggage included

   AMADEUS:

   You can search a nr of bag on the whole itinerary, and not on a single step.

   If any of the step has BaggageIncluded to true it will be sent to Amadeus to search with bag. */
  BaggageIncluded?: boolean;
  /** Connector Custom Data */
  ConnectorCustomData?: FlightStepRequestCustomData[] | undefined;

  constructor(data?: IFlightStepRequest) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    if (!data) {
      this.EnableJumpCabin = true;
      this.OnlyDirectFlights = false;
      this.BaggageIncluded = false;
    }
  }

  init(_data?: any) {
    if (_data) {
      this.DepartureDate = _data["DepartureDate"];
      this.DepartureTime = _data["DepartureTime"];
      this.DepartureTimeWindow = _data["DepartureTimeWindow"];
      this.Cabin = _data["Cabin"];
      this.EnableJumpCabin = _data["EnableJumpCabin"] !== undefined ? _data["EnableJumpCabin"] : true;
      this.DepartureAirport = _data["DepartureAirport"];
      this.ArrivalAirport = _data["ArrivalAirport"];
      if (Array.isArray(_data["ExcludedCarriers"])) {
        this.ExcludedCarriers = [] as any;
        for (let item of _data["ExcludedCarriers"])
          this.ExcludedCarriers!.push(item);
      }
      if (Array.isArray(_data["IncludedCarriers"])) {
        this.IncludedCarriers = [] as any;
        for (let item of _data["IncludedCarriers"])
          this.IncludedCarriers!.push(item);
      }
      this.OnlyDirectFlights = _data["OnlyDirectFlights"] !== undefined ? _data["OnlyDirectFlights"] : false;
      this.BaggageIncluded = _data["BaggageIncluded"] !== undefined ? _data["BaggageIncluded"] : false;
      if (Array.isArray(_data["ConnectorCustomData"])) {
        this.ConnectorCustomData = [] as any;
        for (let item of _data["ConnectorCustomData"])
          this.ConnectorCustomData!.push(FlightStepRequestCustomData.fromJS(item));
      }
    }
  }

  static fromJS(data: any): FlightStepRequest {
    data = typeof data === 'object' ? data : {};
    let result = new FlightStepRequest();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["DepartureDate"] = this.DepartureDate;
    data["DepartureTime"] = this.DepartureTime;
    data["DepartureTimeWindow"] = this.DepartureTimeWindow;
    data["Cabin"] = this.Cabin;
    data["EnableJumpCabin"] = this.EnableJumpCabin;
    data["DepartureAirport"] = this.DepartureAirport;
    data["ArrivalAirport"] = this.ArrivalAirport;
    if (Array.isArray(this.ExcludedCarriers)) {
      data["ExcludedCarriers"] = [];
      for (let item of this.ExcludedCarriers)
        data["ExcludedCarriers"].push(item);
    }
    if (Array.isArray(this.IncludedCarriers)) {
      data["IncludedCarriers"] = [];
      for (let item of this.IncludedCarriers)
        data["IncludedCarriers"].push(item);
    }
    data["OnlyDirectFlights"] = this.OnlyDirectFlights;
    data["BaggageIncluded"] = this.BaggageIncluded;
    if (Array.isArray(this.ConnectorCustomData)) {
      data["ConnectorCustomData"] = [];
      for (let item of this.ConnectorCustomData)
        data["ConnectorCustomData"].push(item.toJSON());
    }
    return data;
  }
}

export interface IFlightStepRequest {
  /** Departure DateTime */
  DepartureDate: string;
  /** Departure Time
   Format d.hh:mm:ss */
  DepartureTime?: string | undefined;
  /** Departure Time Window - it's used only if DepartureTime is set */
  DepartureTimeWindow?: number | undefined;
  /** Flight Class */
  Cabin?: EFlightCabin | undefined;
  /** If the Cabin is Specified, it will handle the JumpCabin, only if the Connectors support the functionality

   true - the Cabin in the result can be different form the Cabin requested

   false - the Cabin in the result need to be the same Cabin requested

   AMADEUS:
   true - request with RC (Recommended Cabin) - At least one segment must have the Requested Cabin

   false - request without RC (Recommended Cabin) - All segments must have the Requested Cabin

   SABRE:
   there is no JumpCabin logic on single step (Origin-Destination).

   true - if any of the steps has the EnableJumpCabin it will send the JumpCabinLogic to Enabled

   false - if all the steps has the EnableJumpCabin to false it will send the JumpCabinLogic to Disabled */
  EnableJumpCabin?: boolean;
  /** Departure Airport IATA Code */
  DepartureAirport: string;
  /** Arrival Airport IATA Code */
  ArrivalAirport: string;
  /** Excluded Carriers IATA list */
  ExcludedCarriers?: string[] | undefined;
  /** Included Carriers IATA list */
  IncludedCarriers?: string[] | undefined;
  /** Search only for Direct Flights or not

   SABRE:

   There is no way to set the directs only on a step

   If any of the step has OnlyDirectFlights true, It will add a MaxStopQuantity count as

   Total Steps Count - Steps with OnlyDirectFlights Count */
  OnlyDirectFlights?: boolean;
  /** Search with baggage included

   AMADEUS:

   You can search a nr of bag on the whole itinerary, and not on a single step.

   If any of the step has BaggageIncluded to true it will be sent to Amadeus to search with bag. */
  BaggageIncluded?: boolean;
  /** Connector Custom Data */
  ConnectorCustomData?: FlightStepRequestCustomData[] | undefined;
}

export abstract class FlightStepRequestCustomData implements IFlightStepRequestCustomData {

  protected _discriminator: string;

  constructor(data?: IFlightStepRequestCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "FlightStepRequestCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): FlightStepRequestCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "AMADEUS") {
      let result = new AmadeusFlightStepRequestCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "SABRE") {
      let result = new SabreFlightStepRequestCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "TRAVELFUSION") {
      let result = new TravelFusionFlightStepRequestCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'FlightStepRequestCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IFlightStepRequestCustomData {
}

export class AmadeusFlightStepRequestCustomData extends FlightStepRequestCustomData implements IAmadeusFlightStepRequestCustomData {

  constructor(data?: IAmadeusFlightStepRequestCustomData) {
    super(data);
    this._discriminator = "AMADEUS";
  }

  init(_data?: any) {
    super.init(_data);
  }

  static fromJS(data: any): AmadeusFlightStepRequestCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new AmadeusFlightStepRequestCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    super.toJSON(data);
    return data;
  }
}

export interface IAmadeusFlightStepRequestCustomData extends IFlightStepRequestCustomData {
}

export class SabreFlightStepRequestCustomData extends FlightStepRequestCustomData implements ISabreFlightStepRequestCustomData {
  /** Min Connection Time */
  ConnectionTimeMin?: number | undefined;
  /** Max Connection Time */
  ConnectionTimeMax?: number | undefined;
  /** Sister Departure Airports IATA List */
  SisterOriginLocation?: string[] | undefined;
  /** Sister Arrival Airports IATA List */
  SisterDestinationLocation?: string[] | undefined;

  constructor(data?: ISabreFlightStepRequestCustomData) {
    super(data);
    this._discriminator = "SABRE";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ConnectionTimeMin = _data["ConnectionTimeMin"];
      this.ConnectionTimeMax = _data["ConnectionTimeMax"];
      if (Array.isArray(_data["SisterOriginLocation"])) {
        this.SisterOriginLocation = [] as any;
        for (let item of _data["SisterOriginLocation"])
          this.SisterOriginLocation!.push(item);
      }
      if (Array.isArray(_data["SisterDestinationLocation"])) {
        this.SisterDestinationLocation = [] as any;
        for (let item of _data["SisterDestinationLocation"])
          this.SisterDestinationLocation!.push(item);
      }
    }
  }

  static fromJS(data: any): SabreFlightStepRequestCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreFlightStepRequestCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectionTimeMin"] = this.ConnectionTimeMin;
    data["ConnectionTimeMax"] = this.ConnectionTimeMax;
    if (Array.isArray(this.SisterOriginLocation)) {
      data["SisterOriginLocation"] = [];
      for (let item of this.SisterOriginLocation)
        data["SisterOriginLocation"].push(item);
    }
    if (Array.isArray(this.SisterDestinationLocation)) {
      data["SisterDestinationLocation"] = [];
      for (let item of this.SisterDestinationLocation)
        data["SisterDestinationLocation"].push(item);
    }
    super.toJSON(data);
    return data;
  }
}

export interface ISabreFlightStepRequestCustomData extends IFlightStepRequestCustomData {
  /** Min Connection Time */
  ConnectionTimeMin?: number | undefined;
  /** Max Connection Time */
  ConnectionTimeMax?: number | undefined;
  /** Sister Departure Airports IATA List */
  SisterOriginLocation?: string[] | undefined;
  /** Sister Arrival Airports IATA List */
  SisterDestinationLocation?: string[] | undefined;
}

export class TravelFusionFlightStepRequestCustomData extends FlightStepRequestCustomData implements ITravelFusionFlightStepRequestCustomData {
  /** The maximum number of changes acceptable in a single leg (i.e. this limit will be applied to the outward leg and return leg separately).
   This value will be submitted to the supplier if they offer this functionality.
   Otherwise an appropriate request will be made to the supplier.
   Any results returned by the supplier that include more changes than the specified number will normally be discarded by Travelfusion.
   However in some circumstances results may still be returned that contain more changes than requested.
   Please contact Travelfusion for more information. */
  MaxChange?: number;
  /** This will be handled similarly to MaxChanges. See the 'Travel Terminology guide for definitions of 'changes' and 'hops'.
   http://xmldocs.travelfusion.com/home/guidelines/rules-guidelines-and-travel-terminology */
  MaxHop?: number;
  TimeOut?: number;
  ShowLuggageCharges?: boolean;
  ShowCheckInCharges?: boolean;
  ShowSpeedyBoardingCharges?: boolean;

  constructor(data?: ITravelFusionFlightStepRequestCustomData) {
    super(data);
    this._discriminator = "TRAVELFUSION";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.MaxChange = _data["MaxChange"];
      this.MaxHop = _data["MaxHop"];
      this.TimeOut = _data["TimeOut"];
      this.ShowLuggageCharges = _data["ShowLuggageCharges"];
      this.ShowCheckInCharges = _data["ShowCheckInCharges"];
      this.ShowSpeedyBoardingCharges = _data["ShowSpeedyBoardingCharges"];
    }
  }

  static fromJS(data: any): TravelFusionFlightStepRequestCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new TravelFusionFlightStepRequestCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["MaxChange"] = this.MaxChange;
    data["MaxHop"] = this.MaxHop;
    data["TimeOut"] = this.TimeOut;
    data["ShowLuggageCharges"] = this.ShowLuggageCharges;
    data["ShowCheckInCharges"] = this.ShowCheckInCharges;
    data["ShowSpeedyBoardingCharges"] = this.ShowSpeedyBoardingCharges;
    super.toJSON(data);
    return data;
  }
}

export interface ITravelFusionFlightStepRequestCustomData extends IFlightStepRequestCustomData {
  /** The maximum number of changes acceptable in a single leg (i.e. this limit will be applied to the outward leg and return leg separately).
   This value will be submitted to the supplier if they offer this functionality.
   Otherwise an appropriate request will be made to the supplier.
   Any results returned by the supplier that include more changes than the specified number will normally be discarded by Travelfusion.
   However in some circumstances results may still be returned that contain more changes than requested.
   Please contact Travelfusion for more information. */
  MaxChange?: number;
  /** This will be handled similarly to MaxChanges. See the 'Travel Terminology guide for definitions of 'changes' and 'hops'.
   http://xmldocs.travelfusion.com/home/guidelines/rules-guidelines-and-travel-terminology */
  MaxHop?: number;
  TimeOut?: number;
  ShowLuggageCharges?: boolean;
  ShowCheckInCharges?: boolean;
  ShowSpeedyBoardingCharges?: boolean;
}

export abstract class CustomerCustomDataOfFlightStepRequest implements ICustomerCustomDataOfFlightStepRequest {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfFlightStepRequest) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfFlightStepRequest";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfFlightStepRequest {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfFlightStepRequest' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfFlightStepRequest {
}

export abstract class FlightAvailabilityInputCustomData implements IFlightAvailabilityInputCustomData {
  /** Account Code List */
  AccountCodes?: string[] | undefined;

  protected _discriminator: string;

  constructor(data?: IFlightAvailabilityInputCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "FlightAvailabilityInputCustomData";
  }

  init(_data?: any) {
    if (_data) {
      if (Array.isArray(_data["AccountCodes"])) {
        this.AccountCodes = [] as any;
        for (let item of _data["AccountCodes"])
          this.AccountCodes!.push(item);
      }
    }
  }

  static fromJS(data: any): FlightAvailabilityInputCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "AMADEUS") {
      let result = new AmadeusFlightAvailabilityInputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "SABRE") {
      let result = new SabreFlightAvailabilityInputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "TRAVELFUSION") {
      let result = new TravelFusionFlightAvailabilityInputCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'FlightAvailabilityInputCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    if (Array.isArray(this.AccountCodes)) {
      data["AccountCodes"] = [];
      for (let item of this.AccountCodes)
        data["AccountCodes"].push(item);
    }
    return data;
  }
}

export interface IFlightAvailabilityInputCustomData {
  /** Account Code List */
  AccountCodes?: string[] | undefined;
}

export class AmadeusFlightAvailabilityInputCustomData extends FlightAvailabilityInputCustomData implements IAmadeusFlightAvailabilityInputCustomData {
  /** Amadeus Session if you want to use a Context-full (State) call

   If not specified the FlightAvailability will use a Context-less (Stateless) */
  AmadeusSession?: AmadeusGdsSessionCustomData | undefined;
  /** Define if is an expert search or a normal search */
  IsExpertSearch?: boolean;
  EnableFareFamilies?: boolean;

  constructor(data?: IAmadeusFlightAvailabilityInputCustomData) {
    super(data);
    this._discriminator = "AMADEUS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.AmadeusSession = _data["AmadeusSession"] ? AmadeusGdsSessionCustomData.fromJS(_data["AmadeusSession"]) : <any>undefined;
      this.IsExpertSearch = _data["IsExpertSearch"];
      this.EnableFareFamilies = _data["EnableFareFamilies"];
    }
  }

  static fromJS(data: any): AmadeusFlightAvailabilityInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new AmadeusFlightAvailabilityInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["AmadeusSession"] = this.AmadeusSession ? this.AmadeusSession.toJSON() : <any>undefined;
    data["IsExpertSearch"] = this.IsExpertSearch;
    data["EnableFareFamilies"] = this.EnableFareFamilies;
    super.toJSON(data);
    return data;
  }
}

export interface IAmadeusFlightAvailabilityInputCustomData extends IFlightAvailabilityInputCustomData {
  /** Amadeus Session if you want to use a Context-full (State) call

   If not specified the FlightAvailability will use a Context-less (Stateless) */
  AmadeusSession?: AmadeusGdsSessionCustomData | undefined;
  /** Define if is an expert search or a normal search */
  IsExpertSearch?: boolean;
  EnableFareFamilies?: boolean;
}

export class SabreFlightAvailabilityInputCustomData extends FlightAvailabilityInputCustomData implements ISabreFlightAvailabilityInputCustomData {
  /** Included Alliance */
  IncludeAlliancePref?: string[] | undefined;
  /** Excluded Alliance */
  ExcludeAlliancePref?: string[] | undefined;
  /** Max Stops Quantity

   It overrides the default OnlyDirects on Steps and set exactly the Max Stops Quantity */
  MaxStopsQuantity?: number | undefined;
  /** NumTrips in TravelPreferences */
  NumTrips?: number | undefined;
  /** KeepSameCabin in TravelPreferences */
  KeepSameCabin?: boolean;
  /** VoluntaryChanges in AirTravelerAvail -&gt; TPAExtensions in order to retrieve the fares with applicable changes */
  VoluntaryChanges?: boolean;
  /** TripType in TravelPreferences */
  TripType?: ETripType | undefined;
  /** Multi Ticket type in IntelliSellTransaction */
  MultiTicketType?: EMultiTicketType | undefined;
  /** Enable a Multiple Branded Fares search
   If true -&gt; SABRE Returns multiple fares for each itinerary
   Jupiter return in FareList all Branded Fares returned by SABRE */
  MultipleBrandedFares?: boolean | undefined;

  constructor(data?: ISabreFlightAvailabilityInputCustomData) {
    super(data);
    if (!data) {
      this.NumTrips = 200;
      this.KeepSameCabin = false;
      this.VoluntaryChanges = false;
    }
    this._discriminator = "SABRE";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      if (Array.isArray(_data["IncludeAlliancePref"])) {
        this.IncludeAlliancePref = [] as any;
        for (let item of _data["IncludeAlliancePref"])
          this.IncludeAlliancePref!.push(item);
      }
      if (Array.isArray(_data["ExcludeAlliancePref"])) {
        this.ExcludeAlliancePref = [] as any;
        for (let item of _data["ExcludeAlliancePref"])
          this.ExcludeAlliancePref!.push(item);
      }
      this.MaxStopsQuantity = _data["MaxStopsQuantity"];
      this.NumTrips = _data["NumTrips"] !== undefined ? _data["NumTrips"] : 200;
      this.KeepSameCabin = _data["KeepSameCabin"] !== undefined ? _data["KeepSameCabin"] : false;
      this.VoluntaryChanges = _data["VoluntaryChanges"] !== undefined ? _data["VoluntaryChanges"] : false;
      this.TripType = _data["TripType"];
      this.MultiTicketType = _data["MultiTicketType"];
      this.MultipleBrandedFares = _data["MultipleBrandedFares"];
    }
  }

  static fromJS(data: any): SabreFlightAvailabilityInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreFlightAvailabilityInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.IncludeAlliancePref)) {
      data["IncludeAlliancePref"] = [];
      for (let item of this.IncludeAlliancePref)
        data["IncludeAlliancePref"].push(item);
    }
    if (Array.isArray(this.ExcludeAlliancePref)) {
      data["ExcludeAlliancePref"] = [];
      for (let item of this.ExcludeAlliancePref)
        data["ExcludeAlliancePref"].push(item);
    }
    data["MaxStopsQuantity"] = this.MaxStopsQuantity;
    data["NumTrips"] = this.NumTrips;
    data["KeepSameCabin"] = this.KeepSameCabin;
    data["VoluntaryChanges"] = this.VoluntaryChanges;
    data["TripType"] = this.TripType;
    data["MultiTicketType"] = this.MultiTicketType;
    data["MultipleBrandedFares"] = this.MultipleBrandedFares;
    super.toJSON(data);
    return data;
  }
}

export interface ISabreFlightAvailabilityInputCustomData extends IFlightAvailabilityInputCustomData {
  /** Included Alliance */
  IncludeAlliancePref?: string[] | undefined;
  /** Excluded Alliance */
  ExcludeAlliancePref?: string[] | undefined;
  /** Max Stops Quantity

   It overrides the default OnlyDirects on Steps and set exactly the Max Stops Quantity */
  MaxStopsQuantity?: number | undefined;
  /** NumTrips in TravelPreferences */
  NumTrips?: number | undefined;
  /** KeepSameCabin in TravelPreferences */
  KeepSameCabin?: boolean;
  /** VoluntaryChanges in AirTravelerAvail -&gt; TPAExtensions in order to retrieve the fares with applicable changes */
  VoluntaryChanges?: boolean;
  /** TripType in TravelPreferences */
  TripType?: ETripType | undefined;
  /** Multi Ticket type in IntelliSellTransaction */
  MultiTicketType?: EMultiTicketType | undefined;
  /** Enable a Multiple Branded Fares search
   If true -&gt; SABRE Returns multiple fares for each itinerary
   Jupiter return in FareList all Branded Fares returned by SABRE */
  MultipleBrandedFares?: boolean | undefined;
}

export enum ETripType {
  ONE_WAY = "ONE_WAY",
  RETURN = "RETURN",
  CIRCLE = "CIRCLE",
  OPEN_JAW = "OPEN_JAW",
  OTHER = "OTHER",
}

/** DisplayPolicy (optional) Display Option Policy, takes values: - SOW - Show OneWays separately - first show standard RT output, then show OW for 1st and 2nd legs separately.        Customer receives Round Trip and OneWays (outbound and inbound) solutions for the same request.        OneWay solutions will be presented as 2 separate sections (OneWay Outbound and OneWay Inbound)  and not as combination of two OneWay solutions combined into one round trip itinerary.        Customer will be able to build the RT solution by choosing the most applicable, comfortable and cheapest OneWay solutions. - SCHS - Group OneWays, match to RoundTrip and show cheaper solution.        Customer receives cheapest solutions between Round Trip and 2 OneWay solution for the same request.        OW solutions will be presented as combination of separate one way tickets into one round trip Itinerary. */
export enum EMultiTicketType {
  SOW = "SOW",
  GOW2RT = "GOW2RT",
  SCHS = "SCHS",
}

export class TravelFusionFlightAvailabilityInputCustomData extends FlightAvailabilityInputCustomData implements ITravelFusionFlightAvailabilityInputCustomData {
  /** The IP address captured from the end user's terminal - i.e. the client that is using the website where the search/ booking is being made.
   It takes the format of an IP address - e.g  12.123.45.67.
   It is a mandatory requirement to submit this parameter in StartRouting and ProcessTerms XML requests to Travelfusion during the search and book process.  */
  EndUserIPAddress?: string | undefined;
  /** This is based on the User-Agent Http header, which identifies the unique browser and/or devise through which the booking was made.
   An example value could be  - 'Mozilla/5.0 (X11; Linux x86_64; rv:12.0) Gecko/20100101 Firefox/21.0'

   It is a mandatory requirement to submit this parameter in StartRouting and ProcessTerms XML requests to Travelfusion during the search and book process. */
  EndUserBrowserAgent?: string | undefined;
  /** A point can include a market/country or a region where you either have a physical/virtual presence such as a local URL and/or local language.
   The value of the parameter must correspond to the following format, but must map to a specific market/point of sale at your end.

   Parameter   'PointOfSale'
   Value  'UK' - 2 letter ISO code.

   For e.g if you have a portal in Argentina, you would map all Argentinian traffic so that we would receive a value of 'AR'
   It is a mandatory requirement to this parameter in each StartRouting request (and if you do not have this data at this stage,
   to submit it at the ProcessTerms request) to Travelfusion during the search and book process. */
  PointOfSale?: string | undefined;
  /** This must identify the origin of the original user search.
   Typically it will be the domain of the website they were using and
   the market/ country/ Point of sale - for example "France-cheaptravelling.com".
   Please discuss with Travelfusion if in doubt about how to complete this field.

   It is a mandatory requirement to submit this parameter in
   StartRouting and ProcessTerms XML requests to Travelfusion during the search and book process. */
  RequestOrigin?: string | undefined;

  constructor(data?: ITravelFusionFlightAvailabilityInputCustomData) {
    super(data);
    this._discriminator = "TRAVELFUSION";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.EndUserIPAddress = _data["EndUserIPAddress"];
      this.EndUserBrowserAgent = _data["EndUserBrowserAgent"];
      this.PointOfSale = _data["PointOfSale"];
      this.RequestOrigin = _data["RequestOrigin"];
    }
  }

  static fromJS(data: any): TravelFusionFlightAvailabilityInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new TravelFusionFlightAvailabilityInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["EndUserIPAddress"] = this.EndUserIPAddress;
    data["EndUserBrowserAgent"] = this.EndUserBrowserAgent;
    data["PointOfSale"] = this.PointOfSale;
    data["RequestOrigin"] = this.RequestOrigin;
    super.toJSON(data);
    return data;
  }
}

export interface ITravelFusionFlightAvailabilityInputCustomData extends IFlightAvailabilityInputCustomData {
  /** The IP address captured from the end user's terminal - i.e. the client that is using the website where the search/ booking is being made.
   It takes the format of an IP address - e.g  12.123.45.67.
   It is a mandatory requirement to submit this parameter in StartRouting and ProcessTerms XML requests to Travelfusion during the search and book process.  */
  EndUserIPAddress?: string | undefined;
  /** This is based on the User-Agent Http header, which identifies the unique browser and/or devise through which the booking was made.
   An example value could be  - 'Mozilla/5.0 (X11; Linux x86_64; rv:12.0) Gecko/20100101 Firefox/21.0'

   It is a mandatory requirement to submit this parameter in StartRouting and ProcessTerms XML requests to Travelfusion during the search and book process. */
  EndUserBrowserAgent?: string | undefined;
  /** A point can include a market/country or a region where you either have a physical/virtual presence such as a local URL and/or local language.
   The value of the parameter must correspond to the following format, but must map to a specific market/point of sale at your end.

   Parameter   'PointOfSale'
   Value  'UK' - 2 letter ISO code.

   For e.g if you have a portal in Argentina, you would map all Argentinian traffic so that we would receive a value of 'AR'
   It is a mandatory requirement to this parameter in each StartRouting request (and if you do not have this data at this stage,
   to submit it at the ProcessTerms request) to Travelfusion during the search and book process. */
  PointOfSale?: string | undefined;
  /** This must identify the origin of the original user search.
   Typically it will be the domain of the website they were using and
   the market/ country/ Point of sale - for example "France-cheaptravelling.com".
   Please discuss with Travelfusion if in doubt about how to complete this field.

   It is a mandatory requirement to submit this parameter in
   StartRouting and ProcessTerms XML requests to Travelfusion during the search and book process. */
  RequestOrigin?: string | undefined;
}

export abstract class CustomerCustomDataOfJupiterFlightAvailabilityInput implements ICustomerCustomDataOfJupiterFlightAvailabilityInput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterFlightAvailabilityInput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterFlightAvailabilityInput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterFlightAvailabilityInput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterFlightAvailabilityInput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterFlightAvailabilityInput {
}

export class JupiterFlightDetailRS extends BaseRS implements IJupiterFlightDetailRS {
  /** JupiterFlightDetailOutput Response */
  Response?: JupiterFlightDetailOutput | undefined;

  constructor(data?: IJupiterFlightDetailRS) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Response = _data["Response"] ? JupiterFlightDetailOutput.fromJS(_data["Response"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterFlightDetailRS {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterFlightDetailRS();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Response"] = this.Response ? this.Response.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterFlightDetailRS extends IBaseRS {
  /** JupiterFlightDetailOutput Response */
  Response?: JupiterFlightDetailOutput | undefined;
}

export class JupiterFlightDetailOutput extends BaseOutput implements IJupiterFlightDetailOutput {
  /** Pnr Details */
  Pnr?: FlightDetailPnr | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: FlightDetailOutputCustomData | undefined;

  constructor(data?: IJupiterFlightDetailOutput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Pnr = _data["Pnr"] ? FlightDetailPnr.fromJS(_data["Pnr"]) : <any>undefined;
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? FlightDetailOutputCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterFlightDetailOutput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterFlightDetailOutput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Pnr"] = this.Pnr ? this.Pnr.toJSON() : <any>undefined;
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterFlightDetailOutput extends IBaseOutput {
  /** Pnr Details */
  Pnr?: FlightDetailPnr | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: FlightDetailOutputCustomData | undefined;
}

export abstract class BaseOperationPnr implements IBaseOperationPnr {
  /** Connector Code */
  ConnectorCode!: EH2HConnectorCode;
  /** Close Pnr is used in GDS requests
   if true do EndTransaction to save
   if false it will not skip the EndTransaction */
  ClosePnr?: boolean | undefined;
  /** PNR Number */
  PnrNumber?: string | undefined;
  /** PCC of the PNR */
  PseudoCityCode?: string | undefined;
  /** PNR Creation Date */
  PnrDate?: string | undefined;
  /** PNR Cancel Date */
  CancelDate?: string | undefined;
  /** PNR Last Ticket Date */
  LastTicketDate?: string | undefined;
  /** PNR PaxList */
  FlightSegments?: PnrFlightSegment[] | undefined;
  /** PNR Current Fare */
  Fare?: PnrFlightFare | undefined;
  /** PNR Alternative Fare List

   Used to provide family fares and alternative fares */
  AlternativeFares?: PnrFlightFare[] | undefined;
  /** Pnr current ancillaries list */
  Ancillaries?: PnrBookedFlightAncillary[] | undefined;
  /** Pnr additional ancillaries list

   Used to provide additional ancillaries */
  AdditionalAncillaries?: PnrFlightAdditionalAncillary[] | undefined;
  /** PNR PaxList */
  Paxes?: PnrPaxDetails[] | undefined;
  /** Credit Card infos to process the Booking */
  CreditCardPayment?: CreditCardInfo | undefined;
  /** Travel Company */
  TravelCompany?: PnrTravelCompany | undefined;
  /** Pnr Remarks */
  Remarks?: PnrRemarks[] | undefined;
  /** Pnr OSI SSRS */
  OsiSsr?: PnrOsiSsr[] | undefined;

  constructor(data?: IBaseOperationPnr) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.ConnectorCode = _data["ConnectorCode"];
      this.ClosePnr = _data["ClosePnr"];
      this.PnrNumber = _data["PnrNumber"];
      this.PseudoCityCode = _data["PseudoCityCode"];
      this.PnrDate = _data["PnrDate"];
      this.CancelDate = _data["CancelDate"];
      this.LastTicketDate = _data["LastTicketDate"];
      if (Array.isArray(_data["FlightSegments"])) {
        this.FlightSegments = [] as any;
        for (let item of _data["FlightSegments"])
          this.FlightSegments!.push(PnrFlightSegment.fromJS(item));
      }
      this.Fare = _data["Fare"] ? PnrFlightFare.fromJS(_data["Fare"]) : <any>undefined;
      if (Array.isArray(_data["AlternativeFares"])) {
        this.AlternativeFares = [] as any;
        for (let item of _data["AlternativeFares"])
          this.AlternativeFares!.push(PnrFlightFare.fromJS(item));
      }
      if (Array.isArray(_data["Ancillaries"])) {
        this.Ancillaries = [] as any;
        for (let item of _data["Ancillaries"])
          this.Ancillaries!.push(PnrBookedFlightAncillary.fromJS(item));
      }
      if (Array.isArray(_data["AdditionalAncillaries"])) {
        this.AdditionalAncillaries = [] as any;
        for (let item of _data["AdditionalAncillaries"])
          this.AdditionalAncillaries!.push(PnrFlightAdditionalAncillary.fromJS(item));
      }
      if (Array.isArray(_data["Paxes"])) {
        this.Paxes = [] as any;
        for (let item of _data["Paxes"])
          this.Paxes!.push(PnrPaxDetails.fromJS(item));
      }
      this.CreditCardPayment = _data["CreditCardPayment"] ? CreditCardInfo.fromJS(_data["CreditCardPayment"]) : <any>undefined;
      this.TravelCompany = _data["TravelCompany"] ? PnrTravelCompany.fromJS(_data["TravelCompany"]) : <any>undefined;
      if (Array.isArray(_data["Remarks"])) {
        this.Remarks = [] as any;
        for (let item of _data["Remarks"])
          this.Remarks!.push(PnrRemarks.fromJS(item));
      }
      if (Array.isArray(_data["OsiSsr"])) {
        this.OsiSsr = [] as any;
        for (let item of _data["OsiSsr"])
          this.OsiSsr!.push(PnrOsiSsr.fromJS(item));
      }
    }
  }

  static fromJS(data: any): BaseOperationPnr {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'BaseOperationPnr' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCode"] = this.ConnectorCode;
    data["ClosePnr"] = this.ClosePnr;
    data["PnrNumber"] = this.PnrNumber;
    data["PseudoCityCode"] = this.PseudoCityCode;
    data["PnrDate"] = this.PnrDate;
    data["CancelDate"] = this.CancelDate;
    data["LastTicketDate"] = this.LastTicketDate;
    if (Array.isArray(this.FlightSegments)) {
      data["FlightSegments"] = [];
      for (let item of this.FlightSegments)
        data["FlightSegments"].push(item.toJSON());
    }
    data["Fare"] = this.Fare ? this.Fare.toJSON() : <any>undefined;
    if (Array.isArray(this.AlternativeFares)) {
      data["AlternativeFares"] = [];
      for (let item of this.AlternativeFares)
        data["AlternativeFares"].push(item.toJSON());
    }
    if (Array.isArray(this.Ancillaries)) {
      data["Ancillaries"] = [];
      for (let item of this.Ancillaries)
        data["Ancillaries"].push(item.toJSON());
    }
    if (Array.isArray(this.AdditionalAncillaries)) {
      data["AdditionalAncillaries"] = [];
      for (let item of this.AdditionalAncillaries)
        data["AdditionalAncillaries"].push(item.toJSON());
    }
    if (Array.isArray(this.Paxes)) {
      data["Paxes"] = [];
      for (let item of this.Paxes)
        data["Paxes"].push(item.toJSON());
    }
    data["CreditCardPayment"] = this.CreditCardPayment ? this.CreditCardPayment.toJSON() : <any>undefined;
    data["TravelCompany"] = this.TravelCompany ? this.TravelCompany.toJSON() : <any>undefined;
    if (Array.isArray(this.Remarks)) {
      data["Remarks"] = [];
      for (let item of this.Remarks)
        data["Remarks"].push(item.toJSON());
    }
    if (Array.isArray(this.OsiSsr)) {
      data["OsiSsr"] = [];
      for (let item of this.OsiSsr)
        data["OsiSsr"].push(item.toJSON());
    }
    return data;
  }
}

export interface IBaseOperationPnr {
  /** Connector Code */
  ConnectorCode: EH2HConnectorCode;
  /** Close Pnr is used in GDS requests
   if true do EndTransaction to save
   if false it will not skip the EndTransaction */
  ClosePnr?: boolean | undefined;
  /** PNR Number */
  PnrNumber?: string | undefined;
  /** PCC of the PNR */
  PseudoCityCode?: string | undefined;
  /** PNR Creation Date */
  PnrDate?: string | undefined;
  /** PNR Cancel Date */
  CancelDate?: string | undefined;
  /** PNR Last Ticket Date */
  LastTicketDate?: string | undefined;
  /** PNR PaxList */
  FlightSegments?: PnrFlightSegment[] | undefined;
  /** PNR Current Fare */
  Fare?: PnrFlightFare | undefined;
  /** PNR Alternative Fare List

   Used to provide family fares and alternative fares */
  AlternativeFares?: PnrFlightFare[] | undefined;
  /** Pnr current ancillaries list */
  Ancillaries?: PnrBookedFlightAncillary[] | undefined;
  /** Pnr additional ancillaries list

   Used to provide additional ancillaries */
  AdditionalAncillaries?: PnrFlightAdditionalAncillary[] | undefined;
  /** PNR PaxList */
  Paxes?: PnrPaxDetails[] | undefined;
  /** Credit Card infos to process the Booking */
  CreditCardPayment?: CreditCardInfo | undefined;
  /** Travel Company */
  TravelCompany?: PnrTravelCompany | undefined;
  /** Pnr Remarks */
  Remarks?: PnrRemarks[] | undefined;
  /** Pnr OSI SSRS */
  OsiSsr?: PnrOsiSsr[] | undefined;
}

export class FlightDetailPnr extends BaseOperationPnr implements IFlightDetailPnr {
  /** Connector Custom Data */
  ConnectorCustomData?: FlightDetailPnrCustomData | undefined;

  constructor(data?: IFlightDetailPnr) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? FlightDetailPnrCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): FlightDetailPnr {
    data = typeof data === 'object' ? data : {};
    let result = new FlightDetailPnr();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IFlightDetailPnr extends IBaseOperationPnr {
  /** Connector Custom Data */
  ConnectorCustomData?: FlightDetailPnrCustomData | undefined;
}

export abstract class FlightDetailPnrCustomData implements IFlightDetailPnrCustomData {

  protected _discriminator: string;

  constructor(data?: IFlightDetailPnrCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "FlightDetailPnrCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): FlightDetailPnrCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "AMADEUS") {
      let result = new AmadeusFlightDetailPnrCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "SABRE") {
      let result = new SabreFlightDetailPnrCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "TRAVELFUSION") {
      let result = new TravelFusionFlightDetailPnrCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'FlightDetailPnrCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IFlightDetailPnrCustomData {
}

export class AmadeusFlightDetailPnrCustomData extends FlightDetailPnrCustomData implements IAmadeusFlightDetailPnrCustomData {
  /** Sabre Generic PNR Custom Data */
  PnrCustomData?: AmadeusFlightPnrCustomData | undefined;

  constructor(data?: IAmadeusFlightDetailPnrCustomData) {
    super(data);
    this._discriminator = "AMADEUS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.PnrCustomData = _data["PnrCustomData"] ? AmadeusFlightPnrCustomData.fromJS(_data["PnrCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): AmadeusFlightDetailPnrCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new AmadeusFlightDetailPnrCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["PnrCustomData"] = this.PnrCustomData ? this.PnrCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IAmadeusFlightDetailPnrCustomData extends IFlightDetailPnrCustomData {
  /** Sabre Generic PNR Custom Data */
  PnrCustomData?: AmadeusFlightPnrCustomData | undefined;
}

export class AmadeusFlightPnrCustomData implements IAmadeusFlightPnrCustomData {
  /** ReceivedFrom firm passed to the EndTransaction */
  ReceivedFrom?: string | undefined;
  /** Autodelete TK Timelimit
   If not enabled automatic TK on OID and no "TK" segment passed it return Error
   ERROR AT END OF TRANSACTION TIME
   ERROR AT EOT TIME
   NEED TICKETING ARRANGEMENT
   In this case the pnrCustomData?.TkXlAutoDeleteDate is mandatory */
  TkXlAutoDeleteDate?: string | undefined;
  /** Return the Amadeus PNR_Retrieve if any PNR_Retrieve is present in the call flow */
  AmadeusPnrRetrieveXmlRs?: string | undefined;

  constructor(data?: IAmadeusFlightPnrCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.ReceivedFrom = _data["ReceivedFrom"];
      this.TkXlAutoDeleteDate = _data["TkXlAutoDeleteDate"];
      this.AmadeusPnrRetrieveXmlRs = _data["AmadeusPnrRetrieveXmlRs"];
    }
  }

  static fromJS(data: any): AmadeusFlightPnrCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new AmadeusFlightPnrCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ReceivedFrom"] = this.ReceivedFrom;
    data["TkXlAutoDeleteDate"] = this.TkXlAutoDeleteDate;
    data["AmadeusPnrRetrieveXmlRs"] = this.AmadeusPnrRetrieveXmlRs;
    return data;
  }
}

export interface IAmadeusFlightPnrCustomData {
  /** ReceivedFrom firm passed to the EndTransaction */
  ReceivedFrom?: string | undefined;
  /** Autodelete TK Timelimit
   If not enabled automatic TK on OID and no "TK" segment passed it return Error
   ERROR AT END OF TRANSACTION TIME
   ERROR AT EOT TIME
   NEED TICKETING ARRANGEMENT
   In this case the pnrCustomData?.TkXlAutoDeleteDate is mandatory */
  TkXlAutoDeleteDate?: string | undefined;
  /** Return the Amadeus PNR_Retrieve if any PNR_Retrieve is present in the call flow */
  AmadeusPnrRetrieveXmlRs?: string | undefined;
}

export class SabreFlightDetailPnrCustomData extends FlightDetailPnrCustomData implements ISabreFlightDetailPnrCustomData {
  /** Sabre Generic PNR Custom Data */
  PnrCustomData?: SabreFlightPnrCustomData | undefined;

  constructor(data?: ISabreFlightDetailPnrCustomData) {
    super(data);
    this._discriminator = "SABRE";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.PnrCustomData = _data["PnrCustomData"] ? SabreFlightPnrCustomData.fromJS(_data["PnrCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): SabreFlightDetailPnrCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreFlightDetailPnrCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["PnrCustomData"] = this.PnrCustomData ? this.PnrCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface ISabreFlightDetailPnrCustomData extends IFlightDetailPnrCustomData {
  /** Sabre Generic PNR Custom Data */
  PnrCustomData?: SabreFlightPnrCustomData | undefined;
}

export class SabreFlightPnrCustomData implements ISabreFlightPnrCustomData {
  /** Pnr CustomerIdentifier -&gt; DK Sabre */
  CustomerIdentifierDk?: string | undefined;
  /** ReceivedFrom firm passed to the EndTransaction */
  ReceivedFrom?: string | undefined;
  /** Return the Sabre GetReservationXml if any GetReservationRq is present in the call flow */
  SabreGetReservationXmlRs?: string | undefined;

  constructor(data?: ISabreFlightPnrCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.CustomerIdentifierDk = _data["CustomerIdentifierDk"];
      this.ReceivedFrom = _data["ReceivedFrom"];
      this.SabreGetReservationXmlRs = _data["SabreGetReservationXmlRs"];
    }
  }

  static fromJS(data: any): SabreFlightPnrCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreFlightPnrCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomerIdentifierDk"] = this.CustomerIdentifierDk;
    data["ReceivedFrom"] = this.ReceivedFrom;
    data["SabreGetReservationXmlRs"] = this.SabreGetReservationXmlRs;
    return data;
  }
}

export interface ISabreFlightPnrCustomData {
  /** Pnr CustomerIdentifier -&gt; DK Sabre */
  CustomerIdentifierDk?: string | undefined;
  /** ReceivedFrom firm passed to the EndTransaction */
  ReceivedFrom?: string | undefined;
  /** Return the Sabre GetReservationXml if any GetReservationRq is present in the call flow */
  SabreGetReservationXmlRs?: string | undefined;
}

export class TravelFusionFlightDetailPnrCustomData extends FlightDetailPnrCustomData implements ITravelFusionFlightDetailPnrCustomData {
  PnrCustomData?: TravelFusionFlightPnrCustomData | undefined;

  constructor(data?: ITravelFusionFlightDetailPnrCustomData) {
    super(data);
    this._discriminator = "TRAVELFUSION";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.PnrCustomData = _data["PnrCustomData"] ? TravelFusionFlightPnrCustomData.fromJS(_data["PnrCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): TravelFusionFlightDetailPnrCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new TravelFusionFlightDetailPnrCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["PnrCustomData"] = this.PnrCustomData ? this.PnrCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface ITravelFusionFlightDetailPnrCustomData extends IFlightDetailPnrCustomData {
  PnrCustomData?: TravelFusionFlightPnrCustomData | undefined;
}

export class TravelFusionFlightPnrCustomData implements ITravelFusionFlightPnrCustomData {
  TFBookingReference?: string | undefined;
  SupplierReference?: string | undefined;
  FakeBooking?: boolean;
  LoginId?: string | undefined;
  GroupId?: string | undefined;
  RoutingId?: string | undefined;
  OutwardId?: string | undefined;
  ReturnId?: string | undefined;
  TotalAmount?: TotalAmount | undefined;
  Supplier?: string | undefined;
  VendorName?: string | undefined;
  /** Preregistered username or username to be registered with on the supplier's system
   */
  UserLogin?: string | undefined;
  /** Preregistered password or password to be registered with on the supplier's system
   */
  UserPassword?: string | undefined;
  /** The IP address captured from the end user's terminal - i.e. the client that is using the website where the search/ booking is being made.
   It takes the format of an IP address - e.g  12.123.45.67.
   It is a mandatory requirement to submit this parameter in StartRouting and ProcessTerms XML requests to Travelfusion during the search and book process.  */
  EndUserIPAddress?: string | undefined;
  /** This is based on the User-Agent Http header, which identifies the unique browser and/or devise through which the booking was made.
   An example value could be  - 'Mozilla/5.0 (X11; Linux x86_64; rv:12.0) Gecko/20100101 Firefox/21.0'

   It is a mandatory requirement to submit this parameter in StartRouting and ProcessTerms XML requests to Travelfusion during the search and book process. */
  EndUserBrowserAgent?: string | undefined;
  /** Various data related to the user must be submitted here, in the ProcessTerms request.
   The data must be comma separated and commas in the data items must be escaped with '\', as should the '\' character.
   Currently, we require the end user's email address, phone number, and the card holder's name on card. For example:

   bob@myemail.com, +4917182828283, Mr b t blob

   Travelfusion reserves the right to request more items of data to be added to this list, with 3 months notice.

   It is a mandatory requirement to submit this parameter in ProcessTerms XML request to Travelfusion during the book process.
   */
  UserData?: string | undefined;
  /** This must identify the origin of the original user search.
   Typically it will be the domain of the website they were using and
   the market/ country/ Point of sale - for example "France-cheaptravelling.com".
   Please discuss with Travelfusion if in doubt about how to complete this field.

   It is a mandatory requirement to submit this parameter in
   StartRouting and ProcessTerms XML requests to Travelfusion during the search and book process. */
  RequestOrigin?: string | undefined;
  /** A point can include a market/country or a region where you either have a physical/virtual presence such as a local URL and/or local language.
   The value of the parameter must correspond to the following format, but must map to a specific market/point of sale at your end.

   Parameter   'PointOfSale'
   Value  'UK' - 2 letter ISO code.

   For e.g if you have a portal in Argentina, you would map all Argentinian traffic so that we would receive a value of 'AR'
   It is a mandatory requirement to this parameter in each StartRouting request (and if you do not have this data at this stage,
   to submit it at the ProcessTerms request) to Travelfusion during the search and book process. */
  PointOfSale?: string | undefined;
  RequiredParameter?: RequiredParameter[] | undefined;
  SupplierHandoffData?: SupplierHandoffData | undefined;
  Feature?: Feature[] | undefined;
  SupplierInfo?: SupplierInfo[] | undefined;
  SupportedCard?: SupportedCard[] | undefined;
  GeneralInfo?: GeneralInfo[] | undefined;

  constructor(data?: ITravelFusionFlightPnrCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.TFBookingReference = _data["TFBookingReference"];
      this.SupplierReference = _data["SupplierReference"];
      this.FakeBooking = _data["FakeBooking"];
      this.LoginId = _data["LoginId"];
      this.GroupId = _data["GroupId"];
      this.RoutingId = _data["RoutingId"];
      this.OutwardId = _data["OutwardId"];
      this.ReturnId = _data["ReturnId"];
      this.TotalAmount = _data["TotalAmount"] ? TotalAmount.fromJS(_data["TotalAmount"]) : <any>undefined;
      this.Supplier = _data["Supplier"];
      this.VendorName = _data["VendorName"];
      this.UserLogin = _data["UserLogin"];
      this.UserPassword = _data["UserPassword"];
      this.EndUserIPAddress = _data["EndUserIPAddress"];
      this.EndUserBrowserAgent = _data["EndUserBrowserAgent"];
      this.UserData = _data["UserData"];
      this.RequestOrigin = _data["RequestOrigin"];
      this.PointOfSale = _data["PointOfSale"];
      if (Array.isArray(_data["RequiredParameter"])) {
        this.RequiredParameter = [] as any;
        for (let item of _data["RequiredParameter"])
          this.RequiredParameter!.push(RequiredParameter.fromJS(item));
      }
      this.SupplierHandoffData = _data["SupplierHandoffData"] ? SupplierHandoffData.fromJS(_data["SupplierHandoffData"]) : <any>undefined;
      if (Array.isArray(_data["Feature"])) {
        this.Feature = [] as any;
        for (let item of _data["Feature"])
          this.Feature!.push(Feature.fromJS(item));
      }
      if (Array.isArray(_data["SupplierInfo"])) {
        this.SupplierInfo = [] as any;
        for (let item of _data["SupplierInfo"])
          this.SupplierInfo!.push(SupplierInfo.fromJS(item));
      }
      if (Array.isArray(_data["SupportedCard"])) {
        this.SupportedCard = [] as any;
        for (let item of _data["SupportedCard"])
          this.SupportedCard!.push(SupportedCard.fromJS(item));
      }
      if (Array.isArray(_data["GeneralInfo"])) {
        this.GeneralInfo = [] as any;
        for (let item of _data["GeneralInfo"])
          this.GeneralInfo!.push(GeneralInfo.fromJS(item));
      }
    }
  }

  static fromJS(data: any): TravelFusionFlightPnrCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new TravelFusionFlightPnrCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["TFBookingReference"] = this.TFBookingReference;
    data["SupplierReference"] = this.SupplierReference;
    data["FakeBooking"] = this.FakeBooking;
    data["LoginId"] = this.LoginId;
    data["GroupId"] = this.GroupId;
    data["RoutingId"] = this.RoutingId;
    data["OutwardId"] = this.OutwardId;
    data["ReturnId"] = this.ReturnId;
    data["TotalAmount"] = this.TotalAmount ? this.TotalAmount.toJSON() : <any>undefined;
    data["Supplier"] = this.Supplier;
    data["VendorName"] = this.VendorName;
    data["UserLogin"] = this.UserLogin;
    data["UserPassword"] = this.UserPassword;
    data["EndUserIPAddress"] = this.EndUserIPAddress;
    data["EndUserBrowserAgent"] = this.EndUserBrowserAgent;
    data["UserData"] = this.UserData;
    data["RequestOrigin"] = this.RequestOrigin;
    data["PointOfSale"] = this.PointOfSale;
    if (Array.isArray(this.RequiredParameter)) {
      data["RequiredParameter"] = [];
      for (let item of this.RequiredParameter)
        data["RequiredParameter"].push(item.toJSON());
    }
    data["SupplierHandoffData"] = this.SupplierHandoffData ? this.SupplierHandoffData.toJSON() : <any>undefined;
    if (Array.isArray(this.Feature)) {
      data["Feature"] = [];
      for (let item of this.Feature)
        data["Feature"].push(item.toJSON());
    }
    if (Array.isArray(this.SupplierInfo)) {
      data["SupplierInfo"] = [];
      for (let item of this.SupplierInfo)
        data["SupplierInfo"].push(item.toJSON());
    }
    if (Array.isArray(this.SupportedCard)) {
      data["SupportedCard"] = [];
      for (let item of this.SupportedCard)
        data["SupportedCard"].push(item.toJSON());
    }
    if (Array.isArray(this.GeneralInfo)) {
      data["GeneralInfo"] = [];
      for (let item of this.GeneralInfo)
        data["GeneralInfo"].push(item.toJSON());
    }
    return data;
  }
}

export interface ITravelFusionFlightPnrCustomData {
  TFBookingReference?: string | undefined;
  SupplierReference?: string | undefined;
  FakeBooking?: boolean;
  LoginId?: string | undefined;
  GroupId?: string | undefined;
  RoutingId?: string | undefined;
  OutwardId?: string | undefined;
  ReturnId?: string | undefined;
  TotalAmount?: TotalAmount | undefined;
  Supplier?: string | undefined;
  VendorName?: string | undefined;
  /** Preregistered username or username to be registered with on the supplier's system
   */
  UserLogin?: string | undefined;
  /** Preregistered password or password to be registered with on the supplier's system
   */
  UserPassword?: string | undefined;
  /** The IP address captured from the end user's terminal - i.e. the client that is using the website where the search/ booking is being made.
   It takes the format of an IP address - e.g  12.123.45.67.
   It is a mandatory requirement to submit this parameter in StartRouting and ProcessTerms XML requests to Travelfusion during the search and book process.  */
  EndUserIPAddress?: string | undefined;
  /** This is based on the User-Agent Http header, which identifies the unique browser and/or devise through which the booking was made.
   An example value could be  - 'Mozilla/5.0 (X11; Linux x86_64; rv:12.0) Gecko/20100101 Firefox/21.0'

   It is a mandatory requirement to submit this parameter in StartRouting and ProcessTerms XML requests to Travelfusion during the search and book process. */
  EndUserBrowserAgent?: string | undefined;
  /** Various data related to the user must be submitted here, in the ProcessTerms request.
   The data must be comma separated and commas in the data items must be escaped with '\', as should the '\' character.
   Currently, we require the end user's email address, phone number, and the card holder's name on card. For example:

   bob@myemail.com, +4917182828283, Mr b t blob

   Travelfusion reserves the right to request more items of data to be added to this list, with 3 months notice.

   It is a mandatory requirement to submit this parameter in ProcessTerms XML request to Travelfusion during the book process.
   */
  UserData?: string | undefined;
  /** This must identify the origin of the original user search.
   Typically it will be the domain of the website they were using and
   the market/ country/ Point of sale - for example "France-cheaptravelling.com".
   Please discuss with Travelfusion if in doubt about how to complete this field.

   It is a mandatory requirement to submit this parameter in
   StartRouting and ProcessTerms XML requests to Travelfusion during the search and book process. */
  RequestOrigin?: string | undefined;
  /** A point can include a market/country or a region where you either have a physical/virtual presence such as a local URL and/or local language.
   The value of the parameter must correspond to the following format, but must map to a specific market/point of sale at your end.

   Parameter   'PointOfSale'
   Value  'UK' - 2 letter ISO code.

   For e.g if you have a portal in Argentina, you would map all Argentinian traffic so that we would receive a value of 'AR'
   It is a mandatory requirement to this parameter in each StartRouting request (and if you do not have this data at this stage,
   to submit it at the ProcessTerms request) to Travelfusion during the search and book process. */
  PointOfSale?: string | undefined;
  RequiredParameter?: RequiredParameter[] | undefined;
  SupplierHandoffData?: SupplierHandoffData | undefined;
  Feature?: Feature[] | undefined;
  SupplierInfo?: SupplierInfo[] | undefined;
  SupportedCard?: SupportedCard[] | undefined;
  GeneralInfo?: GeneralInfo[] | undefined;
}

export class TotalAmount implements ITotalAmount {
  SearchCurrency?: string | undefined;
  SearchAmount?: number;
  DetailsCurrency?: string | undefined;
  DetailsAmount?: number;
  TermsCurrency?: string | undefined;
  TermsAmount?: number;
  BookingCurrency?: string | undefined;
  BookingAmount?: number;

  constructor(data?: ITotalAmount) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.SearchCurrency = _data["SearchCurrency"];
      this.SearchAmount = _data["SearchAmount"];
      this.DetailsCurrency = _data["DetailsCurrency"];
      this.DetailsAmount = _data["DetailsAmount"];
      this.TermsCurrency = _data["TermsCurrency"];
      this.TermsAmount = _data["TermsAmount"];
      this.BookingCurrency = _data["BookingCurrency"];
      this.BookingAmount = _data["BookingAmount"];
    }
  }

  static fromJS(data: any): TotalAmount {
    data = typeof data === 'object' ? data : {};
    let result = new TotalAmount();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["SearchCurrency"] = this.SearchCurrency;
    data["SearchAmount"] = this.SearchAmount;
    data["DetailsCurrency"] = this.DetailsCurrency;
    data["DetailsAmount"] = this.DetailsAmount;
    data["TermsCurrency"] = this.TermsCurrency;
    data["TermsAmount"] = this.TermsAmount;
    data["BookingCurrency"] = this.BookingCurrency;
    data["BookingAmount"] = this.BookingAmount;
    return data;
  }
}

export interface ITotalAmount {
  SearchCurrency?: string | undefined;
  SearchAmount?: number;
  DetailsCurrency?: string | undefined;
  DetailsAmount?: number;
  TermsCurrency?: string | undefined;
  TermsAmount?: number;
  BookingCurrency?: string | undefined;
  BookingAmount?: number;
}

export class RequiredParameter implements IRequiredParameter {
  Name?: string | undefined;
  Type?: ERequiredParameterType;
  Label?: string | undefined;
  PerPassenger?: boolean;
  IsOptional?: boolean;
  OptionList?: RequiredParameterOption[] | undefined;

  constructor(data?: IRequiredParameter) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Name = _data["Name"];
      this.Type = _data["Type"];
      this.Label = _data["Label"];
      this.PerPassenger = _data["PerPassenger"];
      this.IsOptional = _data["IsOptional"];
      if (Array.isArray(_data["OptionList"])) {
        this.OptionList = [] as any;
        for (let item of _data["OptionList"])
          this.OptionList!.push(RequiredParameterOption.fromJS(item));
      }
    }
  }

  static fromJS(data: any): RequiredParameter {
    data = typeof data === 'object' ? data : {};
    let result = new RequiredParameter();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Name"] = this.Name;
    data["Type"] = this.Type;
    data["Label"] = this.Label;
    data["PerPassenger"] = this.PerPassenger;
    data["IsOptional"] = this.IsOptional;
    if (Array.isArray(this.OptionList)) {
      data["OptionList"] = [];
      for (let item of this.OptionList)
        data["OptionList"].push(item.toJSON());
    }
    return data;
  }
}

export interface IRequiredParameter {
  Name?: string | undefined;
  Type?: ERequiredParameterType;
  Label?: string | undefined;
  PerPassenger?: boolean;
  IsOptional?: boolean;
  OptionList?: RequiredParameterOption[] | undefined;
}

export class RequiredParameterOption implements IRequiredParameterOption {
  Key?: string | undefined;
  Value?: string | undefined;
  PiecesDescription?: string | undefined;
  Pieces?: string | undefined;
  WeightDescription?: string | undefined;
  Weight?: string | undefined;
  Unit?: string | undefined;
  /** Used for Baggage Amount */
  Amount?: string | undefined;
  /** Used for Baggage Amount */
  CurrencyCode?: string | undefined;
  FlightSeatOption?: SeatOption[] | undefined;

  constructor(data?: IRequiredParameterOption) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Key = _data["Key"];
      this.Value = _data["Value"];
      this.PiecesDescription = _data["PiecesDescription"];
      this.Pieces = _data["Pieces"];
      this.WeightDescription = _data["WeightDescription"];
      this.Weight = _data["Weight"];
      this.Unit = _data["Unit"];
      this.Amount = _data["Amount"];
      this.CurrencyCode = _data["CurrencyCode"];
      if (Array.isArray(_data["FlightSeatOption"])) {
        this.FlightSeatOption = [] as any;
        for (let item of _data["FlightSeatOption"])
          this.FlightSeatOption!.push(SeatOption.fromJS(item));
      }
    }
  }

  static fromJS(data: any): RequiredParameterOption {
    data = typeof data === 'object' ? data : {};
    let result = new RequiredParameterOption();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Key"] = this.Key;
    data["Value"] = this.Value;
    data["PiecesDescription"] = this.PiecesDescription;
    data["Pieces"] = this.Pieces;
    data["WeightDescription"] = this.WeightDescription;
    data["Weight"] = this.Weight;
    data["Unit"] = this.Unit;
    data["Amount"] = this.Amount;
    data["CurrencyCode"] = this.CurrencyCode;
    if (Array.isArray(this.FlightSeatOption)) {
      data["FlightSeatOption"] = [];
      for (let item of this.FlightSeatOption)
        data["FlightSeatOption"].push(item.toJSON());
    }
    return data;
  }
}

export interface IRequiredParameterOption {
  Key?: string | undefined;
  Value?: string | undefined;
  PiecesDescription?: string | undefined;
  Pieces?: string | undefined;
  WeightDescription?: string | undefined;
  Weight?: string | undefined;
  Unit?: string | undefined;
  /** Used for Baggage Amount */
  Amount?: string | undefined;
  /** Used for Baggage Amount */
  CurrencyCode?: string | undefined;
  FlightSeatOption?: SeatOption[] | undefined;
}

export class SeatOption implements ISeatOption {
  Flight?: string | undefined;
  Seat?: string | undefined;
  SeatAttribute?: ExtraInfo[] | undefined;
  Aircraft?: string | undefined;
  Amount?: number | undefined;
  CurrencyCode?: string | undefined;

  constructor(data?: ISeatOption) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Flight = _data["Flight"];
      this.Seat = _data["Seat"];
      if (Array.isArray(_data["SeatAttribute"])) {
        this.SeatAttribute = [] as any;
        for (let item of _data["SeatAttribute"])
          this.SeatAttribute!.push(ExtraInfo.fromJS(item));
      }
      this.Aircraft = _data["Aircraft"];
      this.Amount = _data["Amount"];
      this.CurrencyCode = _data["CurrencyCode"];
    }
  }

  static fromJS(data: any): SeatOption {
    data = typeof data === 'object' ? data : {};
    let result = new SeatOption();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Flight"] = this.Flight;
    data["Seat"] = this.Seat;
    if (Array.isArray(this.SeatAttribute)) {
      data["SeatAttribute"] = [];
      for (let item of this.SeatAttribute)
        data["SeatAttribute"].push(item.toJSON());
    }
    data["Aircraft"] = this.Aircraft;
    data["Amount"] = this.Amount;
    data["CurrencyCode"] = this.CurrencyCode;
    return data;
  }
}

export interface ISeatOption {
  Flight?: string | undefined;
  Seat?: string | undefined;
  SeatAttribute?: ExtraInfo[] | undefined;
  Aircraft?: string | undefined;
  Amount?: number | undefined;
  CurrencyCode?: string | undefined;
}

export class ExtraInfo implements IExtraInfo {
  Key?: string | undefined;
  Value?: string | undefined;

  constructor(data?: IExtraInfo) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Key = _data["Key"];
      this.Value = _data["Value"];
    }
  }

  static fromJS(data: any): ExtraInfo {
    data = typeof data === 'object' ? data : {};
    let result = new ExtraInfo();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Key"] = this.Key;
    data["Value"] = this.Value;
    return data;
  }
}

export interface IExtraInfo {
  Key?: string | undefined;
  Value?: string | undefined;
}

export class SupplierHandoffData implements ISupplierHandoffData {
  Method?: string | undefined;
  Url?: string | undefined;
  Parameter?: SupplierHandoffDataParameter[] | undefined;

  constructor(data?: ISupplierHandoffData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Method = _data["Method"];
      this.Url = _data["Url"];
      if (Array.isArray(_data["Parameter"])) {
        this.Parameter = [] as any;
        for (let item of _data["Parameter"])
          this.Parameter!.push(SupplierHandoffDataParameter.fromJS(item));
      }
    }
  }

  static fromJS(data: any): SupplierHandoffData {
    data = typeof data === 'object' ? data : {};
    let result = new SupplierHandoffData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Method"] = this.Method;
    data["Url"] = this.Url;
    if (Array.isArray(this.Parameter)) {
      data["Parameter"] = [];
      for (let item of this.Parameter)
        data["Parameter"].push(item.toJSON());
    }
    return data;
  }
}

export interface ISupplierHandoffData {
  Method?: string | undefined;
  Url?: string | undefined;
  Parameter?: SupplierHandoffDataParameter[] | undefined;
}

export class SupplierHandoffDataParameter implements ISupplierHandoffDataParameter {
  Name?: string | undefined;
  Value?: string | undefined;

  constructor(data?: ISupplierHandoffDataParameter) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Name = _data["Name"];
      this.Value = _data["Value"];
    }
  }

  static fromJS(data: any): SupplierHandoffDataParameter {
    data = typeof data === 'object' ? data : {};
    let result = new SupplierHandoffDataParameter();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Name"] = this.Name;
    data["Value"] = this.Value;
    return data;
  }
}

export interface ISupplierHandoffDataParameter {
  Name?: string | undefined;
  Value?: string | undefined;
}

export class Feature implements IFeature {
  Type?: string | undefined;
  Label?: string | undefined;
  Option?: FeatureOption[] | undefined;

  constructor(data?: IFeature) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Type = _data["Type"];
      this.Label = _data["Label"];
      if (Array.isArray(_data["Option"])) {
        this.Option = [] as any;
        for (let item of _data["Option"])
          this.Option!.push(FeatureOption.fromJS(item));
      }
    }
  }

  static fromJS(data: any): Feature {
    data = typeof data === 'object' ? data : {};
    let result = new Feature();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Type"] = this.Type;
    data["Label"] = this.Label;
    if (Array.isArray(this.Option)) {
      data["Option"] = [];
      for (let item of this.Option)
        data["Option"].push(item.toJSON());
    }
    return data;
  }
}

export interface IFeature {
  Type?: string | undefined;
  Label?: string | undefined;
  Option?: FeatureOption[] | undefined;
}

export class FeatureOption implements IFeatureOption {
  Id?: number;
  Currency?: string | undefined;
  MinValue?: number;
  MaxValue?: number;
  Condition?: FeatureOptionCondition | undefined;
  Dependency?: string | undefined;

  constructor(data?: IFeatureOption) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Id = _data["Id"];
      this.Currency = _data["Currency"];
      this.MinValue = _data["MinValue"];
      this.MaxValue = _data["MaxValue"];
      this.Condition = _data["Condition"] ? FeatureOptionCondition.fromJS(_data["Condition"]) : <any>undefined;
      this.Dependency = _data["Dependency"];
    }
  }

  static fromJS(data: any): FeatureOption {
    data = typeof data === 'object' ? data : {};
    let result = new FeatureOption();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Id"] = this.Id;
    data["Currency"] = this.Currency;
    data["MinValue"] = this.MinValue;
    data["MaxValue"] = this.MaxValue;
    data["Condition"] = this.Condition ? this.Condition.toJSON() : <any>undefined;
    data["Dependency"] = this.Dependency;
    return data;
  }
}

export interface IFeatureOption {
  Id?: number;
  Currency?: string | undefined;
  MinValue?: number;
  MaxValue?: number;
  Condition?: FeatureOptionCondition | undefined;
  Dependency?: string | undefined;
}

export class FeatureOptionCondition implements IFeatureOptionCondition {
  Channel?: string | undefined;
  ChangeScale?: string | undefined;
  Phase?: string | undefined;
  ChargeModel?: string | undefined;
  MinTimeBeforeDeparture?: string | undefined;
  MaxTimeAfterBooking?: string | undefined;
  Weight?: string | undefined;
  MaxQuantity?: string | undefined;
  Provision?: string | undefined;
  Dimensions?: string | undefined;

  constructor(data?: IFeatureOptionCondition) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Channel = _data["Channel"];
      this.ChangeScale = _data["ChangeScale"];
      this.Phase = _data["Phase"];
      this.ChargeModel = _data["ChargeModel"];
      this.MinTimeBeforeDeparture = _data["MinTimeBeforeDeparture"];
      this.MaxTimeAfterBooking = _data["MaxTimeAfterBooking"];
      this.Weight = _data["Weight"];
      this.MaxQuantity = _data["MaxQuantity"];
      this.Provision = _data["Provision"];
      this.Dimensions = _data["Dimensions"];
    }
  }

  static fromJS(data: any): FeatureOptionCondition {
    data = typeof data === 'object' ? data : {};
    let result = new FeatureOptionCondition();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Channel"] = this.Channel;
    data["ChangeScale"] = this.ChangeScale;
    data["Phase"] = this.Phase;
    data["ChargeModel"] = this.ChargeModel;
    data["MinTimeBeforeDeparture"] = this.MinTimeBeforeDeparture;
    data["MaxTimeAfterBooking"] = this.MaxTimeAfterBooking;
    data["Weight"] = this.Weight;
    data["MaxQuantity"] = this.MaxQuantity;
    data["Provision"] = this.Provision;
    data["Dimensions"] = this.Dimensions;
    return data;
  }
}

export interface IFeatureOptionCondition {
  Channel?: string | undefined;
  ChangeScale?: string | undefined;
  Phase?: string | undefined;
  ChargeModel?: string | undefined;
  MinTimeBeforeDeparture?: string | undefined;
  MaxTimeAfterBooking?: string | undefined;
  Weight?: string | undefined;
  MaxQuantity?: string | undefined;
  Provision?: string | undefined;
  Dimensions?: string | undefined;
}

export class SupplierInfo implements ISupplierInfo {
  DisplayName?: string | undefined;
  InfoType?: string | undefined;
  Info?: string | undefined;

  constructor(data?: ISupplierInfo) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.DisplayName = _data["DisplayName"];
      this.InfoType = _data["InfoType"];
      this.Info = _data["Info"];
    }
  }

  static fromJS(data: any): SupplierInfo {
    data = typeof data === 'object' ? data : {};
    let result = new SupplierInfo();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["DisplayName"] = this.DisplayName;
    data["InfoType"] = this.InfoType;
    data["Info"] = this.Info;
    return data;
  }
}

export interface ISupplierInfo {
  DisplayName?: string | undefined;
  InfoType?: string | undefined;
  Info?: string | undefined;
}

export class SupportedCard implements ISupportedCard {
  CardType?: string | undefined;
  Charge?: SupportedCardCharge | undefined;
  ChargeIsPerPassengerLeg?: boolean;

  constructor(data?: ISupportedCard) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.CardType = _data["CardType"];
      this.Charge = _data["Charge"] ? SupportedCardCharge.fromJS(_data["Charge"]) : <any>undefined;
      this.ChargeIsPerPassengerLeg = _data["ChargeIsPerPassengerLeg"];
    }
  }

  static fromJS(data: any): SupportedCard {
    data = typeof data === 'object' ? data : {};
    let result = new SupportedCard();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CardType"] = this.CardType;
    data["Charge"] = this.Charge ? this.Charge.toJSON() : <any>undefined;
    data["ChargeIsPerPassengerLeg"] = this.ChargeIsPerPassengerLeg;
    return data;
  }
}

export interface ISupportedCard {
  CardType?: string | undefined;
  Charge?: SupportedCardCharge | undefined;
  ChargeIsPerPassengerLeg?: boolean;
}

export class SupportedCardCharge implements ISupportedCardCharge {
  Amount?: number;
  Currency?: string | undefined;

  constructor(data?: ISupportedCardCharge) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Amount = _data["Amount"];
      this.Currency = _data["Currency"];
    }
  }

  static fromJS(data: any): SupportedCardCharge {
    data = typeof data === 'object' ? data : {};
    let result = new SupportedCardCharge();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Amount"] = this.Amount;
    data["Currency"] = this.Currency;
    return data;
  }
}

export interface ISupportedCardCharge {
  Amount?: number;
  Currency?: string | undefined;
}

export class GeneralInfo implements IGeneralInfo {
  Name?: string | undefined;
  Value?: string | undefined;

  constructor(data?: IGeneralInfo) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Name = _data["Name"];
      this.Value = _data["Value"];
    }
  }

  static fromJS(data: any): GeneralInfo {
    data = typeof data === 'object' ? data : {};
    let result = new GeneralInfo();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Name"] = this.Name;
    data["Value"] = this.Value;
    return data;
  }
}

export interface IGeneralInfo {
  Name?: string | undefined;
  Value?: string | undefined;
}

export abstract class CustomerCustomDataOfFlightDetailPnr implements ICustomerCustomDataOfFlightDetailPnr {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfFlightDetailPnr) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfFlightDetailPnr";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfFlightDetailPnr {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfFlightDetailPnr' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfFlightDetailPnr {
}

export class PnrFlightSegment extends FlightSegment implements IPnrFlightSegment {
  /** Flight Status */
  FlightStatus?: EFlightStatus;
  /** Connector Custom Data */
  ConnectorCustomData?: PnrFlightSegmentCustomData | undefined;

  constructor(data?: IPnrFlightSegment) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.FlightStatus = _data["FlightStatus"];
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? PnrFlightSegmentCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): PnrFlightSegment {
    data = typeof data === 'object' ? data : {};
    let result = new PnrFlightSegment();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["FlightStatus"] = this.FlightStatus;
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IPnrFlightSegment extends IFlightSegment {
  /** Flight Status */
  FlightStatus?: EFlightStatus;
  /** Connector Custom Data */
  ConnectorCustomData?: PnrFlightSegmentCustomData | undefined;
}

export enum EFlightStatus {
  HK_CONFIRMED = "HK_CONFIRMED",
  WL_WAITLISTED = "WL_WAITLISTED",
  RQ_ON_REQUEST = "RQ_ON_REQUEST",
  X_CANCELLED = "X_CANCELLED",
  UC_IMPOSSIBLE = "UC_IMPOSSIBLE",
  SC_SCHEDULE_CHANGE = "SC_SCHEDULE_CHANGE",
  UNKNOWN = "UNKNOWN",
}

export abstract class PnrFlightSegmentCustomData implements IPnrFlightSegmentCustomData {

  protected _discriminator: string;

  constructor(data?: IPnrFlightSegmentCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "PnrFlightSegmentCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): PnrFlightSegmentCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "AMADEUS") {
      let result = new AmadeusPnrFlightSegmentCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "SABRE") {
      let result = new SabrePnrFlightSegmentCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'PnrFlightSegmentCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IPnrFlightSegmentCustomData {
}

export class AmadeusPnrFlightSegmentCustomData extends PnrFlightSegmentCustomData implements IAmadeusPnrFlightSegmentCustomData {
  /** Pnr Reference Number */
  ReferenceNumber?: string | undefined;
  /** Pnr Line Number */
  LineNumber?: string | undefined;
  /** Class Code of the Segment */
  ClassCode?: string | undefined;
  /** Amadeus Status */
  Status?: string | undefined;
  /** Is E-ticket Enabled or not */
  ETicket?: boolean;
  /** Return the Pax Quantity on the current Segment */
  Quantity?: number;
  /** Num of Stops if presents */
  NumOfStops?: string | undefined;
  /** Free Text with OperatedBy in the segment */
  OperatedByText?: string | undefined;
  /** Code of cabin classDesignator */
  CabinDetails?: string | undefined;

  constructor(data?: IAmadeusPnrFlightSegmentCustomData) {
    super(data);
    this._discriminator = "AMADEUS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ReferenceNumber = _data["ReferenceNumber"];
      this.LineNumber = _data["LineNumber"];
      this.ClassCode = _data["ClassCode"];
      this.Status = _data["Status"];
      this.ETicket = _data["ETicket"];
      this.Quantity = _data["Quantity"];
      this.NumOfStops = _data["NumOfStops"];
      this.OperatedByText = _data["OperatedByText"];
      this.CabinDetails = _data["CabinDetails"];
    }
  }

  static fromJS(data: any): AmadeusPnrFlightSegmentCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new AmadeusPnrFlightSegmentCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ReferenceNumber"] = this.ReferenceNumber;
    data["LineNumber"] = this.LineNumber;
    data["ClassCode"] = this.ClassCode;
    data["Status"] = this.Status;
    data["ETicket"] = this.ETicket;
    data["Quantity"] = this.Quantity;
    data["NumOfStops"] = this.NumOfStops;
    data["OperatedByText"] = this.OperatedByText;
    data["CabinDetails"] = this.CabinDetails;
    super.toJSON(data);
    return data;
  }
}

export interface IAmadeusPnrFlightSegmentCustomData extends IPnrFlightSegmentCustomData {
  /** Pnr Reference Number */
  ReferenceNumber?: string | undefined;
  /** Pnr Line Number */
  LineNumber?: string | undefined;
  /** Class Code of the Segment */
  ClassCode?: string | undefined;
  /** Amadeus Status */
  Status?: string | undefined;
  /** Is E-ticket Enabled or not */
  ETicket?: boolean;
  /** Return the Pax Quantity on the current Segment */
  Quantity?: number;
  /** Num of Stops if presents */
  NumOfStops?: string | undefined;
  /** Free Text with OperatedBy in the segment */
  OperatedByText?: string | undefined;
  /** Code of cabin classDesignator */
  CabinDetails?: string | undefined;
}

export class SabrePnrFlightSegmentCustomData extends PnrFlightSegmentCustomData implements ISabrePnrFlightSegmentCustomData {
  /** Information whether the flight segment is part of a married connection.
   "O" means "no". "I" means "yes" */
  MarriageGrp?: string | undefined;
  /** Return the real Sabre Status code */
  StatusCode?: string | undefined;

  constructor(data?: ISabrePnrFlightSegmentCustomData) {
    super(data);
    this._discriminator = "SABRE";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.MarriageGrp = _data["MarriageGrp"];
      this.StatusCode = _data["StatusCode"];
    }
  }

  static fromJS(data: any): SabrePnrFlightSegmentCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabrePnrFlightSegmentCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["MarriageGrp"] = this.MarriageGrp;
    data["StatusCode"] = this.StatusCode;
    super.toJSON(data);
    return data;
  }
}

export interface ISabrePnrFlightSegmentCustomData extends IPnrFlightSegmentCustomData {
  /** Information whether the flight segment is part of a married connection.
   "O" means "no". "I" means "yes" */
  MarriageGrp?: string | undefined;
  /** Return the real Sabre Status code */
  StatusCode?: string | undefined;
}

export abstract class CustomerCustomDataOfPnrFlightSegment implements ICustomerCustomDataOfPnrFlightSegment {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfPnrFlightSegment) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfPnrFlightSegment";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfPnrFlightSegment {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfPnrFlightSegment' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfPnrFlightSegment {
}

export class PnrFlightFare implements IPnrFlightFare {
  /** Flight Fare Group Result Id */
  Id?: string | undefined;
  /** Flight Fare Description */
  Description?: string | undefined;
  /** The Pax Fare List of the current FareGroup */
  PaxFareList?: PnrFlightPaxFare[] | undefined;
  /** Fare Rules related to the FareBasis */
  FareRules?: FareRule[] | undefined;
  /** Additional feed applied to the results

   SABRE:

   Fore example 21 Euro on EasyJet(U2) fee - Difference from Fares and the total price */
  FeeList?: Tax[] | undefined;
  /** The Total Amount From Connector */
  Amount?: Total | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: PnrFlightFareCustomData | undefined;

  constructor(data?: IPnrFlightFare) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Id = _data["Id"];
      this.Description = _data["Description"];
      if (Array.isArray(_data["PaxFareList"])) {
        this.PaxFareList = [] as any;
        for (let item of _data["PaxFareList"])
          this.PaxFareList!.push(PnrFlightPaxFare.fromJS(item));
      }
      if (Array.isArray(_data["FareRules"])) {
        this.FareRules = [] as any;
        for (let item of _data["FareRules"])
          this.FareRules!.push(FareRule.fromJS(item));
      }
      if (Array.isArray(_data["FeeList"])) {
        this.FeeList = [] as any;
        for (let item of _data["FeeList"])
          this.FeeList!.push(Tax.fromJS(item));
      }
      this.Amount = _data["Amount"] ? Total.fromJS(_data["Amount"]) : <any>undefined;
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? PnrFlightFareCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): PnrFlightFare {
    data = typeof data === 'object' ? data : {};
    let result = new PnrFlightFare();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Id"] = this.Id;
    data["Description"] = this.Description;
    if (Array.isArray(this.PaxFareList)) {
      data["PaxFareList"] = [];
      for (let item of this.PaxFareList)
        data["PaxFareList"].push(item.toJSON());
    }
    if (Array.isArray(this.FareRules)) {
      data["FareRules"] = [];
      for (let item of this.FareRules)
        data["FareRules"].push(item.toJSON());
    }
    if (Array.isArray(this.FeeList)) {
      data["FeeList"] = [];
      for (let item of this.FeeList)
        data["FeeList"].push(item.toJSON());
    }
    data["Amount"] = this.Amount ? this.Amount.toJSON() : <any>undefined;
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    return data;
  }
}

export interface IPnrFlightFare {
  /** Flight Fare Group Result Id */
  Id?: string | undefined;
  /** Flight Fare Description */
  Description?: string | undefined;
  /** The Pax Fare List of the current FareGroup */
  PaxFareList?: PnrFlightPaxFare[] | undefined;
  /** Fare Rules related to the FareBasis */
  FareRules?: FareRule[] | undefined;
  /** Additional feed applied to the results

   SABRE:

   Fore example 21 Euro on EasyJet(U2) fee - Difference from Fares and the total price */
  FeeList?: Tax[] | undefined;
  /** The Total Amount From Connector */
  Amount?: Total | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: PnrFlightFareCustomData | undefined;
}

export class PnrFlightPaxFare extends FlightPaxFare implements IPnrFlightPaxFare {
  /** Connector Custom Data */
  ConnectorCustomData?: PnrFlightPaxFareCustomData | undefined;

  constructor(data?: IPnrFlightPaxFare) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? PnrFlightPaxFareCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): PnrFlightPaxFare {
    data = typeof data === 'object' ? data : {};
    let result = new PnrFlightPaxFare();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IPnrFlightPaxFare extends IFlightPaxFare {
  /** Connector Custom Data */
  ConnectorCustomData?: PnrFlightPaxFareCustomData | undefined;
}

export abstract class PnrFlightPaxFareCustomData implements IPnrFlightPaxFareCustomData {

  protected _discriminator: string;

  constructor(data?: IPnrFlightPaxFareCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "PnrFlightPaxFareCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): PnrFlightPaxFareCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "AMADEUS") {
      let result = new AmadeusPnrFlightPaxFareCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'PnrFlightPaxFareCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IPnrFlightPaxFareCustomData {
}

export class AmadeusPnrFlightPaxFareCustomData extends PnrFlightPaxFareCustomData implements IAmadeusPnrFlightPaxFareCustomData {
  /** TST Creation Date */
  CreationDate?: string | undefined;
  /** TST Last Modification Date */
  LastModificationDate?: string | undefined;
  TstIndicator?: string | undefined;

  constructor(data?: IAmadeusPnrFlightPaxFareCustomData) {
    super(data);
    this._discriminator = "AMADEUS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.CreationDate = _data["CreationDate"];
      this.LastModificationDate = _data["LastModificationDate"];
      this.TstIndicator = _data["TstIndicator"];
    }
  }

  static fromJS(data: any): AmadeusPnrFlightPaxFareCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new AmadeusPnrFlightPaxFareCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CreationDate"] = this.CreationDate;
    data["LastModificationDate"] = this.LastModificationDate;
    data["TstIndicator"] = this.TstIndicator;
    super.toJSON(data);
    return data;
  }
}

export interface IAmadeusPnrFlightPaxFareCustomData extends IPnrFlightPaxFareCustomData {
  /** TST Creation Date */
  CreationDate?: string | undefined;
  /** TST Last Modification Date */
  LastModificationDate?: string | undefined;
  TstIndicator?: string | undefined;
}

export abstract class CustomerCustomDataOfPnrFlightPaxFare implements ICustomerCustomDataOfPnrFlightPaxFare {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfPnrFlightPaxFare) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfPnrFlightPaxFare";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfPnrFlightPaxFare {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfPnrFlightPaxFare' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfPnrFlightPaxFare {
}

export class FareRule implements IFareRule {
  /** Fare Rule Title */
  Title?: string | undefined;
  /** Fare Rule Application
   Text Explaining where it will be applied -&gt; FareBasis/Segment */
  Application?: string | undefined;
  /** Fare Rule Description */
  Description?: string | undefined;

  constructor(data?: IFareRule) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Title = _data["Title"];
      this.Application = _data["Application"];
      this.Description = _data["Description"];
    }
  }

  static fromJS(data: any): FareRule {
    data = typeof data === 'object' ? data : {};
    let result = new FareRule();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Title"] = this.Title;
    data["Application"] = this.Application;
    data["Description"] = this.Description;
    return data;
  }
}

export interface IFareRule {
  /** Fare Rule Title */
  Title?: string | undefined;
  /** Fare Rule Application
   Text Explaining where it will be applied -&gt; FareBasis/Segment */
  Application?: string | undefined;
  /** Fare Rule Description */
  Description?: string | undefined;
}

export abstract class PnrFlightFareCustomData implements IPnrFlightFareCustomData {

  protected _discriminator: string;

  constructor(data?: IPnrFlightFareCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "PnrFlightFareCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): PnrFlightFareCustomData {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'PnrFlightFareCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IPnrFlightFareCustomData {
}

export abstract class CustomerCustomDataOfPnrFlightFare implements ICustomerCustomDataOfPnrFlightFare {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfPnrFlightFare) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfPnrFlightFare";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfPnrFlightFare {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfPnrFlightFare' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfPnrFlightFare {
}

export abstract class BaseFlightAncillary implements IBaseFlightAncillary {
  /** Ancillary Id */
  Id?: string | undefined;
  /** The Ancillary Type */
  Type?: EAncillaryType;
  /** Ancillary Code */
  Code?: string | undefined;
  /** Ancillary Description */
  Description?: string | undefined;

  constructor(data?: IBaseFlightAncillary) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Id = _data["Id"];
      this.Type = _data["Type"];
      this.Code = _data["Code"];
      this.Description = _data["Description"];
    }
  }

  static fromJS(data: any): BaseFlightAncillary {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'BaseFlightAncillary' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Id"] = this.Id;
    data["Type"] = this.Type;
    data["Code"] = this.Code;
    data["Description"] = this.Description;
    return data;
  }
}

export interface IBaseFlightAncillary {
  /** Ancillary Id */
  Id?: string | undefined;
  /** The Ancillary Type */
  Type?: EAncillaryType;
  /** Ancillary Code */
  Code?: string | undefined;
  /** Ancillary Description */
  Description?: string | undefined;
}

export class BookedFlightAncillary extends BaseFlightAncillary implements IBookedFlightAncillary {
  /** Pax Reference of the Pnr Pax Id */
  PaxRefId?: string | undefined;
  /** The Flight Segment Id Reference */
  FlightSegmentRefIds?: string[] | undefined;
  /** Charge Mode for the Ancillary */
  ChargeMode?: EAncillaryChargeMode;
  /** Ancillary Base Amount */
  BaseAmount?: CurrencyAmount | undefined;
  /** Selected Option in case of Options or the Value */
  SelectedOptionIdOrValue?: string | undefined;
  /** Selected Option Description */
  SelectedOptionDescription?: string | undefined;
  /** Total Amount Calculated from BaseAmount and ChargeMode */
  TotalAmount?: CurrencyAmount | undefined;

  constructor(data?: IBookedFlightAncillary) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.PaxRefId = _data["PaxRefId"];
      if (Array.isArray(_data["FlightSegmentRefIds"])) {
        this.FlightSegmentRefIds = [] as any;
        for (let item of _data["FlightSegmentRefIds"])
          this.FlightSegmentRefIds!.push(item);
      }
      this.ChargeMode = _data["ChargeMode"];
      this.BaseAmount = _data["BaseAmount"] ? CurrencyAmount.fromJS(_data["BaseAmount"]) : <any>undefined;
      this.SelectedOptionIdOrValue = _data["SelectedOptionIdOrValue"];
      this.SelectedOptionDescription = _data["SelectedOptionDescription"];
      this.TotalAmount = _data["TotalAmount"] ? CurrencyAmount.fromJS(_data["TotalAmount"]) : <any>undefined;
    }
  }

  static fromJS(data: any): BookedFlightAncillary {
    data = typeof data === 'object' ? data : {};
    let result = new BookedFlightAncillary();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["PaxRefId"] = this.PaxRefId;
    if (Array.isArray(this.FlightSegmentRefIds)) {
      data["FlightSegmentRefIds"] = [];
      for (let item of this.FlightSegmentRefIds)
        data["FlightSegmentRefIds"].push(item);
    }
    data["ChargeMode"] = this.ChargeMode;
    data["BaseAmount"] = this.BaseAmount ? this.BaseAmount.toJSON() : <any>undefined;
    data["SelectedOptionIdOrValue"] = this.SelectedOptionIdOrValue;
    data["SelectedOptionDescription"] = this.SelectedOptionDescription;
    data["TotalAmount"] = this.TotalAmount ? this.TotalAmount.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IBookedFlightAncillary extends IBaseFlightAncillary {
  /** Pax Reference of the Pnr Pax Id */
  PaxRefId?: string | undefined;
  /** The Flight Segment Id Reference */
  FlightSegmentRefIds?: string[] | undefined;
  /** Charge Mode for the Ancillary */
  ChargeMode?: EAncillaryChargeMode;
  /** Ancillary Base Amount */
  BaseAmount?: CurrencyAmount | undefined;
  /** Selected Option in case of Options or the Value */
  SelectedOptionIdOrValue?: string | undefined;
  /** Selected Option Description */
  SelectedOptionDescription?: string | undefined;
  /** Total Amount Calculated from BaseAmount and ChargeMode */
  TotalAmount?: CurrencyAmount | undefined;
}

export class PnrBookedFlightAncillary extends BookedFlightAncillary implements IPnrBookedFlightAncillary {
  /** Connector Custom Data */
  ConnectorCustomData?: PnrBookedFlightAncillaryCustomData | undefined;

  constructor(data?: IPnrBookedFlightAncillary) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? PnrBookedFlightAncillaryCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): PnrBookedFlightAncillary {
    data = typeof data === 'object' ? data : {};
    let result = new PnrBookedFlightAncillary();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IPnrBookedFlightAncillary extends IBookedFlightAncillary {
  /** Connector Custom Data */
  ConnectorCustomData?: PnrBookedFlightAncillaryCustomData | undefined;
}

export abstract class PnrBookedFlightAncillaryCustomData implements IPnrBookedFlightAncillaryCustomData {

  protected _discriminator: string;

  constructor(data?: IPnrBookedFlightAncillaryCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "PnrBookedFlightAncillaryCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): PnrBookedFlightAncillaryCustomData {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'PnrBookedFlightAncillaryCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IPnrBookedFlightAncillaryCustomData {
}

export abstract class CustomerCustomDataOfPnrBookedFlightAncillary implements ICustomerCustomDataOfPnrBookedFlightAncillary {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfPnrBookedFlightAncillary) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfPnrBookedFlightAncillary";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfPnrBookedFlightAncillary {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfPnrBookedFlightAncillary' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfPnrBookedFlightAncillary {
}

export enum EAncillaryChargeMode {
  PER_PERSON = "PER_PERSON",
  PER_SEGMENT = "PER_SEGMENT",
  PER_PERSON_PER_SEGMENT = "PER_PERSON_PER_SEGMENT",
  TOTAL = "TOTAL",
}

export enum EAncillaryType {
  BAGGAGE = "BAGGAGE",
  OUTWARD_BAGGAGE = "OUTWARD_BAGGAGE",
  RETURN_BAGGAGE = "RETURN_BAGGAGE",
  MEAL = "MEAL",
  INSURANCE = "INSURANCE",
  SPEEDY_BOARDING = "SPEEDY_BOARDING",
  ONLINE_CHECKIN = "ONLINE_CHECKIN",
  AIRPORT_CHECKIN = "AIRPORT_CHECKIN",
  SEAT_ASSIGNMENT = "SEAT_ASSIGNMENT",
  CARD_CHARGE = "CARD_CHARGE",
  EQUIPMENT = "EQUIPMENT",
  OTHER = "OTHER",
}

export class FlightAdditionalAncillary extends BaseFlightAncillary implements IFlightAdditionalAncillary {
  /** Ancillary Options
   Display all the options of the ancillary and the selected one during booking

   It could be null or empty in case of NoOptions Ancillary */
  Options?: FlightAncillaryOption[] | undefined;
  /** Selected Pax Reference of the Pnr Pax Id

   To be filled in Book Request */
  SelectedPaxRefId?: string | undefined;
  /** The flight segment Ids Reference

   To be filled in Book Request */
  SelectedFlightSegmentRefIds?: string[] | undefined;
  /** Selected Option Id or Value String to be passed in case of NoOptions Ancillary

   To be filled in Book Request */
  SelectedOptionIdOrValue?: string | undefined;

  constructor(data?: IFlightAdditionalAncillary) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      if (Array.isArray(_data["Options"])) {
        this.Options = [] as any;
        for (let item of _data["Options"])
          this.Options!.push(FlightAncillaryOption.fromJS(item));
      }
      this.SelectedPaxRefId = _data["SelectedPaxRefId"];
      if (Array.isArray(_data["SelectedFlightSegmentRefIds"])) {
        this.SelectedFlightSegmentRefIds = [] as any;
        for (let item of _data["SelectedFlightSegmentRefIds"])
          this.SelectedFlightSegmentRefIds!.push(item);
      }
      this.SelectedOptionIdOrValue = _data["SelectedOptionIdOrValue"];
    }
  }

  static fromJS(data: any): FlightAdditionalAncillary {
    data = typeof data === 'object' ? data : {};
    let result = new FlightAdditionalAncillary();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.Options)) {
      data["Options"] = [];
      for (let item of this.Options)
        data["Options"].push(item.toJSON());
    }
    data["SelectedPaxRefId"] = this.SelectedPaxRefId;
    if (Array.isArray(this.SelectedFlightSegmentRefIds)) {
      data["SelectedFlightSegmentRefIds"] = [];
      for (let item of this.SelectedFlightSegmentRefIds)
        data["SelectedFlightSegmentRefIds"].push(item);
    }
    data["SelectedOptionIdOrValue"] = this.SelectedOptionIdOrValue;
    super.toJSON(data);
    return data;
  }
}

export interface IFlightAdditionalAncillary extends IBaseFlightAncillary {
  /** Ancillary Options
   Display all the options of the ancillary and the selected one during booking

   It could be null or empty in case of NoOptions Ancillary */
  Options?: FlightAncillaryOption[] | undefined;
  /** Selected Pax Reference of the Pnr Pax Id

   To be filled in Book Request */
  SelectedPaxRefId?: string | undefined;
  /** The flight segment Ids Reference

   To be filled in Book Request */
  SelectedFlightSegmentRefIds?: string[] | undefined;
  /** Selected Option Id or Value String to be passed in case of NoOptions Ancillary

   To be filled in Book Request */
  SelectedOptionIdOrValue?: string | undefined;
}

export class PnrFlightAdditionalAncillary extends FlightAdditionalAncillary implements IPnrFlightAdditionalAncillary {
  /** Connector Custom Data */
  ConnectorCustomData?: PnrFlightAdditionalAncillaryCustomData | undefined;

  constructor(data?: IPnrFlightAdditionalAncillary) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? PnrFlightAdditionalAncillaryCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): PnrFlightAdditionalAncillary {
    data = typeof data === 'object' ? data : {};
    let result = new PnrFlightAdditionalAncillary();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IPnrFlightAdditionalAncillary extends IFlightAdditionalAncillary {
  /** Connector Custom Data */
  ConnectorCustomData?: PnrFlightAdditionalAncillaryCustomData | undefined;
}

export abstract class PnrFlightAdditionalAncillaryCustomData implements IPnrFlightAdditionalAncillaryCustomData {

  protected _discriminator: string;

  constructor(data?: IPnrFlightAdditionalAncillaryCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "PnrFlightAdditionalAncillaryCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): PnrFlightAdditionalAncillaryCustomData {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'PnrFlightAdditionalAncillaryCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IPnrFlightAdditionalAncillaryCustomData {
}

export abstract class CustomerCustomDataOfPnrFlightAdditionalAncillary implements ICustomerCustomDataOfPnrFlightAdditionalAncillary {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfPnrFlightAdditionalAncillary) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfPnrFlightAdditionalAncillary";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfPnrFlightAdditionalAncillary {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfPnrFlightAdditionalAncillary' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfPnrFlightAdditionalAncillary {
}

export class FlightAncillaryOption implements IFlightAncillaryOption {
  /** Ancillary Option Id */
  Id!: string;
  /** Ancillary Option Description */
  Description?: string | undefined;
  /** Pax Type of the ancillary */
  PaxType?: EPaxType | undefined;
  /** Charge Mode for the ancillary */
  ChargeMode?: EAncillaryChargeMode;
  /** Ancillary Base Amount

   A Total Ancillary Amount need to be calculated with BaseAmount and ChargeMode */
  BaseAmount!: CurrencyAmount;

  constructor(data?: IFlightAncillaryOption) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    if (!data) {
      this.BaseAmount = new CurrencyAmount();
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Id = _data["Id"];
      this.Description = _data["Description"];
      this.PaxType = _data["PaxType"];
      this.ChargeMode = _data["ChargeMode"];
      this.BaseAmount = _data["BaseAmount"] ? CurrencyAmount.fromJS(_data["BaseAmount"]) : new CurrencyAmount();
    }
  }

  static fromJS(data: any): FlightAncillaryOption {
    data = typeof data === 'object' ? data : {};
    let result = new FlightAncillaryOption();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Id"] = this.Id;
    data["Description"] = this.Description;
    data["PaxType"] = this.PaxType;
    data["ChargeMode"] = this.ChargeMode;
    data["BaseAmount"] = this.BaseAmount ? this.BaseAmount.toJSON() : <any>undefined;
    return data;
  }
}

export interface IFlightAncillaryOption {
  /** Ancillary Option Id */
  Id: string;
  /** Ancillary Option Description */
  Description?: string | undefined;
  /** Pax Type of the ancillary */
  PaxType?: EPaxType | undefined;
  /** Charge Mode for the ancillary */
  ChargeMode?: EAncillaryChargeMode;
  /** Ancillary Base Amount

   A Total Ancillary Amount need to be calculated with BaseAmount and ChargeMode */
  BaseAmount: CurrencyAmount;
}

export class PnrPaxDetails extends PaxDetails implements IPnrPaxDetails {
  /** Pnr Pax Id

   SABRE -&gt; Mapped on NameNumber and used by different elements for reference: Fares, Remarks, OsiSsr, etc. */
  Id?: string | undefined;
  /** List of ConnectorCustomData */
  ConnectorCustomData?: PnrPaxDetailsCustomData | undefined;

  constructor(data?: IPnrPaxDetails) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Id = _data["Id"];
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? PnrPaxDetailsCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): PnrPaxDetails {
    data = typeof data === 'object' ? data : {};
    let result = new PnrPaxDetails();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Id"] = this.Id;
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IPnrPaxDetails extends IPaxDetails {
  /** Pnr Pax Id

   SABRE -&gt; Mapped on NameNumber and used by different elements for reference: Fares, Remarks, OsiSsr, etc. */
  Id?: string | undefined;
  /** List of ConnectorCustomData */
  ConnectorCustomData?: PnrPaxDetailsCustomData | undefined;
}

export abstract class PnrPaxDetailsCustomData implements IPnrPaxDetailsCustomData {

  protected _discriminator: string;

  constructor(data?: IPnrPaxDetailsCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "PnrPaxDetailsCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): PnrPaxDetailsCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "AMADEUS") {
      let result = new AmadeusPnrPaxDetailsCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "SABRE") {
      let result = new SabrePnrPaxDetailsCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'PnrPaxDetailsCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IPnrPaxDetailsCustomData {
}

export class AmadeusPnrPaxDetailsCustomData extends PnrPaxDetailsCustomData implements IAmadeusPnrPaxDetailsCustomData {
  /** Pnr Line Number */
  LineNumber?: string | undefined;
  /** Amadeus PaxType */
  PaxType?: string | undefined;
  /** Amadeus pax Quantity -&gt; should be always 1 */
  Quantity?: string | undefined;
  /** Amadeus Infant Indicator -&gt; if there is an infant on the same seat */
  InfantIndicator?: string | undefined;

  constructor(data?: IAmadeusPnrPaxDetailsCustomData) {
    super(data);
    this._discriminator = "AMADEUS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.LineNumber = _data["LineNumber"];
      this.PaxType = _data["PaxType"];
      this.Quantity = _data["Quantity"];
      this.InfantIndicator = _data["InfantIndicator"];
    }
  }

  static fromJS(data: any): AmadeusPnrPaxDetailsCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new AmadeusPnrPaxDetailsCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["LineNumber"] = this.LineNumber;
    data["PaxType"] = this.PaxType;
    data["Quantity"] = this.Quantity;
    data["InfantIndicator"] = this.InfantIndicator;
    super.toJSON(data);
    return data;
  }
}

export interface IAmadeusPnrPaxDetailsCustomData extends IPnrPaxDetailsCustomData {
  /** Pnr Line Number */
  LineNumber?: string | undefined;
  /** Amadeus PaxType */
  PaxType?: string | undefined;
  /** Amadeus pax Quantity -&gt; should be always 1 */
  Quantity?: string | undefined;
  /** Amadeus Infant Indicator -&gt; if there is an infant on the same seat */
  InfantIndicator?: string | undefined;
}

export class SabrePnrPaxDetailsCustomData extends PnrPaxDetailsCustomData implements ISabrePnrPaxDetailsCustomData {
  /** Sabre CustomerInfo ContactNumber
   Override the defaults phones
   If missing it will add the first phone in the list of: in Travel Agency as type "A", in pax detail as type "H", in pax detail Company as type "B" */
  ContactNumbers?: ContactNumber[] | undefined;
  /** Sabre CustomerInfo Email
   Override the default email
   If missing it will add the first email in the pax detail */
  Emails?: TicketEmail[] | undefined;

  constructor(data?: ISabrePnrPaxDetailsCustomData) {
    super(data);
    this._discriminator = "SABRE";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      if (Array.isArray(_data["ContactNumbers"])) {
        this.ContactNumbers = [] as any;
        for (let item of _data["ContactNumbers"])
          this.ContactNumbers!.push(ContactNumber.fromJS(item));
      }
      if (Array.isArray(_data["Emails"])) {
        this.Emails = [] as any;
        for (let item of _data["Emails"])
          this.Emails!.push(TicketEmail.fromJS(item));
      }
    }
  }

  static fromJS(data: any): SabrePnrPaxDetailsCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabrePnrPaxDetailsCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.ContactNumbers)) {
      data["ContactNumbers"] = [];
      for (let item of this.ContactNumbers)
        data["ContactNumbers"].push(item.toJSON());
    }
    if (Array.isArray(this.Emails)) {
      data["Emails"] = [];
      for (let item of this.Emails)
        data["Emails"].push(item.toJSON());
    }
    super.toJSON(data);
    return data;
  }
}

export interface ISabrePnrPaxDetailsCustomData extends IPnrPaxDetailsCustomData {
  /** Sabre CustomerInfo ContactNumber
   Override the defaults phones
   If missing it will add the first phone in the list of: in Travel Agency as type "A", in pax detail as type "H", in pax detail Company as type "B" */
  ContactNumbers?: ContactNumber[] | undefined;
  /** Sabre CustomerInfo Email
   Override the default email
   If missing it will add the first email in the pax detail */
  Emails?: TicketEmail[] | undefined;
}

export class ContactNumber implements IContactNumber {
  /** Phone Number */
  Phone?: string | undefined;
  /** Phone type
   <!-- "PhoneUseType" is used to specify the phone type. Values: `A` - agency. `H` - home. `B` - business. `F` - fax. --> */
  PhoneUseType?: string | undefined;
  /** Phone Location Code */
  LocationCode?: string | undefined;

  constructor(data?: IContactNumber) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Phone = _data["Phone"];
      this.PhoneUseType = _data["PhoneUseType"];
      this.LocationCode = _data["LocationCode"];
    }
  }

  static fromJS(data: any): ContactNumber {
    data = typeof data === 'object' ? data : {};
    let result = new ContactNumber();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Phone"] = this.Phone;
    data["PhoneUseType"] = this.PhoneUseType;
    data["LocationCode"] = this.LocationCode;
    return data;
  }
}

export interface IContactNumber {
  /** Phone Number */
  Phone?: string | undefined;
  /** Phone type
   <!-- "PhoneUseType" is used to specify the phone type. Values: `A` - agency. `H` - home. `B` - business. `F` - fax. --> */
  PhoneUseType?: string | undefined;
  /** Phone Location Code */
  LocationCode?: string | undefined;
}

export class TicketEmail implements ITicketEmail {
  /** Email Address */
  Address?: string | undefined;
  /** Email Type
   "Type" is used to specify the type of email address. Acceptable values for "Type" are: `BC` - blind copy. `CC` - carbon copy. `FR` - from. `To` - to. */
  Type?: string | undefined;
  /** "LanguageOverride" is used to override the language in the agency`s Travel Journal Record (TJR). */
  LanguageOverride?: string | undefined;

  constructor(data?: ITicketEmail) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Address = _data["Address"];
      this.Type = _data["Type"];
      this.LanguageOverride = _data["LanguageOverride"];
    }
  }

  static fromJS(data: any): TicketEmail {
    data = typeof data === 'object' ? data : {};
    let result = new TicketEmail();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Address"] = this.Address;
    data["Type"] = this.Type;
    data["LanguageOverride"] = this.LanguageOverride;
    return data;
  }
}

export interface ITicketEmail {
  /** Email Address */
  Address?: string | undefined;
  /** Email Type
   "Type" is used to specify the type of email address. Acceptable values for "Type" are: `BC` - blind copy. `CC` - carbon copy. `FR` - from. `To` - to. */
  Type?: string | undefined;
  /** "LanguageOverride" is used to override the language in the agency`s Travel Journal Record (TJR). */
  LanguageOverride?: string | undefined;
}

export abstract class CustomerCustomDataOfPnrPaxDetails implements ICustomerCustomDataOfPnrPaxDetails {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfPnrPaxDetails) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfPnrPaxDetails";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfPnrPaxDetails {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfPnrPaxDetails' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfPnrPaxDetails {
}

export class PnrTravelCompany extends TravelCompany implements IPnrTravelCompany {
  /** List of ConnectorCustomData */
  ConnectorCustomData?: PnrTravelCompanyCustomData | undefined;

  constructor(data?: IPnrTravelCompany) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? PnrTravelCompanyCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): PnrTravelCompany {
    data = typeof data === 'object' ? data : {};
    let result = new PnrTravelCompany();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IPnrTravelCompany extends ITravelCompany {
  /** List of ConnectorCustomData */
  ConnectorCustomData?: PnrTravelCompanyCustomData | undefined;
}

export abstract class PnrTravelCompanyCustomData implements IPnrTravelCompanyCustomData {

  protected _discriminator: string;

  constructor(data?: IPnrTravelCompanyCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "PnrTravelCompanyCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): PnrTravelCompanyCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "SABRE") {
      let result = new SabrePnrTravelCompanyCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'PnrTravelCompanyCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IPnrTravelCompanyCustomData {
}

export class SabrePnrTravelCompanyCustomData extends PnrTravelCompanyCustomData implements ISabrePnrTravelCompanyCustomData {
  /** QueueNumber equivalent Sabre host command: 7TAW55/ */
  QueueNumber?: string | undefined;
  /** TicketType
   <!-- TicketType only equivalent Sabre host command: 7TAW/ -->
   <!-- TicketType only equivalent Sabre host command: 7T- --> */
  TicketType?: string | undefined;

  constructor(data?: ISabrePnrTravelCompanyCustomData) {
    super(data);
    this._discriminator = "SABRE";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.QueueNumber = _data["QueueNumber"];
      this.TicketType = _data["TicketType"];
    }
  }

  static fromJS(data: any): SabrePnrTravelCompanyCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabrePnrTravelCompanyCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["QueueNumber"] = this.QueueNumber;
    data["TicketType"] = this.TicketType;
    super.toJSON(data);
    return data;
  }
}

export interface ISabrePnrTravelCompanyCustomData extends IPnrTravelCompanyCustomData {
  /** QueueNumber equivalent Sabre host command: 7TAW55/ */
  QueueNumber?: string | undefined;
  /** TicketType
   <!-- TicketType only equivalent Sabre host command: 7TAW/ -->
   <!-- TicketType only equivalent Sabre host command: 7T- --> */
  TicketType?: string | undefined;
}

export abstract class CustomerCustomDataOfPnrTravelCompany implements ICustomerCustomDataOfPnrTravelCompany {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfPnrTravelCompany) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfPnrTravelCompany";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfPnrTravelCompany {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfPnrTravelCompany' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfPnrTravelCompany {
}

export class PnrRemarks implements IPnrRemarks {
  /** Pnr Line Number */
  LineNumber?: string | undefined;
  /** GDS remark Id

   SABRE the Id-rph string */
  Id?: string | undefined;
  /** GDS remark Code */
  Code?: string | undefined;
  /** GDS remark Type */
  Type?: string | undefined;
  /** GDS remark Text */
  Text?: string | undefined;
  /** The Flight Segment Id Reference */
  FlightSegmentRefId?: string | undefined;

  constructor(data?: IPnrRemarks) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.LineNumber = _data["LineNumber"];
      this.Id = _data["Id"];
      this.Code = _data["Code"];
      this.Type = _data["Type"];
      this.Text = _data["Text"];
      this.FlightSegmentRefId = _data["FlightSegmentRefId"];
    }
  }

  static fromJS(data: any): PnrRemarks {
    data = typeof data === 'object' ? data : {};
    let result = new PnrRemarks();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["LineNumber"] = this.LineNumber;
    data["Id"] = this.Id;
    data["Code"] = this.Code;
    data["Type"] = this.Type;
    data["Text"] = this.Text;
    data["FlightSegmentRefId"] = this.FlightSegmentRefId;
    return data;
  }
}

export interface IPnrRemarks {
  /** Pnr Line Number */
  LineNumber?: string | undefined;
  /** GDS remark Id

   SABRE the Id-rph string */
  Id?: string | undefined;
  /** GDS remark Code */
  Code?: string | undefined;
  /** GDS remark Type */
  Type?: string | undefined;
  /** GDS remark Text */
  Text?: string | undefined;
  /** The Flight Segment Id Reference */
  FlightSegmentRefId?: string | undefined;
}

export class PnrOsiSsr implements IPnrOsiSsr {
  /** Pnr Line Number */
  LineNumber?: string | undefined;
  /** GDS OSI/SSR Id

   SABRE the Id-rph string */
  Id?: string | undefined;
  /** GDS OSI/SSR Code */
  Code?: string | undefined;
  /** GDS OSI/SSR Type */
  Type?: string | undefined;
  /** GDS OSI/SSR Text */
  Text?: string | undefined;
  /** The Flight Segment Id Reference */
  FlightSegmentRefId?: string | undefined;
  /** GDS OSI/SSR Airline IataCode if present */
  AirlineIataCode?: string | undefined;
  /** The Pax Detail Id Reference */
  PaxRefId?: string | undefined;

  constructor(data?: IPnrOsiSsr) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.LineNumber = _data["LineNumber"];
      this.Id = _data["Id"];
      this.Code = _data["Code"];
      this.Type = _data["Type"];
      this.Text = _data["Text"];
      this.FlightSegmentRefId = _data["FlightSegmentRefId"];
      this.AirlineIataCode = _data["AirlineIataCode"];
      this.PaxRefId = _data["PaxRefId"];
    }
  }

  static fromJS(data: any): PnrOsiSsr {
    data = typeof data === 'object' ? data : {};
    let result = new PnrOsiSsr();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["LineNumber"] = this.LineNumber;
    data["Id"] = this.Id;
    data["Code"] = this.Code;
    data["Type"] = this.Type;
    data["Text"] = this.Text;
    data["FlightSegmentRefId"] = this.FlightSegmentRefId;
    data["AirlineIataCode"] = this.AirlineIataCode;
    data["PaxRefId"] = this.PaxRefId;
    return data;
  }
}

export interface IPnrOsiSsr {
  /** Pnr Line Number */
  LineNumber?: string | undefined;
  /** GDS OSI/SSR Id

   SABRE the Id-rph string */
  Id?: string | undefined;
  /** GDS OSI/SSR Code */
  Code?: string | undefined;
  /** GDS OSI/SSR Type */
  Type?: string | undefined;
  /** GDS OSI/SSR Text */
  Text?: string | undefined;
  /** The Flight Segment Id Reference */
  FlightSegmentRefId?: string | undefined;
  /** GDS OSI/SSR Airline IataCode if present */
  AirlineIataCode?: string | undefined;
  /** The Pax Detail Id Reference */
  PaxRefId?: string | undefined;
}

export abstract class FlightDetailOutputCustomData implements IFlightDetailOutputCustomData {

  protected _discriminator: string;

  constructor(data?: IFlightDetailOutputCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "FlightDetailOutputCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): FlightDetailOutputCustomData {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'FlightDetailOutputCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IFlightDetailOutputCustomData {
}

export abstract class CustomerCustomDataOfJupiterFlightDetailOutput implements ICustomerCustomDataOfJupiterFlightDetailOutput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterFlightDetailOutput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterFlightDetailOutput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterFlightDetailOutput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterFlightDetailOutput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterFlightDetailOutput {
}

export class JupiterFlightDetailRQ extends BaseRQ implements IJupiterFlightDetailRQ {
  /** JupiterFlightDetailInput Request */
  Request?: JupiterFlightDetailInput | undefined;

  constructor(data?: IJupiterFlightDetailRQ) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Request = _data["Request"] ? JupiterFlightDetailInput.fromJS(_data["Request"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterFlightDetailRQ {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterFlightDetailRQ();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Request"] = this.Request ? this.Request.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterFlightDetailRQ extends IBaseRQ {
  /** JupiterFlightDetailInput Request */
  Request?: JupiterFlightDetailInput | undefined;
}

export class JupiterFlightDetailInput extends BaseInput implements IJupiterFlightDetailInput {
  /** Connector Code */
  ConnectorCode!: EH2HConnectorCode;
  /** Selected Flight Avail from availability
   Select also a FareList and pass only 1 Fare in the SelectedFlightAvail element */
  SelectedFlightAvail?: SingleFlightAvailResult | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: FlightDetailInputCustomData | undefined;

  constructor(data?: IJupiterFlightDetailInput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ConnectorCode = _data["ConnectorCode"];
      this.SelectedFlightAvail = _data["SelectedFlightAvail"] ? SingleFlightAvailResult.fromJS(_data["SelectedFlightAvail"]) : <any>undefined;
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? FlightDetailInputCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterFlightDetailInput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterFlightDetailInput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCode"] = this.ConnectorCode;
    data["SelectedFlightAvail"] = this.SelectedFlightAvail ? this.SelectedFlightAvail.toJSON() : <any>undefined;
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterFlightDetailInput extends IBaseInput {
  /** Connector Code */
  ConnectorCode: EH2HConnectorCode;
  /** Selected Flight Avail from availability
   Select also a FareList and pass only 1 Fare in the SelectedFlightAvail element */
  SelectedFlightAvail?: SingleFlightAvailResult | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: FlightDetailInputCustomData | undefined;
}

export abstract class FlightDetailInputCustomData implements IFlightDetailInputCustomData {

  protected _discriminator: string;

  constructor(data?: IFlightDetailInputCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "FlightDetailInputCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): FlightDetailInputCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "AMADEUS") {
      let result = new AmadeusFlightDetailInputCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'FlightDetailInputCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IFlightDetailInputCustomData {
}

export class AmadeusFlightDetailInputCustomData extends FlightDetailInputCustomData implements IAmadeusFlightDetailInputCustomData {
  /** Amadeus Session if you want to use a Context-full (State) call

   If not specified the FlightAvailability will use a Context-less (Stateless) */
  AmadeusSession?: AmadeusGdsSessionCustomData | undefined;

  constructor(data?: IAmadeusFlightDetailInputCustomData) {
    super(data);
    this._discriminator = "AMADEUS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.AmadeusSession = _data["AmadeusSession"] ? AmadeusGdsSessionCustomData.fromJS(_data["AmadeusSession"]) : <any>undefined;
    }
  }

  static fromJS(data: any): AmadeusFlightDetailInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new AmadeusFlightDetailInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["AmadeusSession"] = this.AmadeusSession ? this.AmadeusSession.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IAmadeusFlightDetailInputCustomData extends IFlightDetailInputCustomData {
  /** Amadeus Session if you want to use a Context-full (State) call

   If not specified the FlightAvailability will use a Context-less (Stateless) */
  AmadeusSession?: AmadeusGdsSessionCustomData | undefined;
}

export abstract class CustomerCustomDataOfJupiterFlightDetailInput implements ICustomerCustomDataOfJupiterFlightDetailInput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterFlightDetailInput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterFlightDetailInput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterFlightDetailInput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterFlightDetailInput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterFlightDetailInput {
}

export class JupiterFlightPnrPriceVerifyRS extends BaseRS implements IJupiterFlightPnrPriceVerifyRS {
  /** JupiterFlightPnrPriceVerifyOutput Response */
  Response?: JupiterFlightPnrPriceVerifyOutput | undefined;

  constructor(data?: IJupiterFlightPnrPriceVerifyRS) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Response = _data["Response"] ? JupiterFlightPnrPriceVerifyOutput.fromJS(_data["Response"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterFlightPnrPriceVerifyRS {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterFlightPnrPriceVerifyRS();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Response"] = this.Response ? this.Response.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterFlightPnrPriceVerifyRS extends IBaseRS {
  /** JupiterFlightPnrPriceVerifyOutput Response */
  Response?: JupiterFlightPnrPriceVerifyOutput | undefined;
}

export class JupiterFlightPnrPriceVerifyOutput extends BaseOutput implements IJupiterFlightPnrPriceVerifyOutput {
  /** Pnr Details */
  Pnr?: FlightPriceVerifyPnr | undefined;
  /** Expected Amount of previous call */
  ExpectedAmount?: CurrencyAmount | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: FlightPnrPriceVerifyOutputCustomData | undefined;

  constructor(data?: IJupiterFlightPnrPriceVerifyOutput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Pnr = _data["Pnr"] ? FlightPriceVerifyPnr.fromJS(_data["Pnr"]) : <any>undefined;
      this.ExpectedAmount = _data["ExpectedAmount"] ? CurrencyAmount.fromJS(_data["ExpectedAmount"]) : <any>undefined;
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? FlightPnrPriceVerifyOutputCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterFlightPnrPriceVerifyOutput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterFlightPnrPriceVerifyOutput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Pnr"] = this.Pnr ? this.Pnr.toJSON() : <any>undefined;
    data["ExpectedAmount"] = this.ExpectedAmount ? this.ExpectedAmount.toJSON() : <any>undefined;
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterFlightPnrPriceVerifyOutput extends IBaseOutput {
  /** Pnr Details */
  Pnr?: FlightPriceVerifyPnr | undefined;
  /** Expected Amount of previous call */
  ExpectedAmount?: CurrencyAmount | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: FlightPnrPriceVerifyOutputCustomData | undefined;
}

export class FlightPriceVerifyPnr extends BaseOperationPnr implements IFlightPriceVerifyPnr {
  /** Connector Custom Data */
  ConnectorCustomData?: FlightPriceVerifyPnrCustomData | undefined;

  constructor(data?: IFlightPriceVerifyPnr) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? FlightPriceVerifyPnrCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): FlightPriceVerifyPnr {
    data = typeof data === 'object' ? data : {};
    let result = new FlightPriceVerifyPnr();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IFlightPriceVerifyPnr extends IBaseOperationPnr {
  /** Connector Custom Data */
  ConnectorCustomData?: FlightPriceVerifyPnrCustomData | undefined;
}

export abstract class FlightPriceVerifyPnrCustomData implements IFlightPriceVerifyPnrCustomData {

  protected _discriminator: string;

  constructor(data?: IFlightPriceVerifyPnrCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "FlightPriceVerifyPnrCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): FlightPriceVerifyPnrCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "AMADEUS") {
      let result = new AmadeusFlightPriceVerifyPnrCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "SABRE") {
      let result = new SabreFlightPriceVerifyPnrCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "TRAVELFUSION") {
      let result = new TravelFusionFlightPnrPriceVerifyCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'FlightPriceVerifyPnrCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IFlightPriceVerifyPnrCustomData {
}

export class AmadeusFlightPriceVerifyPnrCustomData extends FlightPriceVerifyPnrCustomData implements IAmadeusFlightPriceVerifyPnrCustomData {
  /** Sabre Generic PNR Custom Data */
  PnrCustomData?: AmadeusFlightPnrCustomData | undefined;

  constructor(data?: IAmadeusFlightPriceVerifyPnrCustomData) {
    super(data);
    this._discriminator = "AMADEUS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.PnrCustomData = _data["PnrCustomData"] ? AmadeusFlightPnrCustomData.fromJS(_data["PnrCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): AmadeusFlightPriceVerifyPnrCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new AmadeusFlightPriceVerifyPnrCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["PnrCustomData"] = this.PnrCustomData ? this.PnrCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IAmadeusFlightPriceVerifyPnrCustomData extends IFlightPriceVerifyPnrCustomData {
  /** Sabre Generic PNR Custom Data */
  PnrCustomData?: AmadeusFlightPnrCustomData | undefined;
}

export class SabreFlightPriceVerifyPnrCustomData extends FlightPriceVerifyPnrCustomData implements ISabreFlightPriceVerifyPnrCustomData {
  /** Sabre Generic PNR Custom Data */
  PnrCustomData?: SabreFlightPnrCustomData | undefined;

  constructor(data?: ISabreFlightPriceVerifyPnrCustomData) {
    super(data);
    this._discriminator = "SABRE";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.PnrCustomData = _data["PnrCustomData"] ? SabreFlightPnrCustomData.fromJS(_data["PnrCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): SabreFlightPriceVerifyPnrCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreFlightPriceVerifyPnrCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["PnrCustomData"] = this.PnrCustomData ? this.PnrCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface ISabreFlightPriceVerifyPnrCustomData extends IFlightPriceVerifyPnrCustomData {
  /** Sabre Generic PNR Custom Data */
  PnrCustomData?: SabreFlightPnrCustomData | undefined;
}

export class TravelFusionFlightPnrPriceVerifyCustomData extends FlightPriceVerifyPnrCustomData implements ITravelFusionFlightPnrPriceVerifyCustomData {
  PnrCustomData?: TravelFusionFlightPnrCustomData | undefined;

  constructor(data?: ITravelFusionFlightPnrPriceVerifyCustomData) {
    super(data);
    this._discriminator = "TRAVELFUSION";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.PnrCustomData = _data["PnrCustomData"] ? TravelFusionFlightPnrCustomData.fromJS(_data["PnrCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): TravelFusionFlightPnrPriceVerifyCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new TravelFusionFlightPnrPriceVerifyCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["PnrCustomData"] = this.PnrCustomData ? this.PnrCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface ITravelFusionFlightPnrPriceVerifyCustomData extends IFlightPriceVerifyPnrCustomData {
  PnrCustomData?: TravelFusionFlightPnrCustomData | undefined;
}

export abstract class CustomerCustomDataOfFlightPriceVerifyPnr implements ICustomerCustomDataOfFlightPriceVerifyPnr {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfFlightPriceVerifyPnr) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfFlightPriceVerifyPnr";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfFlightPriceVerifyPnr {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfFlightPriceVerifyPnr' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfFlightPriceVerifyPnr {
}

export abstract class FlightPnrPriceVerifyOutputCustomData implements IFlightPnrPriceVerifyOutputCustomData {

  protected _discriminator: string;

  constructor(data?: IFlightPnrPriceVerifyOutputCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "FlightPnrPriceVerifyOutputCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): FlightPnrPriceVerifyOutputCustomData {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'FlightPnrPriceVerifyOutputCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IFlightPnrPriceVerifyOutputCustomData {
}

export abstract class CustomerCustomDataOfJupiterFlightPnrPriceVerifyOutput implements ICustomerCustomDataOfJupiterFlightPnrPriceVerifyOutput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterFlightPnrPriceVerifyOutput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterFlightPnrPriceVerifyOutput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterFlightPnrPriceVerifyOutput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterFlightPnrPriceVerifyOutput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterFlightPnrPriceVerifyOutput {
}

export class JupiterFlightPnrPriceVerifyRQ extends BaseRQ implements IJupiterFlightPnrPriceVerifyRQ {
  /** JupiterFlightPnrPriceVerifyInput Request */
  Request?: JupiterFlightPnrPriceVerifyInput | undefined;

  constructor(data?: IJupiterFlightPnrPriceVerifyRQ) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Request = _data["Request"] ? JupiterFlightPnrPriceVerifyInput.fromJS(_data["Request"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterFlightPnrPriceVerifyRQ {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterFlightPnrPriceVerifyRQ();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Request"] = this.Request ? this.Request.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterFlightPnrPriceVerifyRQ extends IBaseRQ {
  /** JupiterFlightPnrPriceVerifyInput Request */
  Request?: JupiterFlightPnrPriceVerifyInput | undefined;
}

export class JupiterFlightPnrPriceVerifyInput extends BaseInput implements IJupiterFlightPnrPriceVerifyInput {
  /** Pnr Details */
  Pnr!: FlightPriceVerifyPnr;
  /** Expected Amount of previous call */
  ExpectedAmount?: CurrencyAmount | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: FlightPnrPriceVerifyInputCustomData | undefined;

  constructor(data?: IJupiterFlightPnrPriceVerifyInput) {
    super(data);
    if (!data) {
      this.Pnr = new FlightPriceVerifyPnr();
    }
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Pnr = _data["Pnr"] ? FlightPriceVerifyPnr.fromJS(_data["Pnr"]) : new FlightPriceVerifyPnr();
      this.ExpectedAmount = _data["ExpectedAmount"] ? CurrencyAmount.fromJS(_data["ExpectedAmount"]) : <any>undefined;
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? FlightPnrPriceVerifyInputCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterFlightPnrPriceVerifyInput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterFlightPnrPriceVerifyInput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Pnr"] = this.Pnr ? this.Pnr.toJSON() : <any>undefined;
    data["ExpectedAmount"] = this.ExpectedAmount ? this.ExpectedAmount.toJSON() : <any>undefined;
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterFlightPnrPriceVerifyInput extends IBaseInput {
  /** Pnr Details */
  Pnr: FlightPriceVerifyPnr;
  /** Expected Amount of previous call */
  ExpectedAmount?: CurrencyAmount | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: FlightPnrPriceVerifyInputCustomData | undefined;
}

export abstract class FlightPnrPriceVerifyInputCustomData implements IFlightPnrPriceVerifyInputCustomData {

  protected _discriminator: string;

  constructor(data?: IFlightPnrPriceVerifyInputCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "FlightPnrPriceVerifyInputCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): FlightPnrPriceVerifyInputCustomData {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'FlightPnrPriceVerifyInputCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IFlightPnrPriceVerifyInputCustomData {
}

export abstract class CustomerCustomDataOfJupiterFlightPnrPriceVerifyInput implements ICustomerCustomDataOfJupiterFlightPnrPriceVerifyInput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterFlightPnrPriceVerifyInput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterFlightPnrPriceVerifyInput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterFlightPnrPriceVerifyInput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterFlightPnrPriceVerifyInput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterFlightPnrPriceVerifyInput {
}

export class JupiterFlightBookRS extends BaseRS implements IJupiterFlightBookRS {
  /** JupiterFlightBookOutput Response */
  Response?: JupiterFlightBookOutput | undefined;

  constructor(data?: IJupiterFlightBookRS) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Response = _data["Response"] ? JupiterFlightBookOutput.fromJS(_data["Response"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterFlightBookRS {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterFlightBookRS();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Response"] = this.Response ? this.Response.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterFlightBookRS extends IBaseRS {
  /** JupiterFlightBookOutput Response */
  Response?: JupiterFlightBookOutput | undefined;
}

export class JupiterFlightBookOutput extends BaseOutput implements IJupiterFlightBookOutput {
  /** The Booking Status */
  BookingStatus?: EBookingStatus;
  /** Pnr Details */
  Pnr?: FlightBookPnr | undefined;
  /** Expected Amount of previous call */
  ExpectedAmount?: CurrencyAmount | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: FlightBookOutputCustomData | undefined;

  constructor(data?: IJupiterFlightBookOutput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.BookingStatus = _data["BookingStatus"];
      this.Pnr = _data["Pnr"] ? FlightBookPnr.fromJS(_data["Pnr"]) : <any>undefined;
      this.ExpectedAmount = _data["ExpectedAmount"] ? CurrencyAmount.fromJS(_data["ExpectedAmount"]) : <any>undefined;
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? FlightBookOutputCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterFlightBookOutput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterFlightBookOutput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["BookingStatus"] = this.BookingStatus;
    data["Pnr"] = this.Pnr ? this.Pnr.toJSON() : <any>undefined;
    data["ExpectedAmount"] = this.ExpectedAmount ? this.ExpectedAmount.toJSON() : <any>undefined;
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterFlightBookOutput extends IBaseOutput {
  /** The Booking Status */
  BookingStatus?: EBookingStatus;
  /** Pnr Details */
  Pnr?: FlightBookPnr | undefined;
  /** Expected Amount of previous call */
  ExpectedAmount?: CurrencyAmount | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: FlightBookOutputCustomData | undefined;
}

export class FlightBookPnr extends BaseOperationPnr implements IFlightBookPnr {
  /** Connector Custom Data */
  ConnectorCustomData?: FlightBookPnrCustomData | undefined;

  constructor(data?: IFlightBookPnr) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? FlightBookPnrCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): FlightBookPnr {
    data = typeof data === 'object' ? data : {};
    let result = new FlightBookPnr();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IFlightBookPnr extends IBaseOperationPnr {
  /** Connector Custom Data */
  ConnectorCustomData?: FlightBookPnrCustomData | undefined;
}

export abstract class FlightBookPnrCustomData implements IFlightBookPnrCustomData {

  protected _discriminator: string;

  constructor(data?: IFlightBookPnrCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "FlightBookPnrCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): FlightBookPnrCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "AMADEUS") {
      let result = new AmadeusFlightBookPnrCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "SABRE") {
      let result = new SabreFlightBookPnrCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "TRAVELFUSION") {
      let result = new TravelFusionFlightBookPnrCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'FlightBookPnrCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IFlightBookPnrCustomData {
}

export class AmadeusFlightBookPnrCustomData extends FlightBookPnrCustomData implements IAmadeusFlightBookPnrCustomData {
  /** Sabre Generic PNR Custom Data */
  PnrCustomData?: AmadeusFlightPnrCustomData | undefined;

  constructor(data?: IAmadeusFlightBookPnrCustomData) {
    super(data);
    this._discriminator = "AMADEUS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.PnrCustomData = _data["PnrCustomData"] ? AmadeusFlightPnrCustomData.fromJS(_data["PnrCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): AmadeusFlightBookPnrCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new AmadeusFlightBookPnrCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["PnrCustomData"] = this.PnrCustomData ? this.PnrCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IAmadeusFlightBookPnrCustomData extends IFlightBookPnrCustomData {
  /** Sabre Generic PNR Custom Data */
  PnrCustomData?: AmadeusFlightPnrCustomData | undefined;
}

export class SabreFlightBookPnrCustomData extends FlightBookPnrCustomData implements ISabreFlightBookPnrCustomData {
  /** Sabre Generic PNR Custom Data */
  PnrCustomData?: SabreFlightPnrCustomData | undefined;

  constructor(data?: ISabreFlightBookPnrCustomData) {
    super(data);
    this._discriminator = "SABRE";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.PnrCustomData = _data["PnrCustomData"] ? SabreFlightPnrCustomData.fromJS(_data["PnrCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): SabreFlightBookPnrCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreFlightBookPnrCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["PnrCustomData"] = this.PnrCustomData ? this.PnrCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface ISabreFlightBookPnrCustomData extends IFlightBookPnrCustomData {
  /** Sabre Generic PNR Custom Data */
  PnrCustomData?: SabreFlightPnrCustomData | undefined;
}

export class TravelFusionFlightBookPnrCustomData extends FlightBookPnrCustomData implements ITravelFusionFlightBookPnrCustomData {
  PnrCustomData?: TravelFusionFlightPnrCustomData | undefined;

  constructor(data?: ITravelFusionFlightBookPnrCustomData) {
    super(data);
    this._discriminator = "TRAVELFUSION";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.PnrCustomData = _data["PnrCustomData"] ? TravelFusionFlightPnrCustomData.fromJS(_data["PnrCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): TravelFusionFlightBookPnrCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new TravelFusionFlightBookPnrCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["PnrCustomData"] = this.PnrCustomData ? this.PnrCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface ITravelFusionFlightBookPnrCustomData extends IFlightBookPnrCustomData {
  PnrCustomData?: TravelFusionFlightPnrCustomData | undefined;
}

export abstract class CustomerCustomDataOfFlightBookPnr implements ICustomerCustomDataOfFlightBookPnr {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfFlightBookPnr) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfFlightBookPnr";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfFlightBookPnr {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfFlightBookPnr' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfFlightBookPnr {
}

export abstract class FlightBookOutputCustomData implements IFlightBookOutputCustomData {

  protected _discriminator: string;

  constructor(data?: IFlightBookOutputCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "FlightBookOutputCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): FlightBookOutputCustomData {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'FlightBookOutputCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IFlightBookOutputCustomData {
}

export abstract class CustomerCustomDataOfJupiterFlightBookOutput implements ICustomerCustomDataOfJupiterFlightBookOutput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterFlightBookOutput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterFlightBookOutput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterFlightBookOutput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterFlightBookOutput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterFlightBookOutput {
}

export class JupiterFlightBookRQ extends BaseRQ implements IJupiterFlightBookRQ {
  /** JupiterFlightBookInput Request */
  Request?: JupiterFlightBookInput | undefined;

  constructor(data?: IJupiterFlightBookRQ) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Request = _data["Request"] ? JupiterFlightBookInput.fromJS(_data["Request"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterFlightBookRQ {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterFlightBookRQ();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Request"] = this.Request ? this.Request.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterFlightBookRQ extends IBaseRQ {
  /** JupiterFlightBookInput Request */
  Request?: JupiterFlightBookInput | undefined;
}

export class JupiterFlightBookInput extends BaseInput implements IJupiterFlightBookInput {
  /** Pnr Details */
  Pnr!: FlightBookPnr;
  /** Expected Amount of previous call */
  ExpectedAmount?: CurrencyAmount | undefined;
  /** GDS Session - Optional
   If present the system try to get the specified session form Pool, if not it will take a new session form Pool */
  SessionConnectorCustomData?: GdsSessionCustomData | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: FlightBookInputCustomData | undefined;

  constructor(data?: IJupiterFlightBookInput) {
    super(data);
    if (!data) {
      this.Pnr = new FlightBookPnr();
    }
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Pnr = _data["Pnr"] ? FlightBookPnr.fromJS(_data["Pnr"]) : new FlightBookPnr();
      this.ExpectedAmount = _data["ExpectedAmount"] ? CurrencyAmount.fromJS(_data["ExpectedAmount"]) : <any>undefined;
      this.SessionConnectorCustomData = _data["SessionConnectorCustomData"] ? GdsSessionCustomData.fromJS(_data["SessionConnectorCustomData"]) : <any>undefined;
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? FlightBookInputCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterFlightBookInput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterFlightBookInput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Pnr"] = this.Pnr ? this.Pnr.toJSON() : <any>undefined;
    data["ExpectedAmount"] = this.ExpectedAmount ? this.ExpectedAmount.toJSON() : <any>undefined;
    data["SessionConnectorCustomData"] = this.SessionConnectorCustomData ? this.SessionConnectorCustomData.toJSON() : <any>undefined;
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterFlightBookInput extends IBaseInput {
  /** Pnr Details */
  Pnr: FlightBookPnr;
  /** Expected Amount of previous call */
  ExpectedAmount?: CurrencyAmount | undefined;
  /** GDS Session - Optional
   If present the system try to get the specified session form Pool, if not it will take a new session form Pool */
  SessionConnectorCustomData?: GdsSessionCustomData | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: FlightBookInputCustomData | undefined;
}

export abstract class FlightBookInputCustomData implements IFlightBookInputCustomData {

  protected _discriminator: string;

  constructor(data?: IFlightBookInputCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "FlightBookInputCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): FlightBookInputCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "AMADEUS") {
      let result = new AmadeusFlightBookInputCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "SABRE") {
      let result = new SabreFlightBookInputCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'FlightBookInputCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IFlightBookInputCustomData {
}

export class AmadeusFlightBookInputCustomData extends FlightBookInputCustomData implements IAmadeusFlightBookInputCustomData {
  /** Amadeus Session if you want to use a Context-full (State) call

   If not specified the FlightAvailability will use a Context-less (Stateless) */
  AmadeusSession?: AmadeusGdsSessionCustomData | undefined;

  constructor(data?: IAmadeusFlightBookInputCustomData) {
    super(data);
    this._discriminator = "AMADEUS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.AmadeusSession = _data["AmadeusSession"] ? AmadeusGdsSessionCustomData.fromJS(_data["AmadeusSession"]) : <any>undefined;
    }
  }

  static fromJS(data: any): AmadeusFlightBookInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new AmadeusFlightBookInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["AmadeusSession"] = this.AmadeusSession ? this.AmadeusSession.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IAmadeusFlightBookInputCustomData extends IFlightBookInputCustomData {
  /** Amadeus Session if you want to use a Context-full (State) call

   If not specified the FlightAvailability will use a Context-less (Stateless) */
  AmadeusSession?: AmadeusGdsSessionCustomData | undefined;
}

/** Sabre Custom Data */
export class SabreFlightBookInputCustomData extends FlightBookInputCustomData implements ISabreFlightBookInputCustomData {
  /** List of Sabre command Pre Book */
  PreBookCrypticCommands?: string[] | undefined;
  /** List of Sabre command Post Book */
  PostBookCrypticCommands?: string[] | undefined;

  constructor(data?: ISabreFlightBookInputCustomData) {
    super(data);
    this._discriminator = "SABRE";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      if (Array.isArray(_data["PreBookCrypticCommands"])) {
        this.PreBookCrypticCommands = [] as any;
        for (let item of _data["PreBookCrypticCommands"])
          this.PreBookCrypticCommands!.push(item);
      }
      if (Array.isArray(_data["PostBookCrypticCommands"])) {
        this.PostBookCrypticCommands = [] as any;
        for (let item of _data["PostBookCrypticCommands"])
          this.PostBookCrypticCommands!.push(item);
      }
    }
  }

  static fromJS(data: any): SabreFlightBookInputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreFlightBookInputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.PreBookCrypticCommands)) {
      data["PreBookCrypticCommands"] = [];
      for (let item of this.PreBookCrypticCommands)
        data["PreBookCrypticCommands"].push(item);
    }
    if (Array.isArray(this.PostBookCrypticCommands)) {
      data["PostBookCrypticCommands"] = [];
      for (let item of this.PostBookCrypticCommands)
        data["PostBookCrypticCommands"].push(item);
    }
    super.toJSON(data);
    return data;
  }
}

/** Sabre Custom Data */
export interface ISabreFlightBookInputCustomData extends IFlightBookInputCustomData {
  /** List of Sabre command Pre Book */
  PreBookCrypticCommands?: string[] | undefined;
  /** List of Sabre command Post Book */
  PostBookCrypticCommands?: string[] | undefined;
}

export abstract class CustomerCustomDataOfJupiterFlightBookInput implements ICustomerCustomDataOfJupiterFlightBookInput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterFlightBookInput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterFlightBookInput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterFlightBookInput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterFlightBookInput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterFlightBookInput {
}

export class JupiterFlightPnrRetrieveRS extends BaseRS implements IJupiterFlightPnrRetrieveRS {
  /** JupiterPnrRetrieveOutput Response */
  Response?: JupiterFlightPnrRetrieveOutput | undefined;

  constructor(data?: IJupiterFlightPnrRetrieveRS) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Response = _data["Response"] ? JupiterFlightPnrRetrieveOutput.fromJS(_data["Response"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterFlightPnrRetrieveRS {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterFlightPnrRetrieveRS();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Response"] = this.Response ? this.Response.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterFlightPnrRetrieveRS extends IBaseRS {
  /** JupiterPnrRetrieveOutput Response */
  Response?: JupiterFlightPnrRetrieveOutput | undefined;
}

export class JupiterFlightPnrRetrieveOutput extends BaseOutput implements IJupiterFlightPnrRetrieveOutput {
  /** Pnr Details */
  Pnr?: FlightRetrievePnr | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: FlightPnrRetrieveOutputCustomData | undefined;

  constructor(data?: IJupiterFlightPnrRetrieveOutput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Pnr = _data["Pnr"] ? FlightRetrievePnr.fromJS(_data["Pnr"]) : <any>undefined;
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? FlightPnrRetrieveOutputCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterFlightPnrRetrieveOutput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterFlightPnrRetrieveOutput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Pnr"] = this.Pnr ? this.Pnr.toJSON() : <any>undefined;
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterFlightPnrRetrieveOutput extends IBaseOutput {
  /** Pnr Details */
  Pnr?: FlightRetrievePnr | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: FlightPnrRetrieveOutputCustomData | undefined;
}

export class FlightRetrievePnr extends BaseOperationPnr implements IFlightRetrievePnr {
  /** The Booking Status */
  BookingStatus?: EBookingStatus;
  /** Connector Custom Data */
  ConnectorCustomData?: FlightRetrievePnrCustomData | undefined;

  constructor(data?: IFlightRetrievePnr) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.BookingStatus = _data["BookingStatus"];
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? FlightRetrievePnrCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): FlightRetrievePnr {
    data = typeof data === 'object' ? data : {};
    let result = new FlightRetrievePnr();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["BookingStatus"] = this.BookingStatus;
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IFlightRetrievePnr extends IBaseOperationPnr {
  /** The Booking Status */
  BookingStatus?: EBookingStatus;
  /** Connector Custom Data */
  ConnectorCustomData?: FlightRetrievePnrCustomData | undefined;
}

export abstract class FlightRetrievePnrCustomData implements IFlightRetrievePnrCustomData {

  protected _discriminator: string;

  constructor(data?: IFlightRetrievePnrCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "FlightRetrievePnrCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): FlightRetrievePnrCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "AMADEUS") {
      let result = new AmadeusFlightRetrievePnrCustomData();
      result.init(data);
      return result;
    }
    if (data["CustomDataConnectorCode"] === "SABRE") {
      let result = new SabreFlightRetrievePnrCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'FlightRetrievePnrCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IFlightRetrievePnrCustomData {
}

export class AmadeusFlightRetrievePnrCustomData extends FlightRetrievePnrCustomData implements IAmadeusFlightRetrievePnrCustomData {
  /** Sabre Generic PNR Custom Data */
  PnrCustomData?: AmadeusFlightPnrCustomData | undefined;

  constructor(data?: IAmadeusFlightRetrievePnrCustomData) {
    super(data);
    this._discriminator = "AMADEUS";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.PnrCustomData = _data["PnrCustomData"] ? AmadeusFlightPnrCustomData.fromJS(_data["PnrCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): AmadeusFlightRetrievePnrCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new AmadeusFlightRetrievePnrCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["PnrCustomData"] = this.PnrCustomData ? this.PnrCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IAmadeusFlightRetrievePnrCustomData extends IFlightRetrievePnrCustomData {
  /** Sabre Generic PNR Custom Data */
  PnrCustomData?: AmadeusFlightPnrCustomData | undefined;
}

export class SabreFlightRetrievePnrCustomData extends FlightRetrievePnrCustomData implements ISabreFlightRetrievePnrCustomData {
  /** Sabre Generic PNR Custom Data */
  PnrCustomData?: SabreFlightPnrCustomData | undefined;

  constructor(data?: ISabreFlightRetrievePnrCustomData) {
    super(data);
    this._discriminator = "SABRE";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.PnrCustomData = _data["PnrCustomData"] ? SabreFlightPnrCustomData.fromJS(_data["PnrCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): SabreFlightRetrievePnrCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new SabreFlightRetrievePnrCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["PnrCustomData"] = this.PnrCustomData ? this.PnrCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface ISabreFlightRetrievePnrCustomData extends IFlightRetrievePnrCustomData {
  /** Sabre Generic PNR Custom Data */
  PnrCustomData?: SabreFlightPnrCustomData | undefined;
}

export abstract class CustomerCustomDataOfFlightRetrievePnr implements ICustomerCustomDataOfFlightRetrievePnr {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfFlightRetrievePnr) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfFlightRetrievePnr";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfFlightRetrievePnr {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfFlightRetrievePnr' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfFlightRetrievePnr {
}

export abstract class FlightPnrRetrieveOutputCustomData implements IFlightPnrRetrieveOutputCustomData {

  protected _discriminator: string;

  constructor(data?: IFlightPnrRetrieveOutputCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "FlightPnrRetrieveOutputCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): FlightPnrRetrieveOutputCustomData {
    data = typeof data === 'object' ? data : {};
    if (data["CustomDataConnectorCode"] === "TRAVELFUSION") {
      let result = new TravelFusionFlightPnrRetrieveOutputCustomData();
      result.init(data);
      return result;
    }
    throw new Error("The abstract class 'FlightPnrRetrieveOutputCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IFlightPnrRetrieveOutputCustomData {
}

export class TravelFusionFlightPnrRetrieveOutputCustomData extends FlightPnrRetrieveOutputCustomData implements ITravelFusionFlightPnrRetrieveOutputCustomData {
  /** Value is one of: Succeeded, BookingInProgress, Failed, Unconfirmed, UnconfirmedBySupplier. If the status is BookingInProgress, then the customer should repeat the check booking request in a few seconds.
   For any other status, the booking attempt has been completed.
   Unconfirmed indicates that Travelfusion cannot confirm the status of the booking.
   UnconfirmedBySupplier indicates that the supplier could not confirm the status of the booking.
   See the Booking Handling Guide for more details of how to handle these cases.
   */
  Status?: string | undefined;
  /** Value is one of: true, false. If this element is returned, and the value is true, then CheckBooking requests should stop being sent, and the card verification process must be completed before CheckBooking requests can be resumed.
   Please see the Card Verification Handling Guide for more details.
   */
  CardVerificationRequired?: boolean | undefined;
  /** The booking reference number issued by the supplier. The following table shows what will be provided in the SupplierReference element for each possible booking status:
   Status	SupplierReference
   Succeeded	 Supplier's booking reference
   BookingInProgress	 Omitted
   Failed	 SupplierReference tag contains an ecode attribute describing the reason for failure (See the error handling guide for details)
   Unconfirmed	 Omitted
   UnconfirmedBySupplier	 May be omitted, or may contain supplier's reference (occasionally suppliers issue reference numbers but cannot confirm the status of the booking) */
  SupplierReference?: string | undefined;
  /** Contains miscellaneous confirmation data from the supplier. Will be omitted if there is no such data supplied. Contains 1 or more SupplierConfirmationDataItem elements.
   Each data item has a free-text name which describes what the data represents. These names may be one of the following pre-defined values, or they may be any other free text string which will be appropriate for direct display to the end user:
   Data Item name	 Meaning
   Ticket number	 The ticket number as returned by the supplier */
  SupplierConfirmationDataItemList?: { [key: string]: string; } | undefined;
  /** Contains the supplier's own responses. These should be displayed to the end user to enable them to double check the flight details and price.
   This is to avoid liability should any of the supplier's responses be misinterpreted by Travelfusion's automated systems.
   Travelfusion does not accept any liability in such cases since this feature is provided.
   If this element is ever omitted or contains no data, please contact Travelfusion immediately. Contains 0 or more SupplierResponse items.
   */
  SupplierResponseList?: SupplierResponse[] | undefined;
  /** SupplierReference tag contains an ecode attribute describing the reason for failure (See the error handling guide for details)
   */
  SupplierMessage?: string | undefined;
  /** Supplier Info with specific carrier additional information abount booking. For example tickets numbers */
  SupplierInfoList?: SupplierInfo[] | undefined;

  constructor(data?: ITravelFusionFlightPnrRetrieveOutputCustomData) {
    super(data);
    this._discriminator = "TRAVELFUSION";
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Status = _data["Status"];
      this.CardVerificationRequired = _data["CardVerificationRequired"];
      this.SupplierReference = _data["SupplierReference"];
      if (_data["SupplierConfirmationDataItemList"]) {
        this.SupplierConfirmationDataItemList = {} as any;
        for (let key in _data["SupplierConfirmationDataItemList"]) {
          if (_data["SupplierConfirmationDataItemList"].hasOwnProperty(key))
            this.SupplierConfirmationDataItemList![key] = _data["SupplierConfirmationDataItemList"][key];
        }
      }
      if (Array.isArray(_data["SupplierResponseList"])) {
        this.SupplierResponseList = [] as any;
        for (let item of _data["SupplierResponseList"])
          this.SupplierResponseList!.push(SupplierResponse.fromJS(item));
      }
      this.SupplierMessage = _data["SupplierMessage"];
      if (Array.isArray(_data["SupplierInfoList"])) {
        this.SupplierInfoList = [] as any;
        for (let item of _data["SupplierInfoList"])
          this.SupplierInfoList!.push(SupplierInfo.fromJS(item));
      }
    }
  }

  static fromJS(data: any): TravelFusionFlightPnrRetrieveOutputCustomData {
    data = typeof data === 'object' ? data : {};
    let result = new TravelFusionFlightPnrRetrieveOutputCustomData();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Status"] = this.Status;
    data["CardVerificationRequired"] = this.CardVerificationRequired;
    data["SupplierReference"] = this.SupplierReference;
    if (this.SupplierConfirmationDataItemList) {
      data["SupplierConfirmationDataItemList"] = {};
      for (let key in this.SupplierConfirmationDataItemList) {
        if (this.SupplierConfirmationDataItemList.hasOwnProperty(key))
          data["SupplierConfirmationDataItemList"][key] = this.SupplierConfirmationDataItemList[key];
      }
    }
    if (Array.isArray(this.SupplierResponseList)) {
      data["SupplierResponseList"] = [];
      for (let item of this.SupplierResponseList)
        data["SupplierResponseList"].push(item.toJSON());
    }
    data["SupplierMessage"] = this.SupplierMessage;
    if (Array.isArray(this.SupplierInfoList)) {
      data["SupplierInfoList"] = [];
      for (let item of this.SupplierInfoList)
        data["SupplierInfoList"].push(item.toJSON());
    }
    super.toJSON(data);
    return data;
  }
}

export interface ITravelFusionFlightPnrRetrieveOutputCustomData extends IFlightPnrRetrieveOutputCustomData {
  /** Value is one of: Succeeded, BookingInProgress, Failed, Unconfirmed, UnconfirmedBySupplier. If the status is BookingInProgress, then the customer should repeat the check booking request in a few seconds.
   For any other status, the booking attempt has been completed.
   Unconfirmed indicates that Travelfusion cannot confirm the status of the booking.
   UnconfirmedBySupplier indicates that the supplier could not confirm the status of the booking.
   See the Booking Handling Guide for more details of how to handle these cases.
   */
  Status?: string | undefined;
  /** Value is one of: true, false. If this element is returned, and the value is true, then CheckBooking requests should stop being sent, and the card verification process must be completed before CheckBooking requests can be resumed.
   Please see the Card Verification Handling Guide for more details.
   */
  CardVerificationRequired?: boolean | undefined;
  /** The booking reference number issued by the supplier. The following table shows what will be provided in the SupplierReference element for each possible booking status:
   Status	SupplierReference
   Succeeded	 Supplier's booking reference
   BookingInProgress	 Omitted
   Failed	 SupplierReference tag contains an ecode attribute describing the reason for failure (See the error handling guide for details)
   Unconfirmed	 Omitted
   UnconfirmedBySupplier	 May be omitted, or may contain supplier's reference (occasionally suppliers issue reference numbers but cannot confirm the status of the booking) */
  SupplierReference?: string | undefined;
  /** Contains miscellaneous confirmation data from the supplier. Will be omitted if there is no such data supplied. Contains 1 or more SupplierConfirmationDataItem elements.
   Each data item has a free-text name which describes what the data represents. These names may be one of the following pre-defined values, or they may be any other free text string which will be appropriate for direct display to the end user:
   Data Item name	 Meaning
   Ticket number	 The ticket number as returned by the supplier */
  SupplierConfirmationDataItemList?: { [key: string]: string; } | undefined;
  /** Contains the supplier's own responses. These should be displayed to the end user to enable them to double check the flight details and price.
   This is to avoid liability should any of the supplier's responses be misinterpreted by Travelfusion's automated systems.
   Travelfusion does not accept any liability in such cases since this feature is provided.
   If this element is ever omitted or contains no data, please contact Travelfusion immediately. Contains 0 or more SupplierResponse items.
   */
  SupplierResponseList?: SupplierResponse[] | undefined;
  /** SupplierReference tag contains an ecode attribute describing the reason for failure (See the error handling guide for details)
   */
  SupplierMessage?: string | undefined;
  /** Supplier Info with specific carrier additional information abount booking. For example tickets numbers */
  SupplierInfoList?: SupplierInfo[] | undefined;
}

export class SupplierResponse implements ISupplierResponse {
  Name?: string | undefined;
  Type?: string | undefined;
  Data?: string | undefined;

  constructor(data?: ISupplierResponse) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Name = _data["Name"];
      this.Type = _data["Type"];
      this.Data = _data["Data"];
    }
  }

  static fromJS(data: any): SupplierResponse {
    data = typeof data === 'object' ? data : {};
    let result = new SupplierResponse();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Name"] = this.Name;
    data["Type"] = this.Type;
    data["Data"] = this.Data;
    return data;
  }
}

export interface ISupplierResponse {
  Name?: string | undefined;
  Type?: string | undefined;
  Data?: string | undefined;
}

export abstract class CustomerCustomDataOfJupiterFlightPnrRetrieveOutput implements ICustomerCustomDataOfJupiterFlightPnrRetrieveOutput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterFlightPnrRetrieveOutput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterFlightPnrRetrieveOutput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterFlightPnrRetrieveOutput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterFlightPnrRetrieveOutput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterFlightPnrRetrieveOutput {
}

export class JupiterFlightPnrRetrieveRQ extends BaseRQ implements IJupiterFlightPnrRetrieveRQ {
  /** JupiterPnrRetrieveInput Request */
  Request?: JupiterFlightPnrRetrieveInput | undefined;

  constructor(data?: IJupiterFlightPnrRetrieveRQ) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Request = _data["Request"] ? JupiterFlightPnrRetrieveInput.fromJS(_data["Request"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterFlightPnrRetrieveRQ {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterFlightPnrRetrieveRQ();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Request"] = this.Request ? this.Request.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterFlightPnrRetrieveRQ extends IBaseRQ {
  /** JupiterPnrRetrieveInput Request */
  Request?: JupiterFlightPnrRetrieveInput | undefined;
}

export class JupiterFlightPnrRetrieveInput extends BaseInput implements IJupiterFlightPnrRetrieveInput {
  /** Connector Code */
  ConnectorCode!: EH2HConnectorCode;
  /** PNR Number - Optional
   If no session is present it's mandatory */
  PnrNumber?: string | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: FlightPnrRetrieveInputCustomData | undefined;
  /** GDS Session - Optional
   If present the system try to get the specified session form Pool, and retrieve the PNR form the session, if not it will take a new session form Pool and retrieve the PnrNumber */
  SessionConnectorCustomData?: GdsSessionCustomData | undefined;

  constructor(data?: IJupiterFlightPnrRetrieveInput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ConnectorCode = _data["ConnectorCode"];
      this.PnrNumber = _data["PnrNumber"];
      this.ConnectorCustomData = _data["ConnectorCustomData"] ? FlightPnrRetrieveInputCustomData.fromJS(_data["ConnectorCustomData"]) : <any>undefined;
      this.SessionConnectorCustomData = _data["SessionConnectorCustomData"] ? GdsSessionCustomData.fromJS(_data["SessionConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterFlightPnrRetrieveInput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterFlightPnrRetrieveInput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCode"] = this.ConnectorCode;
    data["PnrNumber"] = this.PnrNumber;
    data["ConnectorCustomData"] = this.ConnectorCustomData ? this.ConnectorCustomData.toJSON() : <any>undefined;
    data["SessionConnectorCustomData"] = this.SessionConnectorCustomData ? this.SessionConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterFlightPnrRetrieveInput extends IBaseInput {
  /** Connector Code */
  ConnectorCode: EH2HConnectorCode;
  /** PNR Number - Optional
   If no session is present it's mandatory */
  PnrNumber?: string | undefined;
  /** Connector Custom Data */
  ConnectorCustomData?: FlightPnrRetrieveInputCustomData | undefined;
  /** GDS Session - Optional
   If present the system try to get the specified session form Pool, and retrieve the PNR form the session, if not it will take a new session form Pool and retrieve the PnrNumber */
  SessionConnectorCustomData?: GdsSessionCustomData | undefined;
}

export abstract class FlightPnrRetrieveInputCustomData implements IFlightPnrRetrieveInputCustomData {

  protected _discriminator: string;

  constructor(data?: IFlightPnrRetrieveInputCustomData) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "FlightPnrRetrieveInputCustomData";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): FlightPnrRetrieveInputCustomData {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'FlightPnrRetrieveInputCustomData' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataConnectorCode"] = this._discriminator;
    return data;
  }
}

export interface IFlightPnrRetrieveInputCustomData {
}

export abstract class CustomerCustomDataOfJupiterFlightPnrRetrieveInput implements ICustomerCustomDataOfJupiterFlightPnrRetrieveInput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterFlightPnrRetrieveInput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterFlightPnrRetrieveInput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterFlightPnrRetrieveInput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterFlightPnrRetrieveInput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterFlightPnrRetrieveInput {
}

export class JupiterCrypticRS extends BaseRS implements IJupiterCrypticRS {
  Response?: JupiterCrypticOutput | undefined;

  constructor(data?: IJupiterCrypticRS) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Response = _data["Response"] ? JupiterCrypticOutput.fromJS(_data["Response"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterCrypticRS {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterCrypticRS();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Response"] = this.Response ? this.Response.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterCrypticRS extends IBaseRS {
  Response?: JupiterCrypticOutput | undefined;
}

export abstract class BaseJupiterSessionOutput extends BaseOutput implements IBaseJupiterSessionOutput {
  ConnectorCode?: EH2HConnectorCode;
  SessionConnectorCustomData?: GdsSessionCustomData | undefined;

  constructor(data?: IBaseJupiterSessionOutput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ConnectorCode = _data["ConnectorCode"];
      this.SessionConnectorCustomData = _data["SessionConnectorCustomData"] ? GdsSessionCustomData.fromJS(_data["SessionConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): BaseJupiterSessionOutput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'BaseJupiterSessionOutput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCode"] = this.ConnectorCode;
    data["SessionConnectorCustomData"] = this.SessionConnectorCustomData ? this.SessionConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IBaseJupiterSessionOutput extends IBaseOutput {
  ConnectorCode?: EH2HConnectorCode;
  SessionConnectorCustomData?: GdsSessionCustomData | undefined;
}

export class JupiterCrypticOutput extends BaseJupiterSessionOutput implements IJupiterCrypticOutput {
  CrypticResponse?: string | undefined;

  constructor(data?: IJupiterCrypticOutput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.CrypticResponse = _data["CrypticResponse"];
    }
  }

  static fromJS(data: any): JupiterCrypticOutput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterCrypticOutput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CrypticResponse"] = this.CrypticResponse;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterCrypticOutput extends IBaseJupiterSessionOutput {
  CrypticResponse?: string | undefined;
}

export abstract class CustomerCustomDataOfJupiterCrypticOutput implements ICustomerCustomDataOfJupiterCrypticOutput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterCrypticOutput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterCrypticOutput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterCrypticOutput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterCrypticOutput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterCrypticOutput {
}

export class JupiterCrypticRQ extends BaseRQ implements IJupiterCrypticRQ {
  Request?: JupiterCrypticInput | undefined;

  constructor(data?: IJupiterCrypticRQ) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Request = _data["Request"] ? JupiterCrypticInput.fromJS(_data["Request"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterCrypticRQ {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterCrypticRQ();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Request"] = this.Request ? this.Request.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterCrypticRQ extends IBaseRQ {
  Request?: JupiterCrypticInput | undefined;
}

export abstract class BaseJupiterSessionInput extends BaseInput implements IBaseJupiterSessionInput {
  ConnectorCode?: EH2HConnectorCode;
  /** GDS Session - Optional
   If present the system try to get the specified session form Pool, if not it will take a new session form Pool */
  SessionConnectorCustomData?: GdsSessionCustomData | undefined;

  constructor(data?: IBaseJupiterSessionInput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.ConnectorCode = _data["ConnectorCode"];
      this.SessionConnectorCustomData = _data["SessionConnectorCustomData"] ? GdsSessionCustomData.fromJS(_data["SessionConnectorCustomData"]) : <any>undefined;
    }
  }

  static fromJS(data: any): BaseJupiterSessionInput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'BaseJupiterSessionInput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCode"] = this.ConnectorCode;
    data["SessionConnectorCustomData"] = this.SessionConnectorCustomData ? this.SessionConnectorCustomData.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IBaseJupiterSessionInput extends IBaseInput {
  ConnectorCode?: EH2HConnectorCode;
  /** GDS Session - Optional
   If present the system try to get the specified session form Pool, if not it will take a new session form Pool */
  SessionConnectorCustomData?: GdsSessionCustomData | undefined;
}

export class JupiterCrypticInput extends BaseJupiterSessionInput implements IJupiterCrypticInput {
  CrypticRequest?: string | undefined;

  constructor(data?: IJupiterCrypticInput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.CrypticRequest = _data["CrypticRequest"];
    }
  }

  static fromJS(data: any): JupiterCrypticInput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterCrypticInput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CrypticRequest"] = this.CrypticRequest;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterCrypticInput extends IBaseJupiterSessionInput {
  CrypticRequest?: string | undefined;
}

export abstract class CustomerCustomDataOfJupiterCrypticInput implements ICustomerCustomDataOfJupiterCrypticInput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterCrypticInput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterCrypticInput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterCrypticInput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterCrypticInput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterCrypticInput {
}

export class JupiterSessionCreateRS extends BaseRS implements IJupiterSessionCreateRS {
  Response?: JupiterSessionCreateOutput | undefined;

  constructor(data?: IJupiterSessionCreateRS) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Response = _data["Response"] ? JupiterSessionCreateOutput.fromJS(_data["Response"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterSessionCreateRS {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterSessionCreateRS();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Response"] = this.Response ? this.Response.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterSessionCreateRS extends IBaseRS {
  Response?: JupiterSessionCreateOutput | undefined;
}

export class JupiterSessionCreateOutput extends BaseJupiterSessionOutput implements IJupiterSessionCreateOutput {

  constructor(data?: IJupiterSessionCreateOutput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
  }

  static fromJS(data: any): JupiterSessionCreateOutput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterSessionCreateOutput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterSessionCreateOutput extends IBaseJupiterSessionOutput {
}

export abstract class CustomerCustomDataOfJupiterSessionCreateOutput implements ICustomerCustomDataOfJupiterSessionCreateOutput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterSessionCreateOutput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterSessionCreateOutput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterSessionCreateOutput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterSessionCreateOutput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterSessionCreateOutput {
}

export class JupiterSessionCreateRQ extends BaseRQ implements IJupiterSessionCreateRQ {
  Request?: JupiterSessionCreateInput | undefined;

  constructor(data?: IJupiterSessionCreateRQ) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Request = _data["Request"] ? JupiterSessionCreateInput.fromJS(_data["Request"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterSessionCreateRQ {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterSessionCreateRQ();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Request"] = this.Request ? this.Request.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterSessionCreateRQ extends IBaseRQ {
  Request?: JupiterSessionCreateInput | undefined;
}

export class JupiterSessionCreateInput extends BaseJupiterSessionInput implements IJupiterSessionCreateInput {

  constructor(data?: IJupiterSessionCreateInput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
  }

  static fromJS(data: any): JupiterSessionCreateInput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterSessionCreateInput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterSessionCreateInput extends IBaseJupiterSessionInput {
}

export abstract class CustomerCustomDataOfJupiterSessionCreateInput implements ICustomerCustomDataOfJupiterSessionCreateInput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterSessionCreateInput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterSessionCreateInput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterSessionCreateInput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterSessionCreateInput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterSessionCreateInput {
}

export class JupiterSessionCloseRS extends BaseRS implements IJupiterSessionCloseRS {
  Response?: JupiterSessionCloseOutput | undefined;

  constructor(data?: IJupiterSessionCloseRS) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Response = _data["Response"] ? JupiterSessionCloseOutput.fromJS(_data["Response"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterSessionCloseRS {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterSessionCloseRS();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Response"] = this.Response ? this.Response.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterSessionCloseRS extends IBaseRS {
  Response?: JupiterSessionCloseOutput | undefined;
}

export class JupiterSessionCloseOutput extends BaseJupiterSessionOutput implements IJupiterSessionCloseOutput {

  constructor(data?: IJupiterSessionCloseOutput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
  }

  static fromJS(data: any): JupiterSessionCloseOutput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterSessionCloseOutput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterSessionCloseOutput extends IBaseJupiterSessionOutput {
}

export abstract class CustomerCustomDataOfJupiterSessionCloseOutput implements ICustomerCustomDataOfJupiterSessionCloseOutput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterSessionCloseOutput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterSessionCloseOutput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterSessionCloseOutput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterSessionCloseOutput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterSessionCloseOutput {
}

export class JupiterSessionCloseRQ extends BaseRQ implements IJupiterSessionCloseRQ {
  Request?: JupiterSessionCloseInput | undefined;

  constructor(data?: IJupiterSessionCloseRQ) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Request = _data["Request"] ? JupiterSessionCloseInput.fromJS(_data["Request"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterSessionCloseRQ {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterSessionCloseRQ();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Request"] = this.Request ? this.Request.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterSessionCloseRQ extends IBaseRQ {
  Request?: JupiterSessionCloseInput | undefined;
}

export class JupiterSessionCloseInput extends BaseJupiterSessionInput implements IJupiterSessionCloseInput {

  constructor(data?: IJupiterSessionCloseInput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
  }

  static fromJS(data: any): JupiterSessionCloseInput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterSessionCloseInput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterSessionCloseInput extends IBaseJupiterSessionInput {
}

export abstract class CustomerCustomDataOfJupiterSessionCloseInput implements ICustomerCustomDataOfJupiterSessionCloseInput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterSessionCloseInput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterSessionCloseInput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterSessionCloseInput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterSessionCloseInput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterSessionCloseInput {
}

export class JupiterSessionRefreshRS extends BaseRS implements IJupiterSessionRefreshRS {
  Response?: JupiterSessionRefreshOutput | undefined;

  constructor(data?: IJupiterSessionRefreshRS) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Response = _data["Response"] ? JupiterSessionRefreshOutput.fromJS(_data["Response"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterSessionRefreshRS {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterSessionRefreshRS();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Response"] = this.Response ? this.Response.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterSessionRefreshRS extends IBaseRS {
  Response?: JupiterSessionRefreshOutput | undefined;
}

export class JupiterSessionRefreshOutput extends BaseJupiterSessionOutput implements IJupiterSessionRefreshOutput {

  constructor(data?: IJupiterSessionRefreshOutput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
  }

  static fromJS(data: any): JupiterSessionRefreshOutput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterSessionRefreshOutput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterSessionRefreshOutput extends IBaseJupiterSessionOutput {
}

export abstract class CustomerCustomDataOfJupiterSessionRefreshOutput implements ICustomerCustomDataOfJupiterSessionRefreshOutput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterSessionRefreshOutput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterSessionRefreshOutput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterSessionRefreshOutput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterSessionRefreshOutput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterSessionRefreshOutput {
}

export class JupiterSessionRefreshRQ extends BaseRQ implements IJupiterSessionRefreshRQ {
  Request?: JupiterSessionRefreshInput | undefined;

  constructor(data?: IJupiterSessionRefreshRQ) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Request = _data["Request"] ? JupiterSessionRefreshInput.fromJS(_data["Request"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterSessionRefreshRQ {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterSessionRefreshRQ();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Request"] = this.Request ? this.Request.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterSessionRefreshRQ extends IBaseRQ {
  Request?: JupiterSessionRefreshInput | undefined;
}

export class JupiterSessionRefreshInput extends BaseJupiterSessionInput implements IJupiterSessionRefreshInput {

  constructor(data?: IJupiterSessionRefreshInput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
  }

  static fromJS(data: any): JupiterSessionRefreshInput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterSessionRefreshInput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterSessionRefreshInput extends IBaseJupiterSessionInput {
}

export abstract class CustomerCustomDataOfJupiterSessionRefreshInput implements ICustomerCustomDataOfJupiterSessionRefreshInput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterSessionRefreshInput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterSessionRefreshInput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterSessionRefreshInput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterSessionRefreshInput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterSessionRefreshInput {
}

export class JupiterSessionTokenCreateRS extends BaseRS implements IJupiterSessionTokenCreateRS {
  Response?: JupiterSessionTokenCreateOutput | undefined;

  constructor(data?: IJupiterSessionTokenCreateRS) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Response = _data["Response"] ? JupiterSessionTokenCreateOutput.fromJS(_data["Response"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterSessionTokenCreateRS {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterSessionTokenCreateRS();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Response"] = this.Response ? this.Response.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterSessionTokenCreateRS extends IBaseRS {
  Response?: JupiterSessionTokenCreateOutput | undefined;
}

export class JupiterSessionTokenCreateOutput extends BaseJupiterSessionOutput implements IJupiterSessionTokenCreateOutput {

  constructor(data?: IJupiterSessionTokenCreateOutput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
  }

  static fromJS(data: any): JupiterSessionTokenCreateOutput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterSessionTokenCreateOutput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterSessionTokenCreateOutput extends IBaseJupiterSessionOutput {
}

export abstract class CustomerCustomDataOfJupiterSessionTokenCreateOutput implements ICustomerCustomDataOfJupiterSessionTokenCreateOutput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterSessionTokenCreateOutput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterSessionTokenCreateOutput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterSessionTokenCreateOutput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterSessionTokenCreateOutput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterSessionTokenCreateOutput {
}

export class JupiterSessionTokenCreateRQ extends BaseRQ implements IJupiterSessionTokenCreateRQ {
  Request?: JupiterSessionTokenCreateInput | undefined;

  constructor(data?: IJupiterSessionTokenCreateRQ) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Request = _data["Request"] ? JupiterSessionTokenCreateInput.fromJS(_data["Request"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterSessionTokenCreateRQ {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterSessionTokenCreateRQ();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Request"] = this.Request ? this.Request.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterSessionTokenCreateRQ extends IBaseRQ {
  Request?: JupiterSessionTokenCreateInput | undefined;
}

export class JupiterSessionTokenCreateInput extends BaseJupiterSessionInput implements IJupiterSessionTokenCreateInput {

  constructor(data?: IJupiterSessionTokenCreateInput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
  }

  static fromJS(data: any): JupiterSessionTokenCreateInput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterSessionTokenCreateInput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterSessionTokenCreateInput extends IBaseJupiterSessionInput {
}

export abstract class CustomerCustomDataOfJupiterSessionTokenCreateInput implements ICustomerCustomDataOfJupiterSessionTokenCreateInput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterSessionTokenCreateInput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterSessionTokenCreateInput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterSessionTokenCreateInput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterSessionTokenCreateInput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterSessionTokenCreateInput {
}

export class JupiterIgnoreTransactionRS extends BaseRS implements IJupiterIgnoreTransactionRS {
  Response?: JupiterIgnoreTransactionOutput | undefined;

  constructor(data?: IJupiterIgnoreTransactionRS) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Response = _data["Response"] ? JupiterIgnoreTransactionOutput.fromJS(_data["Response"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterIgnoreTransactionRS {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterIgnoreTransactionRS();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Response"] = this.Response ? this.Response.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterIgnoreTransactionRS extends IBaseRS {
  Response?: JupiterIgnoreTransactionOutput | undefined;
}

export class JupiterIgnoreTransactionOutput extends BaseJupiterSessionOutput implements IJupiterIgnoreTransactionOutput {

  constructor(data?: IJupiterIgnoreTransactionOutput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
  }

  static fromJS(data: any): JupiterIgnoreTransactionOutput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterIgnoreTransactionOutput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterIgnoreTransactionOutput extends IBaseJupiterSessionOutput {
}

export abstract class CustomerCustomDataOfJupiterIgnoreTransactionOutput implements ICustomerCustomDataOfJupiterIgnoreTransactionOutput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterIgnoreTransactionOutput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterIgnoreTransactionOutput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterIgnoreTransactionOutput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterIgnoreTransactionOutput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterIgnoreTransactionOutput {
}

export class JupiterIgnoreTransactionRQ extends BaseRQ implements IJupiterIgnoreTransactionRQ {
  Request?: JupiterIgnoreTransactionInput | undefined;

  constructor(data?: IJupiterIgnoreTransactionRQ) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Request = _data["Request"] ? JupiterIgnoreTransactionInput.fromJS(_data["Request"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterIgnoreTransactionRQ {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterIgnoreTransactionRQ();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Request"] = this.Request ? this.Request.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterIgnoreTransactionRQ extends IBaseRQ {
  Request?: JupiterIgnoreTransactionInput | undefined;
}

export class JupiterIgnoreTransactionInput extends BaseJupiterSessionInput implements IJupiterIgnoreTransactionInput {

  constructor(data?: IJupiterIgnoreTransactionInput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
  }

  static fromJS(data: any): JupiterIgnoreTransactionInput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterIgnoreTransactionInput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterIgnoreTransactionInput extends IBaseJupiterSessionInput {
}

export abstract class CustomerCustomDataOfJupiterIgnoreTransactionInput implements ICustomerCustomDataOfJupiterIgnoreTransactionInput {

  protected _discriminator: string;

  constructor(data?: ICustomerCustomDataOfJupiterIgnoreTransactionInput) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
    this._discriminator = "CustomerCustomDataOfJupiterIgnoreTransactionInput";
  }

  init(_data?: any) {
  }

  static fromJS(data: any): CustomerCustomDataOfJupiterIgnoreTransactionInput {
    data = typeof data === 'object' ? data : {};
    throw new Error("The abstract class 'CustomerCustomDataOfJupiterIgnoreTransactionInput' cannot be instantiated.");
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CustomDataCode"] = this._discriminator;
    return data;
  }
}

export interface ICustomerCustomDataOfJupiterIgnoreTransactionInput {
}

export class JupiterConnectorCustomRSOfEncodeDecodeOutput extends BaseRS implements IJupiterConnectorCustomRSOfEncodeDecodeOutput {
  Response?: EncodeDecodeOutput | undefined;

  constructor(data?: IJupiterConnectorCustomRSOfEncodeDecodeOutput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Response = _data["Response"] ? EncodeDecodeOutput.fromJS(_data["Response"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterConnectorCustomRSOfEncodeDecodeOutput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterConnectorCustomRSOfEncodeDecodeOutput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Response"] = this.Response ? this.Response.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterConnectorCustomRSOfEncodeDecodeOutput extends IBaseRS {
  Response?: EncodeDecodeOutput | undefined;
}

export class EncodeDecodeOutput extends BaseOutput implements IEncodeDecodeOutput {
  EncodeDecodeType?: EEncodeDecodeType;
  DecodeRqValue?: string | undefined;
  DecodeRsValue?: string | undefined;

  constructor(data?: IEncodeDecodeOutput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.EncodeDecodeType = _data["EncodeDecodeType"];
      this.DecodeRqValue = _data["DecodeRqValue"];
      this.DecodeRsValue = _data["DecodeRsValue"];
    }
  }

  static fromJS(data: any): EncodeDecodeOutput {
    data = typeof data === 'object' ? data : {};
    let result = new EncodeDecodeOutput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["EncodeDecodeType"] = this.EncodeDecodeType;
    data["DecodeRqValue"] = this.DecodeRqValue;
    data["DecodeRsValue"] = this.DecodeRsValue;
    super.toJSON(data);
    return data;
  }
}

export interface IEncodeDecodeOutput extends IBaseOutput {
  EncodeDecodeType?: EEncodeDecodeType;
  DecodeRqValue?: string | undefined;
  DecodeRsValue?: string | undefined;
}

export enum EEncodeDecodeType {
  DECODE_IATA_AIRPORT = "DECODE_IATA_AIRPORT",
  DECODE_IATA_CARRIER = "DECODE_IATA_CARRIER",
  DECODE_EQUIPMENT = "DECODE_EQUIPMENT",
}

export class JupiterConnectorCustomRQOfEncodeDecodeInput extends BaseRQ implements IJupiterConnectorCustomRQOfEncodeDecodeInput {
  Request?: EncodeDecodeInput | undefined;

  constructor(data?: IJupiterConnectorCustomRQOfEncodeDecodeInput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Request = _data["Request"] ? EncodeDecodeInput.fromJS(_data["Request"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterConnectorCustomRQOfEncodeDecodeInput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterConnectorCustomRQOfEncodeDecodeInput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Request"] = this.Request ? this.Request.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterConnectorCustomRQOfEncodeDecodeInput extends IBaseRQ {
  Request?: EncodeDecodeInput | undefined;
}

export class EncodeDecodeInput extends BaseInput implements IEncodeDecodeInput {
  EncodeDecodeType?: EEncodeDecodeType;
  DecodeRqValue?: string | undefined;

  constructor(data?: IEncodeDecodeInput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.EncodeDecodeType = _data["EncodeDecodeType"];
      this.DecodeRqValue = _data["DecodeRqValue"];
    }
  }

  static fromJS(data: any): EncodeDecodeInput {
    data = typeof data === 'object' ? data : {};
    let result = new EncodeDecodeInput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["EncodeDecodeType"] = this.EncodeDecodeType;
    data["DecodeRqValue"] = this.DecodeRqValue;
    super.toJSON(data);
    return data;
  }
}

export interface IEncodeDecodeInput extends IBaseInput {
  EncodeDecodeType?: EEncodeDecodeType;
  DecodeRqValue?: string | undefined;
}

export class JupiterConnectorCustomRSOfChangePccOutput extends BaseRS implements IJupiterConnectorCustomRSOfChangePccOutput {
  Response?: ChangePccOutput | undefined;

  constructor(data?: IJupiterConnectorCustomRSOfChangePccOutput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Response = _data["Response"] ? ChangePccOutput.fromJS(_data["Response"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterConnectorCustomRSOfChangePccOutput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterConnectorCustomRSOfChangePccOutput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Response"] = this.Response ? this.Response.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterConnectorCustomRSOfChangePccOutput extends IBaseRS {
  Response?: ChangePccOutput | undefined;
}

export class ChangePccOutput extends BaseOutput implements IChangePccOutput {

  constructor(data?: IChangePccOutput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
  }

  static fromJS(data: any): ChangePccOutput {
    data = typeof data === 'object' ? data : {};
    let result = new ChangePccOutput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    super.toJSON(data);
    return data;
  }
}

export interface IChangePccOutput extends IBaseOutput {
}

export class JupiterConnectorCustomRQOfChangePccInput extends BaseRQ implements IJupiterConnectorCustomRQOfChangePccInput {
  Request?: ChangePccInput | undefined;

  constructor(data?: IJupiterConnectorCustomRQOfChangePccInput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Request = _data["Request"] ? ChangePccInput.fromJS(_data["Request"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterConnectorCustomRQOfChangePccInput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterConnectorCustomRQOfChangePccInput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Request"] = this.Request ? this.Request.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterConnectorCustomRQOfChangePccInput extends IBaseRQ {
  Request?: ChangePccInput | undefined;
}

export class ChangePccInput extends BaseInput implements IChangePccInput {
  DestinationPcc?: string | undefined;
  DestinationQueue?: string | undefined;
  Pnr?: string | undefined;

  constructor(data?: IChangePccInput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.DestinationPcc = _data["DestinationPcc"];
      this.DestinationQueue = _data["DestinationQueue"];
      this.Pnr = _data["Pnr"];
    }
  }

  static fromJS(data: any): ChangePccInput {
    data = typeof data === 'object' ? data : {};
    let result = new ChangePccInput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["DestinationPcc"] = this.DestinationPcc;
    data["DestinationQueue"] = this.DestinationQueue;
    data["Pnr"] = this.Pnr;
    super.toJSON(data);
    return data;
  }
}

export interface IChangePccInput extends IBaseInput {
  DestinationPcc?: string | undefined;
  DestinationQueue?: string | undefined;
  Pnr?: string | undefined;
}

export class JupiterConnectorCustomRSOfDeletePnrOutput extends BaseRS implements IJupiterConnectorCustomRSOfDeletePnrOutput {
  Response?: DeletePnrOutput | undefined;

  constructor(data?: IJupiterConnectorCustomRSOfDeletePnrOutput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Response = _data["Response"] ? DeletePnrOutput.fromJS(_data["Response"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterConnectorCustomRSOfDeletePnrOutput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterConnectorCustomRSOfDeletePnrOutput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Response"] = this.Response ? this.Response.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterConnectorCustomRSOfDeletePnrOutput extends IBaseRS {
  Response?: DeletePnrOutput | undefined;
}

export class DeletePnrOutput extends BaseOutput implements IDeletePnrOutput {

  constructor(data?: IDeletePnrOutput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
  }

  static fromJS(data: any): DeletePnrOutput {
    data = typeof data === 'object' ? data : {};
    let result = new DeletePnrOutput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    super.toJSON(data);
    return data;
  }
}

export interface IDeletePnrOutput extends IBaseOutput {
}

export class JupiterConnectorCustomRQOfDeletePnrInput extends BaseRQ implements IJupiterConnectorCustomRQOfDeletePnrInput {
  Request?: DeletePnrInput | undefined;

  constructor(data?: IJupiterConnectorCustomRQOfDeletePnrInput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Request = _data["Request"] ? DeletePnrInput.fromJS(_data["Request"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterConnectorCustomRQOfDeletePnrInput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterConnectorCustomRQOfDeletePnrInput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Request"] = this.Request ? this.Request.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterConnectorCustomRQOfDeletePnrInput extends IBaseRQ {
  Request?: DeletePnrInput | undefined;
}

export class DeletePnrInput extends BaseInput implements IDeletePnrInput {
  Pnr?: string | undefined;

  constructor(data?: IDeletePnrInput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Pnr = _data["Pnr"];
    }
  }

  static fromJS(data: any): DeletePnrInput {
    data = typeof data === 'object' ? data : {};
    let result = new DeletePnrInput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Pnr"] = this.Pnr;
    super.toJSON(data);
    return data;
  }
}

export interface IDeletePnrInput extends IBaseInput {
  Pnr?: string | undefined;
}

export class JupiterPingRS extends BaseRS implements IJupiterPingRS {
  /** JupiterPingOutput Response */
  Response?: JupiterPingOutput | undefined;

  constructor(data?: IJupiterPingRS) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Response = _data["Response"] ? JupiterPingOutput.fromJS(_data["Response"]) : <any>undefined;
    }
  }

  static fromJS(data: any): JupiterPingRS {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterPingRS();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Response"] = this.Response ? this.Response.toJSON() : <any>undefined;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterPingRS extends IBaseRS {
  /** JupiterPingOutput Response */
  Response?: JupiterPingOutput | undefined;
}

export class JupiterPingOutput extends BaseOutput implements IJupiterPingOutput {
  /** Ping Message Response */
  Message?: string | undefined;

  constructor(data?: IJupiterPingOutput) {
    super(data);
  }

  init(_data?: any) {
    super.init(_data);
    if (_data) {
      this.Message = _data["Message"];
    }
  }

  static fromJS(data: any): JupiterPingOutput {
    data = typeof data === 'object' ? data : {};
    let result = new JupiterPingOutput();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Message"] = this.Message;
    super.toJSON(data);
    return data;
  }
}

export interface IJupiterPingOutput extends IBaseOutput {
  /** Ping Message Response */
  Message?: string | undefined;
}

/** Jupiter App Settings */
export class AppSettings implements IAppSettings {
  /** Api Name
   Used in dashboard to show the name, used in logs as index for elastic and other  */
  ApiName?: string | undefined;
  /** Not set this in AppSettings will be rewrite form the startup with the HostingWnvironment */
  HostingEnvironment?: string | undefined;
  /** Default Api Version Used by ApiVersioning Controller */
  DefaultApiVersion?: string | undefined;
  /** Get the Nuget Package Version */
  NugetPackageVersion?: string | undefined;
  /** Published Api Versions */
  PublishedApiVersions?: string[] | undefined;
  /** Enable the Dashboard Single Page Application as Served by the .netCore App */
  EnableDashboardSPA?: boolean;
  /** Enable the Https redirect */
  EnableHTTPSRedirect?: boolean;
  /** DB Connection Settings */
  DbConnectionSettings?: DbConnectionSettings | undefined;
  /** CORS Settings */
  CORSSettings?: CORSSettings | undefined;
  /** JWT Token Settings */
  JwtSettings?: JwtSettings | undefined;
  /** Api Rate Limit Settings */
  ApiRateLimitSettings?: ApiRateLimitSettings | undefined;
  /** Logs Settings */
  LogSettings?: LogSettings | undefined;
  /** ElasticSearch Settings */
  ElasticSearchSettings?: ElasticSearchSettings | undefined;
  /** Connectors Settings */
  Connectors?: AllConnectorsSettings | undefined;
  /** Cache Settings */
  CacheSettings?: CacheSettings | undefined;
  /** Remote Vault for AppSettings Settings */
  RemoteVaultSettings?: RemoteVaultSettings | undefined;
  /** CloudStorage Disk Settings
   Used by  */
  CloudStorageDiskSettings?: CloudStorageDiskSettings | undefined;

  constructor(data?: IAppSettings) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.ApiName = _data["ApiName"];
      this.HostingEnvironment = _data["HostingEnvironment"];
      this.DefaultApiVersion = _data["DefaultApiVersion"];
      this.NugetPackageVersion = _data["NugetPackageVersion"];
      if (Array.isArray(_data["PublishedApiVersions"])) {
        this.PublishedApiVersions = [] as any;
        for (let item of _data["PublishedApiVersions"])
          this.PublishedApiVersions!.push(item);
      }
      this.EnableDashboardSPA = _data["EnableDashboardSPA"];
      this.EnableHTTPSRedirect = _data["EnableHTTPSRedirect"];
      this.DbConnectionSettings = _data["DbConnectionSettings"] ? DbConnectionSettings.fromJS(_data["DbConnectionSettings"]) : <any>undefined;
      this.CORSSettings = _data["CORSSettings"] ? CORSSettings.fromJS(_data["CORSSettings"]) : <any>undefined;
      this.JwtSettings = _data["JwtSettings"] ? JwtSettings.fromJS(_data["JwtSettings"]) : <any>undefined;
      this.ApiRateLimitSettings = _data["ApiRateLimitSettings"] ? ApiRateLimitSettings.fromJS(_data["ApiRateLimitSettings"]) : <any>undefined;
      this.LogSettings = _data["LogSettings"] ? LogSettings.fromJS(_data["LogSettings"]) : <any>undefined;
      this.ElasticSearchSettings = _data["ElasticSearchSettings"] ? ElasticSearchSettings.fromJS(_data["ElasticSearchSettings"]) : <any>undefined;
      this.Connectors = _data["Connectors"] ? AllConnectorsSettings.fromJS(_data["Connectors"]) : <any>undefined;
      this.CacheSettings = _data["CacheSettings"] ? CacheSettings.fromJS(_data["CacheSettings"]) : <any>undefined;
      this.RemoteVaultSettings = _data["RemoteVaultSettings"] ? RemoteVaultSettings.fromJS(_data["RemoteVaultSettings"]) : <any>undefined;
      this.CloudStorageDiskSettings = _data["CloudStorageDiskSettings"] ? CloudStorageDiskSettings.fromJS(_data["CloudStorageDiskSettings"]) : <any>undefined;
    }
  }

  static fromJS(data: any): AppSettings {
    data = typeof data === 'object' ? data : {};
    let result = new AppSettings();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ApiName"] = this.ApiName;
    data["HostingEnvironment"] = this.HostingEnvironment;
    data["DefaultApiVersion"] = this.DefaultApiVersion;
    data["NugetPackageVersion"] = this.NugetPackageVersion;
    if (Array.isArray(this.PublishedApiVersions)) {
      data["PublishedApiVersions"] = [];
      for (let item of this.PublishedApiVersions)
        data["PublishedApiVersions"].push(item);
    }
    data["EnableDashboardSPA"] = this.EnableDashboardSPA;
    data["EnableHTTPSRedirect"] = this.EnableHTTPSRedirect;
    data["DbConnectionSettings"] = this.DbConnectionSettings ? this.DbConnectionSettings.toJSON() : <any>undefined;
    data["CORSSettings"] = this.CORSSettings ? this.CORSSettings.toJSON() : <any>undefined;
    data["JwtSettings"] = this.JwtSettings ? this.JwtSettings.toJSON() : <any>undefined;
    data["ApiRateLimitSettings"] = this.ApiRateLimitSettings ? this.ApiRateLimitSettings.toJSON() : <any>undefined;
    data["LogSettings"] = this.LogSettings ? this.LogSettings.toJSON() : <any>undefined;
    data["ElasticSearchSettings"] = this.ElasticSearchSettings ? this.ElasticSearchSettings.toJSON() : <any>undefined;
    data["Connectors"] = this.Connectors ? this.Connectors.toJSON() : <any>undefined;
    data["CacheSettings"] = this.CacheSettings ? this.CacheSettings.toJSON() : <any>undefined;
    data["RemoteVaultSettings"] = this.RemoteVaultSettings ? this.RemoteVaultSettings.toJSON() : <any>undefined;
    data["CloudStorageDiskSettings"] = this.CloudStorageDiskSettings ? this.CloudStorageDiskSettings.toJSON() : <any>undefined;
    return data;
  }
}

/** Jupiter App Settings */
export interface IAppSettings {
  /** Api Name
   Used in dashboard to show the name, used in logs as index for elastic and other  */
  ApiName?: string | undefined;
  /** Not set this in AppSettings will be rewrite form the startup with the HostingWnvironment */
  HostingEnvironment?: string | undefined;
  /** Default Api Version Used by ApiVersioning Controller */
  DefaultApiVersion?: string | undefined;
  /** Get the Nuget Package Version */
  NugetPackageVersion?: string | undefined;
  /** Published Api Versions */
  PublishedApiVersions?: string[] | undefined;
  /** Enable the Dashboard Single Page Application as Served by the .netCore App */
  EnableDashboardSPA?: boolean;
  /** Enable the Https redirect */
  EnableHTTPSRedirect?: boolean;
  /** DB Connection Settings */
  DbConnectionSettings?: DbConnectionSettings | undefined;
  /** CORS Settings */
  CORSSettings?: CORSSettings | undefined;
  /** JWT Token Settings */
  JwtSettings?: JwtSettings | undefined;
  /** Api Rate Limit Settings */
  ApiRateLimitSettings?: ApiRateLimitSettings | undefined;
  /** Logs Settings */
  LogSettings?: LogSettings | undefined;
  /** ElasticSearch Settings */
  ElasticSearchSettings?: ElasticSearchSettings | undefined;
  /** Connectors Settings */
  Connectors?: AllConnectorsSettings | undefined;
  /** Cache Settings */
  CacheSettings?: CacheSettings | undefined;
  /** Remote Vault for AppSettings Settings */
  RemoteVaultSettings?: RemoteVaultSettings | undefined;
  /** CloudStorage Disk Settings
   Used by  */
  CloudStorageDiskSettings?: CloudStorageDiskSettings | undefined;
}

/** Db Connection Settings Class */
export class DbConnectionSettings implements IDbConnectionSettings {
  /** Db Connection Type */
  Type?: EDbConnectionType;
  /** DB Connection String */
  ConnectionString?: string | undefined;

  constructor(data?: IDbConnectionSettings) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Type = _data["Type"];
      this.ConnectionString = _data["ConnectionString"];
    }
  }

  static fromJS(data: any): DbConnectionSettings {
    data = typeof data === 'object' ? data : {};
    let result = new DbConnectionSettings();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Type"] = this.Type;
    data["ConnectionString"] = this.ConnectionString;
    return data;
  }
}

/** Db Connection Settings Class */
export interface IDbConnectionSettings {
  /** Db Connection Type */
  Type?: EDbConnectionType;
  /** DB Connection String */
  ConnectionString?: string | undefined;
}

/** Db Connection Type Enum */
export enum EDbConnectionType {
  SQL_LITE = "SQL_LITE",
  MYSQL = "MYSQL",
  SQL_SERVER = "SQL_SERVER",
}

/** CORS Settings Class */
export class CORSSettings implements ICORSSettings {
  /** Dashboard API CORS AllowedOrigins */
  JupiterDashboardApiCorsAllowedOrigins?: string[] | undefined;
  /** Jupiter API CORS AllowedOrigins */
  JupiterApiCorsAllowedOrigins?: string[] | undefined;
  /** Custom CORS Policy Name
   Used in controller as custom policy on methods
   Used to open only some Api methods to specific origins */
  CustomCorsPolicyName?: string | undefined;
  /** Custom CORS AllowedOrigins */
  CustomCorsAllowedOrigins?: string[] | undefined;

  constructor(data?: ICORSSettings) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      if (Array.isArray(_data["JupiterDashboardApiCorsAllowedOrigins"])) {
        this.JupiterDashboardApiCorsAllowedOrigins = [] as any;
        for (let item of _data["JupiterDashboardApiCorsAllowedOrigins"])
          this.JupiterDashboardApiCorsAllowedOrigins!.push(item);
      }
      if (Array.isArray(_data["JupiterApiCorsAllowedOrigins"])) {
        this.JupiterApiCorsAllowedOrigins = [] as any;
        for (let item of _data["JupiterApiCorsAllowedOrigins"])
          this.JupiterApiCorsAllowedOrigins!.push(item);
      }
      this.CustomCorsPolicyName = _data["CustomCorsPolicyName"];
      if (Array.isArray(_data["CustomCorsAllowedOrigins"])) {
        this.CustomCorsAllowedOrigins = [] as any;
        for (let item of _data["CustomCorsAllowedOrigins"])
          this.CustomCorsAllowedOrigins!.push(item);
      }
    }
  }

  static fromJS(data: any): CORSSettings {
    data = typeof data === 'object' ? data : {};
    let result = new CORSSettings();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.JupiterDashboardApiCorsAllowedOrigins)) {
      data["JupiterDashboardApiCorsAllowedOrigins"] = [];
      for (let item of this.JupiterDashboardApiCorsAllowedOrigins)
        data["JupiterDashboardApiCorsAllowedOrigins"].push(item);
    }
    if (Array.isArray(this.JupiterApiCorsAllowedOrigins)) {
      data["JupiterApiCorsAllowedOrigins"] = [];
      for (let item of this.JupiterApiCorsAllowedOrigins)
        data["JupiterApiCorsAllowedOrigins"].push(item);
    }
    data["CustomCorsPolicyName"] = this.CustomCorsPolicyName;
    if (Array.isArray(this.CustomCorsAllowedOrigins)) {
      data["CustomCorsAllowedOrigins"] = [];
      for (let item of this.CustomCorsAllowedOrigins)
        data["CustomCorsAllowedOrigins"].push(item);
    }
    return data;
  }
}

/** CORS Settings Class */
export interface ICORSSettings {
  /** Dashboard API CORS AllowedOrigins */
  JupiterDashboardApiCorsAllowedOrigins?: string[] | undefined;
  /** Jupiter API CORS AllowedOrigins */
  JupiterApiCorsAllowedOrigins?: string[] | undefined;
  /** Custom CORS Policy Name
   Used in controller as custom policy on methods
   Used to open only some Api methods to specific origins */
  CustomCorsPolicyName?: string | undefined;
  /** Custom CORS AllowedOrigins */
  CustomCorsAllowedOrigins?: string[] | undefined;
}

/** JWT Token Settings */
export class JwtSettings implements IJwtSettings {
  /** JWT Secret */
  Secret?: string | undefined;
  /** JWT Token Expire Minutes */
  JwtExpireMinutes?: number;
  /** JWT Refresh Token Expire Minutes */
  JwtRefreshExpireMinutes?: number;
  /** JWT Dashboard Audience */
  JwtDashboardAudience?: string | undefined;
  /** JWT API Audience */
  JwtApiAudience?: string | undefined;
  /** JWT API Issuer */
  JwtApiIssuer?: string | undefined;

  constructor(data?: IJwtSettings) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Secret = _data["Secret"];
      this.JwtExpireMinutes = _data["JwtExpireMinutes"];
      this.JwtRefreshExpireMinutes = _data["JwtRefreshExpireMinutes"];
      this.JwtDashboardAudience = _data["JwtDashboardAudience"];
      this.JwtApiAudience = _data["JwtApiAudience"];
      this.JwtApiIssuer = _data["JwtApiIssuer"];
    }
  }

  static fromJS(data: any): JwtSettings {
    data = typeof data === 'object' ? data : {};
    let result = new JwtSettings();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Secret"] = this.Secret;
    data["JwtExpireMinutes"] = this.JwtExpireMinutes;
    data["JwtRefreshExpireMinutes"] = this.JwtRefreshExpireMinutes;
    data["JwtDashboardAudience"] = this.JwtDashboardAudience;
    data["JwtApiAudience"] = this.JwtApiAudience;
    data["JwtApiIssuer"] = this.JwtApiIssuer;
    return data;
  }
}

/** JWT Token Settings */
export interface IJwtSettings {
  /** JWT Secret */
  Secret?: string | undefined;
  /** JWT Token Expire Minutes */
  JwtExpireMinutes?: number;
  /** JWT Refresh Token Expire Minutes */
  JwtRefreshExpireMinutes?: number;
  /** JWT Dashboard Audience */
  JwtDashboardAudience?: string | undefined;
  /** JWT API Audience */
  JwtApiAudience?: string | undefined;
  /** JWT API Issuer */
  JwtApiIssuer?: string | undefined;
}

/** API Rate Limits */
export class ApiRateLimitSettings implements IApiRateLimitSettings {
  /** Enable the restriction based on IP */
  EnableIpSafeList?: boolean;
  /** Allowed Remote IPs */
  AllowedRemoteIps?: string[] | undefined;
  /** Whitelist Paths */
  WhitelistPaths?: string[] | undefined;

  constructor(data?: IApiRateLimitSettings) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.EnableIpSafeList = _data["EnableIpSafeList"];
      if (Array.isArray(_data["AllowedRemoteIps"])) {
        this.AllowedRemoteIps = [] as any;
        for (let item of _data["AllowedRemoteIps"])
          this.AllowedRemoteIps!.push(item);
      }
      if (Array.isArray(_data["WhitelistPaths"])) {
        this.WhitelistPaths = [] as any;
        for (let item of _data["WhitelistPaths"])
          this.WhitelistPaths!.push(item);
      }
    }
  }

  static fromJS(data: any): ApiRateLimitSettings {
    data = typeof data === 'object' ? data : {};
    let result = new ApiRateLimitSettings();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["EnableIpSafeList"] = this.EnableIpSafeList;
    if (Array.isArray(this.AllowedRemoteIps)) {
      data["AllowedRemoteIps"] = [];
      for (let item of this.AllowedRemoteIps)
        data["AllowedRemoteIps"].push(item);
    }
    if (Array.isArray(this.WhitelistPaths)) {
      data["WhitelistPaths"] = [];
      for (let item of this.WhitelistPaths)
        data["WhitelistPaths"].push(item);
    }
    return data;
  }
}

/** API Rate Limits */
export interface IApiRateLimitSettings {
  /** Enable the restriction based on IP */
  EnableIpSafeList?: boolean;
  /** Allowed Remote IPs */
  AllowedRemoteIps?: string[] | undefined;
  /** Whitelist Paths */
  WhitelistPaths?: string[] | undefined;
}

/** Log Settings Class */
export class LogSettings implements ILogSettings {
  /** Enabled Log Types */
  EnabledLogTypes?: EJupiterLogType[] | undefined;
  /** If BOOK_CLOUD_STORAGE_LOGS is present
   Also if Connector Remote Call Logs is disabled or the specific operation is disabled it will be logged always
   It will log to the CloudStorageDisk */
  H2HOperationStorageLog?: EH2HOperation[] | undefined;
  /** If BOOK_CLOUD_STORAGE_LOGS is present
   By Default all Service Call Logs with Methods name as H2HOperationStorageLog will be logged
   Add any other Method Name you want to log to the CloudStorageDisk */
  AdditionalServiceCallStorageLog?: string[] | undefined;
  /** Disabled CallLogs Filters
   Used in DefaultJupiterCallLogger to check if the Call should be logged or not
   By Default ERROR status will always be logged */
  DisabledCallLogFilters?: DisabledCallLogFilter[] | undefined;
  /** ApplicationLog Name
   Used for local and for Elasticsearch index */
  ApplicationLogName?: string | undefined;
  /** API Call -&gt; ServiceCallLog Name
   Used for local and for ElasticSearch index */
  ServiceCallLogName?: string | undefined;
  /** Internal H2H Connector call -&gt; ConnectorCall LogName
   Used for local and for ElasticSearch index */
  ConnectorCallLogName?: string | undefined;
  /** External H2H Connector call -&gt; ConnectorRemoteCall LogName
   Used for local and for ElasticSearch index */
  ConnectorRemoteCallName?: string | undefined;
  /** Custom Call -&gt; CustomCall LogName
   Used for local and for ElasticSearch index */
  CustomCallLogName?: string | undefined;
  /** Console Serilog MessageTemplate */
  SerilogMessageTemplate?: string | undefined;
  /** Local Log Path */
  LocalLogsBasePath?: string | undefined;
  /** Get the full path for ApplicationLogLocalDirectory
   if Enable AzureDiagnosticLogStream -&gt; will use the specific path of Azure */
  ApplicationLogLocalDirectory?: string | undefined;
  /** Get the full path for ServiceCallLogLocalDirectory
   if Enable AzureDiagnosticLogStream -&gt; will use the specific path of Azure */
  ServiceCallLogLocalDirectory?: string | undefined;
  /** Get the full path for ConnectorCallLogLocalDirectory
   if Enable AzureDiagnosticLogStream -&gt; will use the specific path of Azure */
  ConnectorCallLogLocalDirectory?: string | undefined;
  /** Get the full path for ConnectorRemoteCallLogDirectory
   if Enable AzureDiagnosticLogStream -&gt; will use the specific path of Azure */
  ConnectorRemoteCallLogDirectory?: string | undefined;
  /** Get the full path for CustomCallLogDirectorya
   if Enable AzureDiagnosticLogStream -&gt; will use the specific path of Azure */
  CustomCallLogDirectory?: string | undefined;

  constructor(data?: ILogSettings) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      if (Array.isArray(_data["EnabledLogTypes"])) {
        this.EnabledLogTypes = [] as any;
        for (let item of _data["EnabledLogTypes"])
          this.EnabledLogTypes!.push(item);
      }
      if (Array.isArray(_data["H2HOperationStorageLog"])) {
        this.H2HOperationStorageLog = [] as any;
        for (let item of _data["H2HOperationStorageLog"])
          this.H2HOperationStorageLog!.push(item);
      }
      if (Array.isArray(_data["AdditionalServiceCallStorageLog"])) {
        this.AdditionalServiceCallStorageLog = [] as any;
        for (let item of _data["AdditionalServiceCallStorageLog"])
          this.AdditionalServiceCallStorageLog!.push(item);
      }
      if (Array.isArray(_data["DisabledCallLogFilters"])) {
        this.DisabledCallLogFilters = [] as any;
        for (let item of _data["DisabledCallLogFilters"])
          this.DisabledCallLogFilters!.push(DisabledCallLogFilter.fromJS(item));
      }
      this.ApplicationLogName = _data["ApplicationLogName"];
      this.ServiceCallLogName = _data["ServiceCallLogName"];
      this.ConnectorCallLogName = _data["ConnectorCallLogName"];
      this.ConnectorRemoteCallName = _data["ConnectorRemoteCallName"];
      this.CustomCallLogName = _data["CustomCallLogName"];
      this.SerilogMessageTemplate = _data["SerilogMessageTemplate"];
      this.LocalLogsBasePath = _data["LocalLogsBasePath"];
      this.ApplicationLogLocalDirectory = _data["ApplicationLogLocalDirectory"];
      this.ServiceCallLogLocalDirectory = _data["ServiceCallLogLocalDirectory"];
      this.ConnectorCallLogLocalDirectory = _data["ConnectorCallLogLocalDirectory"];
      this.ConnectorRemoteCallLogDirectory = _data["ConnectorRemoteCallLogDirectory"];
      this.CustomCallLogDirectory = _data["CustomCallLogDirectory"];
    }
  }

  static fromJS(data: any): LogSettings {
    data = typeof data === 'object' ? data : {};
    let result = new LogSettings();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.EnabledLogTypes)) {
      data["EnabledLogTypes"] = [];
      for (let item of this.EnabledLogTypes)
        data["EnabledLogTypes"].push(item);
    }
    if (Array.isArray(this.H2HOperationStorageLog)) {
      data["H2HOperationStorageLog"] = [];
      for (let item of this.H2HOperationStorageLog)
        data["H2HOperationStorageLog"].push(item);
    }
    if (Array.isArray(this.AdditionalServiceCallStorageLog)) {
      data["AdditionalServiceCallStorageLog"] = [];
      for (let item of this.AdditionalServiceCallStorageLog)
        data["AdditionalServiceCallStorageLog"].push(item);
    }
    if (Array.isArray(this.DisabledCallLogFilters)) {
      data["DisabledCallLogFilters"] = [];
      for (let item of this.DisabledCallLogFilters)
        data["DisabledCallLogFilters"].push(item.toJSON());
    }
    data["ApplicationLogName"] = this.ApplicationLogName;
    data["ServiceCallLogName"] = this.ServiceCallLogName;
    data["ConnectorCallLogName"] = this.ConnectorCallLogName;
    data["ConnectorRemoteCallName"] = this.ConnectorRemoteCallName;
    data["CustomCallLogName"] = this.CustomCallLogName;
    data["SerilogMessageTemplate"] = this.SerilogMessageTemplate;
    data["LocalLogsBasePath"] = this.LocalLogsBasePath;
    data["ApplicationLogLocalDirectory"] = this.ApplicationLogLocalDirectory;
    data["ServiceCallLogLocalDirectory"] = this.ServiceCallLogLocalDirectory;
    data["ConnectorCallLogLocalDirectory"] = this.ConnectorCallLogLocalDirectory;
    data["ConnectorRemoteCallLogDirectory"] = this.ConnectorRemoteCallLogDirectory;
    data["CustomCallLogDirectory"] = this.CustomCallLogDirectory;
    return data;
  }
}

/** Log Settings Class */
export interface ILogSettings {
  /** Enabled Log Types */
  EnabledLogTypes?: EJupiterLogType[] | undefined;
  /** If BOOK_CLOUD_STORAGE_LOGS is present
   Also if Connector Remote Call Logs is disabled or the specific operation is disabled it will be logged always
   It will log to the CloudStorageDisk */
  H2HOperationStorageLog?: EH2HOperation[] | undefined;
  /** If BOOK_CLOUD_STORAGE_LOGS is present
   By Default all Service Call Logs with Methods name as H2HOperationStorageLog will be logged
   Add any other Method Name you want to log to the CloudStorageDisk */
  AdditionalServiceCallStorageLog?: string[] | undefined;
  /** Disabled CallLogs Filters
   Used in DefaultJupiterCallLogger to check if the Call should be logged or not
   By Default ERROR status will always be logged */
  DisabledCallLogFilters?: DisabledCallLogFilter[] | undefined;
  /** ApplicationLog Name
   Used for local and for Elasticsearch index */
  ApplicationLogName?: string | undefined;
  /** API Call -&gt; ServiceCallLog Name
   Used for local and for ElasticSearch index */
  ServiceCallLogName?: string | undefined;
  /** Internal H2H Connector call -&gt; ConnectorCall LogName
   Used for local and for ElasticSearch index */
  ConnectorCallLogName?: string | undefined;
  /** External H2H Connector call -&gt; ConnectorRemoteCall LogName
   Used for local and for ElasticSearch index */
  ConnectorRemoteCallName?: string | undefined;
  /** Custom Call -&gt; CustomCall LogName
   Used for local and for ElasticSearch index */
  CustomCallLogName?: string | undefined;
  /** Console Serilog MessageTemplate */
  SerilogMessageTemplate?: string | undefined;
  /** Local Log Path */
  LocalLogsBasePath?: string | undefined;
  /** Get the full path for ApplicationLogLocalDirectory
   if Enable AzureDiagnosticLogStream -&gt; will use the specific path of Azure */
  ApplicationLogLocalDirectory?: string | undefined;
  /** Get the full path for ServiceCallLogLocalDirectory
   if Enable AzureDiagnosticLogStream -&gt; will use the specific path of Azure */
  ServiceCallLogLocalDirectory?: string | undefined;
  /** Get the full path for ConnectorCallLogLocalDirectory
   if Enable AzureDiagnosticLogStream -&gt; will use the specific path of Azure */
  ConnectorCallLogLocalDirectory?: string | undefined;
  /** Get the full path for ConnectorRemoteCallLogDirectory
   if Enable AzureDiagnosticLogStream -&gt; will use the specific path of Azure */
  ConnectorRemoteCallLogDirectory?: string | undefined;
  /** Get the full path for CustomCallLogDirectorya
   if Enable AzureDiagnosticLogStream -&gt; will use the specific path of Azure */
  CustomCallLogDirectory?: string | undefined;
}

/** Cache Type Enum */
export enum EJupiterLogType {
  CALL_LOGS_API_SERVICE = "CALL_LOGS_API_SERVICE",
  CALL_LOGS_CONNECTOR_REMOTE = "CALL_LOGS_CONNECTOR_REMOTE",
  CALL_LOGS_CUSTOM = "CALL_LOGS_CUSTOM",
  CALL_LOGS_INTERNAL_CONNECTOR = "CALL_LOGS_INTERNAL_CONNECTOR",
  LOCAL_APPLICATION_LOGS = "LOCAL_APPLICATION_LOGS",
  LOCAL_CALL_LOGS = "LOCAL_CALL_LOGS",
  CONSOLE_LOGS = "CONSOLE_LOGS",
  ELASTIC_APPLICATION_LOGS = "ELASTIC_APPLICATION_LOGS",
  ELASTIC_ERROR_LOGS = "ELASTIC_ERROR_LOGS",
  ELASTIC_CALL_LOGS = "ELASTIC_CALL_LOGS",
  ELASTIC_CALL_METRICS = "ELASTIC_CALL_METRICS",
  ELASTIC_APM = "ELASTIC_APM",
  AZURE_DIAGNOSTIC_LOG_STREAM = "AZURE_DIAGNOSTIC_LOG_STREAM",
  BOOK_CLOUD_STORAGE_LOGS = "BOOK_CLOUD_STORAGE_LOGS",
}

export enum EH2HOperation {
  HOTEL_DETAILS = "HOTEL_DETAILS",
  HOTEL_AVAIL = "HOTEL_AVAIL",
  HOTEL_AVAIL_CALENDAR = "HOTEL_AVAIL_CALENDAR",
  HOTEL_AVAIL_SINGLE = "HOTEL_AVAIL_SINGLE",
  HOTEL_AVAIL_EXTRAS = "HOTEL_AVAIL_EXTRAS",
  HOTEL_GET_CANCEL_POLICY = "HOTEL_GET_CANCEL_POLICY",
  HOTEL_PRICE_VERIFY = "HOTEL_PRICE_VERIFY",
  HOTEL_BOOK = "HOTEL_BOOK",
  HOTEL_BOOK_ADD = "HOTEL_BOOK_ADD",
  HOTEL_BOOK_DETAIL = "HOTEL_BOOK_DETAIL",
  HOTEL_BOOK_VERIFY = "HOTEL_BOOK_VERIFY",
  HOTEL_BOOK_SEARCH = "HOTEL_BOOK_SEARCH",
  HOTEL_BOOK_MODIFY = "HOTEL_BOOK_MODIFY",
  HOTEL_BOOK_CANCEL = "HOTEL_BOOK_CANCEL",
  HOTEL_CHAIN_LIST = "HOTEL_CHAIN_LIST",
  HOTEL_CHAIN_DETAIL = "HOTEL_CHAIN_DETAIL",
  PING = "PING",
  SESSION_CREATE = "SESSION_CREATE",
  SESSION_CLOSE = "SESSION_CLOSE",
  SESSION_REFRESH = "SESSION_REFRESH",
  SESSION_TOKEN_CREATE = "SESSION_TOKEN_CREATE",
  IGNORE_TRANSACTION = "IGNORE_TRANSACTION",
  CRYPTIC = "CRYPTIC",
  FLIGHT_AVAIL = "FLIGHT_AVAIL",
  FLIGHT_DETAILS = "FLIGHT_DETAILS",
  FLIGHT_PRICE_VERIFY = "FLIGHT_PRICE_VERIFY",
  FLIGHT_BOOK = "FLIGHT_BOOK",
  FLIGHT_PNR_RETRIEVE = "FLIGHT_PNR_RETRIEVE",
  TRAIN_AVAIL = "TRAIN_AVAIL",
  TRAIN_BOOK = "TRAIN_BOOK",
  DESTINATION_LIST = "DESTINATION_LIST",
  CONNECTOR_CUSTOM = "CONNECTOR_CUSTOM",
}

/** Disabled CallLog Filter */
export class DisabledCallLogFilter implements IDisabledCallLogFilter {
  /** Call Log Type */
  LogTypes?: EJupiterLogType[] | undefined;
  /** Call Pid StartWith */
  PidStartWith?: string | undefined;
  /** Operation Status
   ERROR Status will always be logged */
  Status?: EOperationStatus | undefined;
  /** ConnectorCode */
  ConnectorCode?: EH2HConnectorCode | undefined;
  /** ConnectorOperation */
  ConnectorOperation?: EH2HOperation | undefined;

  constructor(data?: IDisabledCallLogFilter) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      if (Array.isArray(_data["LogTypes"])) {
        this.LogTypes = [] as any;
        for (let item of _data["LogTypes"])
          this.LogTypes!.push(item);
      }
      this.PidStartWith = _data["PidStartWith"];
      this.Status = _data["Status"];
      this.ConnectorCode = _data["ConnectorCode"];
      this.ConnectorOperation = _data["ConnectorOperation"];
    }
  }

  static fromJS(data: any): DisabledCallLogFilter {
    data = typeof data === 'object' ? data : {};
    let result = new DisabledCallLogFilter();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.LogTypes)) {
      data["LogTypes"] = [];
      for (let item of this.LogTypes)
        data["LogTypes"].push(item);
    }
    data["PidStartWith"] = this.PidStartWith;
    data["Status"] = this.Status;
    data["ConnectorCode"] = this.ConnectorCode;
    data["ConnectorOperation"] = this.ConnectorOperation;
    return data;
  }
}

/** Disabled CallLog Filter */
export interface IDisabledCallLogFilter {
  /** Call Log Type */
  LogTypes?: EJupiterLogType[] | undefined;
  /** Call Pid StartWith */
  PidStartWith?: string | undefined;
  /** Operation Status
   ERROR Status will always be logged */
  Status?: EOperationStatus | undefined;
  /** ConnectorCode */
  ConnectorCode?: EH2HConnectorCode | undefined;
  /** ConnectorOperation */
  ConnectorOperation?: EH2HOperation | undefined;
}

/** ElasticSearch Settings Class */
export class ElasticSearchSettings implements IElasticSearchSettings {
  /** ElasticSearch URL */
  Url?: string | undefined;
  /** ElasticSearch User if needed */
  User?: string | undefined;
  /** ElasticSearch Password if needed */
  Password?: string | undefined;
  /** Elastic Suffix index format for Call Logs
   Default Monthly "-{0:yyyy.MM}"
   For a Dayly "-{0:yyyy.MM.dd}" */
  CallLogsSuffixIndexFormat?: string | undefined;
  /** Elastic Suffix index format for Metrics Call Logs
   Default Monthly "-{0:yyyy.MM}"
   For a Dayly "-{0:yyyy.MM.dd}" */
  MetricsCallLogsSuffixIndexFormat?: string | undefined;
  /** Elastic Suffix index format for Application and Error Logs
   Default Monthly "-{0:yyyy.MM}"
   For a Dayly "-{0:yyyy.MM.dd}" */
  ApplicationLogsSuffixIndexFormat?: string | undefined;
  /** Kibana URL */
  KibanaUrl?: string | undefined;

  constructor(data?: IElasticSearchSettings) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Url = _data["Url"];
      this.User = _data["User"];
      this.Password = _data["Password"];
      this.CallLogsSuffixIndexFormat = _data["CallLogsSuffixIndexFormat"];
      this.MetricsCallLogsSuffixIndexFormat = _data["MetricsCallLogsSuffixIndexFormat"];
      this.ApplicationLogsSuffixIndexFormat = _data["ApplicationLogsSuffixIndexFormat"];
      this.KibanaUrl = _data["KibanaUrl"];
    }
  }

  static fromJS(data: any): ElasticSearchSettings {
    data = typeof data === 'object' ? data : {};
    let result = new ElasticSearchSettings();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Url"] = this.Url;
    data["User"] = this.User;
    data["Password"] = this.Password;
    data["CallLogsSuffixIndexFormat"] = this.CallLogsSuffixIndexFormat;
    data["MetricsCallLogsSuffixIndexFormat"] = this.MetricsCallLogsSuffixIndexFormat;
    data["ApplicationLogsSuffixIndexFormat"] = this.ApplicationLogsSuffixIndexFormat;
    data["KibanaUrl"] = this.KibanaUrl;
    return data;
  }
}

/** ElasticSearch Settings Class */
export interface IElasticSearchSettings {
  /** ElasticSearch URL */
  Url?: string | undefined;
  /** ElasticSearch User if needed */
  User?: string | undefined;
  /** ElasticSearch Password if needed */
  Password?: string | undefined;
  /** Elastic Suffix index format for Call Logs
   Default Monthly "-{0:yyyy.MM}"
   For a Dayly "-{0:yyyy.MM.dd}" */
  CallLogsSuffixIndexFormat?: string | undefined;
  /** Elastic Suffix index format for Metrics Call Logs
   Default Monthly "-{0:yyyy.MM}"
   For a Dayly "-{0:yyyy.MM.dd}" */
  MetricsCallLogsSuffixIndexFormat?: string | undefined;
  /** Elastic Suffix index format for Application and Error Logs
   Default Monthly "-{0:yyyy.MM}"
   For a Dayly "-{0:yyyy.MM.dd}" */
  ApplicationLogsSuffixIndexFormat?: string | undefined;
  /** Kibana URL */
  KibanaUrl?: string | undefined;
}

/** Connector Settings */
export class AllConnectorsSettings implements IAllConnectorsSettings {
  /** Enabled Connectors */
  EnabledConnectors?: EH2HConnectorCode[] | undefined;
  /** Default Connectors Environment */
  DefaultConnectorsEnvironment?: ConnectorEnvironment[] | undefined;
  /** List of Single Connector Settings */
  ConnectorSettings?: BaseConnectorSettings[] | undefined;

  constructor(data?: IAllConnectorsSettings) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      if (Array.isArray(_data["EnabledConnectors"])) {
        this.EnabledConnectors = [] as any;
        for (let item of _data["EnabledConnectors"])
          this.EnabledConnectors!.push(item);
      }
      if (Array.isArray(_data["DefaultConnectorsEnvironment"])) {
        this.DefaultConnectorsEnvironment = [] as any;
        for (let item of _data["DefaultConnectorsEnvironment"])
          this.DefaultConnectorsEnvironment!.push(ConnectorEnvironment.fromJS(item));
      }
      if (Array.isArray(_data["ConnectorSettings"])) {
        this.ConnectorSettings = [] as any;
        for (let item of _data["ConnectorSettings"])
          this.ConnectorSettings!.push(BaseConnectorSettings.fromJS(item));
      }
    }
  }

  static fromJS(data: any): AllConnectorsSettings {
    data = typeof data === 'object' ? data : {};
    let result = new AllConnectorsSettings();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    if (Array.isArray(this.EnabledConnectors)) {
      data["EnabledConnectors"] = [];
      for (let item of this.EnabledConnectors)
        data["EnabledConnectors"].push(item);
    }
    if (Array.isArray(this.DefaultConnectorsEnvironment)) {
      data["DefaultConnectorsEnvironment"] = [];
      for (let item of this.DefaultConnectorsEnvironment)
        data["DefaultConnectorsEnvironment"].push(item.toJSON());
    }
    if (Array.isArray(this.ConnectorSettings)) {
      data["ConnectorSettings"] = [];
      for (let item of this.ConnectorSettings)
        data["ConnectorSettings"].push(item.toJSON());
    }
    return data;
  }
}

/** Connector Settings */
export interface IAllConnectorsSettings {
  /** Enabled Connectors */
  EnabledConnectors?: EH2HConnectorCode[] | undefined;
  /** Default Connectors Environment */
  DefaultConnectorsEnvironment?: ConnectorEnvironment[] | undefined;
  /** List of Single Connector Settings */
  ConnectorSettings?: BaseConnectorSettings[] | undefined;
}

export class BaseConnectorSettings implements IBaseConnectorSettings {
  /** Connector Code */
  ConnectorCode?: EH2HConnectorCode;
  /** Environment Key
   Used to add multiple times the same connector with different settings */
  Environment?: string | undefined;
  /** Connector Endpoint */
  Endpoint?: string | undefined;
  /** Disabled Connector Types */
  DisabledConnectorTypes?: EH2HConnectorType[] | undefined;
  /** Disabled Operations */
  DisabledOperations?: EH2HOperation[] | undefined;
  /** Not set this in AppSettings will be rewrite form BaseConnector constructor */
  Version?: string | undefined;
  /** Return if the current Environment is the default for the Connector
   Not set this in AppSettings will be rewrite form BaseConnector constructor */
  IsDefaultEnvironment?: boolean;
  /** Not set this in AppSettings will be rewrite form BaseConnector constructor */
  EnabledConnectorTypes?: EH2HConnectorType[] | undefined;
  /** Not set this in AppSettings will be rewrite form BaseConnector constructor */
  EnabledOperations?: EH2HOperation[] | undefined;

  constructor(data?: IBaseConnectorSettings) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.ConnectorCode = _data["ConnectorCode"];
      this.Environment = _data["Environment"];
      this.Endpoint = _data["Endpoint"];
      if (Array.isArray(_data["DisabledConnectorTypes"])) {
        this.DisabledConnectorTypes = [] as any;
        for (let item of _data["DisabledConnectorTypes"])
          this.DisabledConnectorTypes!.push(item);
      }
      if (Array.isArray(_data["DisabledOperations"])) {
        this.DisabledOperations = [] as any;
        for (let item of _data["DisabledOperations"])
          this.DisabledOperations!.push(item);
      }
      this.Version = _data["Version"];
      this.IsDefaultEnvironment = _data["IsDefaultEnvironment"];
      if (Array.isArray(_data["EnabledConnectorTypes"])) {
        this.EnabledConnectorTypes = [] as any;
        for (let item of _data["EnabledConnectorTypes"])
          this.EnabledConnectorTypes!.push(item);
      }
      if (Array.isArray(_data["EnabledOperations"])) {
        this.EnabledOperations = [] as any;
        for (let item of _data["EnabledOperations"])
          this.EnabledOperations!.push(item);
      }
    }
  }

  static fromJS(data: any): BaseConnectorSettings {
    data = typeof data === 'object' ? data : {};
    let result = new BaseConnectorSettings();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectorCode"] = this.ConnectorCode;
    data["Environment"] = this.Environment;
    data["Endpoint"] = this.Endpoint;
    if (Array.isArray(this.DisabledConnectorTypes)) {
      data["DisabledConnectorTypes"] = [];
      for (let item of this.DisabledConnectorTypes)
        data["DisabledConnectorTypes"].push(item);
    }
    if (Array.isArray(this.DisabledOperations)) {
      data["DisabledOperations"] = [];
      for (let item of this.DisabledOperations)
        data["DisabledOperations"].push(item);
    }
    data["Version"] = this.Version;
    data["IsDefaultEnvironment"] = this.IsDefaultEnvironment;
    if (Array.isArray(this.EnabledConnectorTypes)) {
      data["EnabledConnectorTypes"] = [];
      for (let item of this.EnabledConnectorTypes)
        data["EnabledConnectorTypes"].push(item);
    }
    if (Array.isArray(this.EnabledOperations)) {
      data["EnabledOperations"] = [];
      for (let item of this.EnabledOperations)
        data["EnabledOperations"].push(item);
    }
    return data;
  }
}

export interface IBaseConnectorSettings {
  /** Connector Code */
  ConnectorCode?: EH2HConnectorCode;
  /** Environment Key
   Used to add multiple times the same connector with different settings */
  Environment?: string | undefined;
  /** Connector Endpoint */
  Endpoint?: string | undefined;
  /** Disabled Connector Types */
  DisabledConnectorTypes?: EH2HConnectorType[] | undefined;
  /** Disabled Operations */
  DisabledOperations?: EH2HOperation[] | undefined;
  /** Not set this in AppSettings will be rewrite form BaseConnector constructor */
  Version?: string | undefined;
  /** Return if the current Environment is the default for the Connector
   Not set this in AppSettings will be rewrite form BaseConnector constructor */
  IsDefaultEnvironment?: boolean;
  /** Not set this in AppSettings will be rewrite form BaseConnector constructor */
  EnabledConnectorTypes?: EH2HConnectorType[] | undefined;
  /** Not set this in AppSettings will be rewrite form BaseConnector constructor */
  EnabledOperations?: EH2HOperation[] | undefined;
}

export enum EH2HConnectorType {
  HOTEL = "HOTEL",
  FLIGHT = "FLIGHT",
  SESSION_AND_CRYPTIC = "SESSION_AND_CRYPTIC",
  TOUR = "TOUR",
  TRAIN = "TRAIN",
  FERRIES = "FERRIES",
  DESTINATION = "DESTINATION",
}

/** Cache Settings Class */
export class CacheSettings implements ICacheSettings {
  /** Cache Type */
  Type?: ECacheType;
  /** Redis Settings */
  RedisSettings?: RedisSettings | undefined;

  constructor(data?: ICacheSettings) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Type = _data["Type"];
      this.RedisSettings = _data["RedisSettings"] ? RedisSettings.fromJS(_data["RedisSettings"]) : <any>undefined;
    }
  }

  static fromJS(data: any): CacheSettings {
    data = typeof data === 'object' ? data : {};
    let result = new CacheSettings();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Type"] = this.Type;
    data["RedisSettings"] = this.RedisSettings ? this.RedisSettings.toJSON() : <any>undefined;
    return data;
  }
}

/** Cache Settings Class */
export interface ICacheSettings {
  /** Cache Type */
  Type?: ECacheType;
  /** Redis Settings */
  RedisSettings?: RedisSettings | undefined;
}

/** Cache Type Enum */
export enum ECacheType {
  IN_MEMORY = "IN_MEMORY",
  REDIS = "REDIS",
}

/** Redis Settings */
export class RedisSettings implements IRedisSettings {
  /** Redis Configuration Endpoint */
  Configuration?: string | undefined;
  /** Redis Instance Name */
  InstanceName?: string | undefined;

  constructor(data?: IRedisSettings) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Configuration = _data["Configuration"];
      this.InstanceName = _data["InstanceName"];
    }
  }

  static fromJS(data: any): RedisSettings {
    data = typeof data === 'object' ? data : {};
    let result = new RedisSettings();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Configuration"] = this.Configuration;
    data["InstanceName"] = this.InstanceName;
    return data;
  }
}

/** Redis Settings */
export interface IRedisSettings {
  /** Redis Configuration Endpoint */
  Configuration?: string | undefined;
  /** Redis Instance Name */
  InstanceName?: string | undefined;
}

/** Remote Vault Settings Class */
export class RemoteVaultSettings implements IRemoteVaultSettings {
  /** RemoteVault Type */
  Type?: ERemoteVaultType;
  /** Azure KeyVault Settings */
  AzureKeyVaultSettings?: AzureKeyVaultSettings | undefined;
  /** Gcp Secrets Settings */
  GcpSecretsSettings?: GcpSecretsSettings | undefined;

  constructor(data?: IRemoteVaultSettings) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Type = _data["Type"];
      this.AzureKeyVaultSettings = _data["AzureKeyVaultSettings"] ? AzureKeyVaultSettings.fromJS(_data["AzureKeyVaultSettings"]) : <any>undefined;
      this.GcpSecretsSettings = _data["GcpSecretsSettings"] ? GcpSecretsSettings.fromJS(_data["GcpSecretsSettings"]) : <any>undefined;
    }
  }

  static fromJS(data: any): RemoteVaultSettings {
    data = typeof data === 'object' ? data : {};
    let result = new RemoteVaultSettings();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Type"] = this.Type;
    data["AzureKeyVaultSettings"] = this.AzureKeyVaultSettings ? this.AzureKeyVaultSettings.toJSON() : <any>undefined;
    data["GcpSecretsSettings"] = this.GcpSecretsSettings ? this.GcpSecretsSettings.toJSON() : <any>undefined;
    return data;
  }
}

/** Remote Vault Settings Class */
export interface IRemoteVaultSettings {
  /** RemoteVault Type */
  Type?: ERemoteVaultType;
  /** Azure KeyVault Settings */
  AzureKeyVaultSettings?: AzureKeyVaultSettings | undefined;
  /** Gcp Secrets Settings */
  GcpSecretsSettings?: GcpSecretsSettings | undefined;
}

/** Remote Vault Type Enum */
export enum ERemoteVaultType {
  AZURE_KEY_VAULT = "AZURE_KEY_VAULT",
  GCP_SECRETS = "GCP_SECRETS",
}

/** Azure KeyVault Settings */
export class AzureKeyVaultSettings implements IAzureKeyVaultSettings {
  Endpoint?: string | undefined;
  SecretKey?: string | undefined;

  constructor(data?: IAzureKeyVaultSettings) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Endpoint = _data["Endpoint"];
      this.SecretKey = _data["SecretKey"];
    }
  }

  static fromJS(data: any): AzureKeyVaultSettings {
    data = typeof data === 'object' ? data : {};
    let result = new AzureKeyVaultSettings();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Endpoint"] = this.Endpoint;
    data["SecretKey"] = this.SecretKey;
    return data;
  }
}

/** Azure KeyVault Settings */
export interface IAzureKeyVaultSettings {
  Endpoint?: string | undefined;
  SecretKey?: string | undefined;
}

/** Gcp Secrets Settings */
export class GcpSecretsSettings implements IGcpSecretsSettings {
  /** GCP Project ID  */
  ProjectId?: string | undefined;
  SecretId?: string | undefined;
  SecretVersionId?: string | undefined;

  constructor(data?: IGcpSecretsSettings) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.ProjectId = _data["ProjectId"];
      this.SecretId = _data["SecretId"];
      this.SecretVersionId = _data["SecretVersionId"];
    }
  }

  static fromJS(data: any): GcpSecretsSettings {
    data = typeof data === 'object' ? data : {};
    let result = new GcpSecretsSettings();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ProjectId"] = this.ProjectId;
    data["SecretId"] = this.SecretId;
    data["SecretVersionId"] = this.SecretVersionId;
    return data;
  }
}

/** Gcp Secrets Settings */
export interface IGcpSecretsSettings {
  /** GCP Project ID  */
  ProjectId?: string | undefined;
  SecretId?: string | undefined;
  SecretVersionId?: string | undefined;
}

/** Cloud Storage Disk Settings */
export class CloudStorageDiskSettings implements ICloudStorageDiskSettings {
  /** The Cloud Storage Type */
  CloudStorageType?: ECloudStorageType;
  /** Azure Blob Storage Settings */
  AzureBlobStorageSettings?: AzureBlobStorageSettings | undefined;

  constructor(data?: ICloudStorageDiskSettings) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.CloudStorageType = _data["CloudStorageType"];
      this.AzureBlobStorageSettings = _data["AzureBlobStorageSettings"] ? AzureBlobStorageSettings.fromJS(_data["AzureBlobStorageSettings"]) : <any>undefined;
    }
  }

  static fromJS(data: any): CloudStorageDiskSettings {
    data = typeof data === 'object' ? data : {};
    let result = new CloudStorageDiskSettings();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["CloudStorageType"] = this.CloudStorageType;
    data["AzureBlobStorageSettings"] = this.AzureBlobStorageSettings ? this.AzureBlobStorageSettings.toJSON() : <any>undefined;
    return data;
  }
}

/** Cloud Storage Disk Settings */
export interface ICloudStorageDiskSettings {
  /** The Cloud Storage Type */
  CloudStorageType?: ECloudStorageType;
  /** Azure Blob Storage Settings */
  AzureBlobStorageSettings?: AzureBlobStorageSettings | undefined;
}

/** Cache Type Enum */
export enum ECloudStorageType {
  AZURE_BLOB_STORAGE = "AZURE_BLOB_STORAGE",
}

/** Azure Blob Storage Settings */
export class AzureBlobStorageSettings implements IAzureBlobStorageSettings {
  /** Azure Blob connection string */
  ConnectionString?: string | undefined;
  /** Default Connector Log Container Name */
  DefaultCallLogsContainerName?: string | undefined;

  constructor(data?: IAzureBlobStorageSettings) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.ConnectionString = _data["ConnectionString"];
      this.DefaultCallLogsContainerName = _data["DefaultCallLogsContainerName"];
    }
  }

  static fromJS(data: any): AzureBlobStorageSettings {
    data = typeof data === 'object' ? data : {};
    let result = new AzureBlobStorageSettings();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["ConnectionString"] = this.ConnectionString;
    data["DefaultCallLogsContainerName"] = this.DefaultCallLogsContainerName;
    return data;
  }
}

/** Azure Blob Storage Settings */
export interface IAzureBlobStorageSettings {
  /** Azure Blob connection string */
  ConnectionString?: string | undefined;
  /** Default Connector Log Container Name */
  DefaultCallLogsContainerName?: string | undefined;
}

/** SwaggerUrlRQ */
export class SwaggerUrlRQ implements ISwaggerUrlRQ {
  /** Url of Swagger API to Generate the Typescript Client */
  Url?: string | undefined;
  /** The Generated Client ClassName -&gt; {ClassName}{controller}Client */
  ClientClassName?: string | undefined;

  constructor(data?: ISwaggerUrlRQ) {
    if (data) {
      for (var property in data) {
        if (data.hasOwnProperty(property))
          (<any>this)[property] = (<any>data)[property];
      }
    }
  }

  init(_data?: any) {
    if (_data) {
      this.Url = _data["Url"];
      this.ClientClassName = _data["ClientClassName"];
    }
  }

  static fromJS(data: any): SwaggerUrlRQ {
    data = typeof data === 'object' ? data : {};
    let result = new SwaggerUrlRQ();
    result.init(data);
    return result;
  }

  toJSON(data?: any) {
    data = typeof data === 'object' ? data : {};
    data["Url"] = this.Url;
    data["ClientClassName"] = this.ClientClassName;
    return data;
  }
}

/** SwaggerUrlRQ */
export interface ISwaggerUrlRQ {
  /** Url of Swagger API to Generate the Typescript Client */
  Url?: string | undefined;
  /** The Generated Client ClassName -&gt; {ClassName}{controller}Client */
  ClientClassName?: string | undefined;
}

export interface FileResponse {
  data: Blob;
  status: number;
  fileName?: string;
  headers?: { [name: string]: any };
}

export class ApiException extends Error {
  message: string;
  status: number;
  response: string;
  headers: { [key: string]: any; };
  result: any;

  constructor(message: string, status: number, response: string, headers: { [key: string]: any; }, result: any) {
    super();

    this.message = message;
    this.status = status;
    this.response = response;
    this.headers = headers;
    this.result = result;
  }

  protected isApiException = true;

  static isApiException(obj: any): obj is ApiException {
    return obj.isApiException === true;
  }
}

function throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): any {
  if (result !== null && result !== undefined)
    throw result;
  else
    throw new ApiException(message, status, response, headers, null);
}
